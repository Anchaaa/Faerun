#This whole file is dedicated to this one effect

#It *has* to be within a mother_even_if_dead or father_even_if_dead scope.

#The point of it is to give a child (PREV) the graphical culture of their parent.

#Can't use graphical_culture = PREV because it actually uses the graphics of the actual culture (rather than the ethnicity) of the parent. So a Hadhar-cultured dwarf parent who would be targeted by graphical_culture = PREV would result in a human-portrait child. Which is a no-no.

tb_graph_culture_racial = {
	gfx_culture_scope = {
		PREVPREV = {
			set_graphical_culture = PREV
		}
	}
}

# Select and set one of the aasimar subtypes.
spawn_random_aasimar = {
	add_trait = creature_aasimar
	random_list = {
		1 = {
			add_character_modifier = {
				name = angel_aasimar
				duration = -1
			}
			set_graphical_culture = aasimar
			random = {
				chance = 10
				set_graphical_culture = deva_aasimar
			}
		}
		10 = {
			trigger = {
				OR = {
					is_archon_summoning_culture = yes
					is_archon_summoning_religion = yes
				}
			}
			add_character_modifier = {
				name = archon_aasimar
				duration = -1
			}
			random_list = {
				2 = {
					spawn_random_ardling = yes
				}
				1 = {
					set_graphical_culture = aasimar
				}
			}
		}
		10 = {
			trigger = {
				OR = {
					is_asura_summoning_culture = yes
					is_asura_summoning_religion = yes
				}
			}
			add_character_modifier = {
				name = asura_aasimar
				duration = -1
			}
			set_graphical_culture = deva_aasimar
		}
		10 = {
			trigger = {
				OR = {
					is_eladrin_summoning_culture = yes
					is_eladrin_summoning_religion = yes
				}
			}
			add_character_modifier = {
				name = eladrin_aasimar
				duration = -1
			}
			set_graphical_culture = eladrin_aasimar
		}
		10 = {
			trigger = {
				OR = {
					is_einheriar_summoning_culture = yes
					is_einheriar_summoning_religion = yes
				}
			}
			add_character_modifier = {
				name = einheriar_aasimar
				duration = -1
			}
			set_graphical_culture = einheriar
		}
		10 = {
			trigger = {
				OR = {
					is_moonmaiden_summoning_culture = yes
					is_moonmaiden_summoning_religion = yes
				}
			}
			add_character_modifier = {
				name = moonmaiden_aasimar
				duration = -1
			}
			set_graphical_culture = moonmaiden
		}
		10 = {
			trigger = {
				OR = {
					is_guardinal_summoning_culture = yes
					is_guardinal_summoning_religion = yes
					is_arvoral_summoning_culture = yes
					is_arvoral_summoning_religion = yes
				}
			}
			add_character_modifier = {
				name = guardinal_aasimar
				duration = -1
			}
			spawn_random_ardling = yes
		}
		5 = {
			trigger = {
				culture_group = mulan_group
			}
			add_character_modifier = {
				name = divine_aasimar
				duration = -1
			}
			random_list = {
				5 = {
					set_graphical_culture = aasimar
				}
				1 = {
					modifier = {
						factor = 10
						culture = mulhorandi
					}
					spawn_random_ardling = yes
				}
			}
		}
	}
	# Just random ardlings.
	random = {
		chance = 20
		spawn_random_ardling = yes
	}
}

# Select and set one of the archon subtypes.
spawn_random_archon = {
	add_trait = creature_angel
	random_list = {
		80 = { # Hound archon
			set_graphical_culture = archon
		}
		10 = { # Trumpet and Sword archons
			set_graphical_culture = angel
		}
		10 = { # Warden archons
			set_graphical_culture = warden_archon
		}
	}
}

# Select and set one of the baatezu subtypes.
spawn_random_baatezu = {
	add_trait = creature_fiend
	random_list = {
		65 = {
			set_graphical_culture = cornugon
		}
		20 = {
			set_graphical_culture = baatezu
			add_trait = greater_fiend
		}
		10 = {
			set_graphical_culture = gelugon
			add_trait = greater_fiend
		}
		5 = {
			set_graphical_culture = tiefling
		}
	}
}

# Select and set one of the genasi subtypes.
spawn_random_genasi = {
	add_trait = creature_genasi
	random_list = {
		25 = {
			modifier = {
				factor = 4
				OR = {
					culture = calishite
					culture = borderer
					culture = shoon
					culture = untheric
				}
			}
			add_character_modifier = {
				name = fire_genasi
				duration = -1
			}
		}
		25 = {
			modifier = {
				factor = 4
				OR = {
					culture = calishite
					culture = borderer
					culture = shoon
				}
			}
			add_character_modifier = {
				name = air_genasi
				duration = -1
			}
		}
		25 = {
			modifier = {
				factor = 4
				OR = {
					culture = chessentan
					culture = chultan
					culture = nelanthern
					culture = reacher
					culture = tashalan
					culture = thinguth
				}
			}
			add_character_modifier = {
				name = water_genasi
				duration = -1
			}
		}
		25 = {
			modifier = {
				factor = 4
				OR = {
					culture = mulhorandi
				}
			}
			add_character_modifier = {
				name = earth_genasi
				duration = -1
			}
		}
		1 = {
			add_character_modifier = {
				name = smoke_genasi
				duration = -1
			}
		}
		1 = {
			add_character_modifier = {
				name = magma_genasi
				duration = -1
			}
		}
		1 = {
			add_character_modifier = {
				name = dust_genasi
				duration = -1
			}
		}
		1 = {
			add_character_modifier = {
				name = ice_genasi
				duration = -1
			}
		}
		1 = {
			add_character_modifier = {
				name = ooze_genasi
				duration = -1
			}
		}
		1 = {
			add_character_modifier = {
				name = steam_genasi
				duration = -1
			}
		}
	}
	set_genasi_subtype = yes
}

# Select and set one of the guardinal subtypes.
spawn_random_guardinal = {
	add_trait = creature_angel
	random_list = {
		10 = { # Ursinal
			set_graphical_culture = guardinal
		}
		10 = {
			set_graphical_culture = equinal
		}
		10 = {
			set_graphical_culture = arvoral
		}
		10 = {
			set_graphical_culture = cervidal
		}
		10 = {
			set_graphical_culture = musteval
		}
	}
}

# Select and set one of the hengeyokai subtypes.
spawn_random_hengeyokai = {
	add_trait = creature_hengeyokai
	random_list = {
		65 = { # default static gfx
			set_graphical_culture = hengeyokai
		}
		5 = {
			set_graphical_culture = cat
		}
		5 = {
			set_graphical_culture = hedgehog_culture
		}
		5 = {
			set_graphical_culture = duck_culture
		}
		5 = {
			set_graphical_culture = red_panda
		}
		5 = {
			set_graphical_culture = tengu
		}
		5 = {
			set_graphical_culture = tabaxi
		}
		5 = { # carp hengeyokai
			trigger = {
				location = {
					OR = {
						is_coastal = yes
						borders_major_river = yes
						borders_lake = yes
					}
				}
			}
			set_graphical_culture = sahuagin
		}
	}
}
# Select an animal face for an ardling
spawn_random_ardling = {
	random_list = {
		5 = {
			set_graphical_culture = tabaxi # cat
		}
		5 = {
			set_graphical_culture = tengu # crow
		}
		5 = {
			set_graphical_culture = malison # snake
		}
		5 = {
			set_graphical_culture = equinal # horse
		}
		5 = { 
			set_graphical_culture = guardinal # bear
		}
		5 = {
			set_graphical_culture = arvoral # bird
		}
		5 = {
			set_graphical_culture = cervidal # goat
		}
		5 = {
			set_graphical_culture = musteval # rodent
		}
		5 = {
			set_graphical_culture = dog_culture # dog
		}
	}
}

# Select and set one of the oni subtypes.
spawn_random_oni = {
	add_trait = creature_ogre
	random_list = {
		80 = { # ogre magi
			set_graphical_culture = ogre_magi
		}
		40 = { # common oni
			modifier = {
				factor = 2.3
				location = {
					region = kara_tur_region
				}
			}
			set_graphical_culture = red_oni
		}
		15 = { # go-zu-oni
			set_graphical_culture = minotaur
			add_trait = strong
		}
		5 = { # me-zu-oni
			set_graphical_culture = equinal
			add_trait = strong
			add_trait = robust
			add_trait = duelist
		}
	}
}

# Select and set one of the tanarri subtypes.
spawn_random_tanarri = {
	add_trait = creature_fiend
	random_list = {
		65 = { # Vrock
			set_graphical_culture = tanarri
		}
		20 = {
			set_graphical_culture = succubus
		}
		10 = {
			set_graphical_culture = nalfeshnee
			add_trait = greater_fiend
		}
		10 = { # Marilith
			set_graphical_culture = succubus
			add_trait = greater_fiend
		}
		2 = { # Pit Fiend
			set_graphical_culture = baatezu # balors look a lot like pit fiends
			add_trait = greater_fiend
		}
		2 = {
			set_graphical_culture = yugoloth # or nycaloths
			add_trait = greater_fiend
		}
		2 = {
			set_graphical_culture = cambion
		}
	}
}

# Select and set one of the tiefling subtypes.
spawn_random_tiefling = {
	add_trait = creature_tiefling
	random_list = {
		2 = {
			modifier = {
				factor = 100
				OR = {
					culture = baatezu
					religion = infernal
					secret_religion = infernal
				}
			}
			add_character_modifier = {
				name = devil_tiefling
				duration = -1
			}
		}
		2 = {
			modifier = {
				factor = 100
				OR = {
					culture = tanarri
					religion = abyssal_cult
					secret_religion = abyssal_cult
				}
			}
			add_character_modifier = {
				name = demon_tiefling
				duration = -1
			}
		}
		1 = {
			modifier = {
				factor = 100
				OR = {
					culture = yugoloth
					religion = shadow_gods
					secret_religion = shadow_gods
				}
			}
			add_character_modifier = {
				name = yugoloth_tiefling
				duration = -1
			}
		}
		1 = {
			trigger = {
				culture_group = mulan_group
			}
			add_character_modifier = {
				name = divine_tiefling
				duration = -1
			}
		}
	}
}

# Select and set one of the yuan-ti subtypes.
spawn_random_yuanti = {
	random_list = {
		75 = {
			add_trait = creature_pureblood
			if = {
				limit = { gfx_culture_scope = { evilcat_is_human_cultured = no } }
				set_graphical_culture = yuanti
			}
		}
		8 = {
			add_trait = creature_malison
			set_graphical_culture = malison
		}
		12 = {
			add_trait = creature_malison
			set_graphical_culture = halfblood
		}
		5 = {
			add_trait = creature_abomination
			set_graphical_culture = abomination
		}
	}
}

# Select and set one of the yugoloth subtypes.
spawn_random_yugoloth = {
	add_trait = creature_fiend
	random_list = {
		20 = { # Nycaloth
			set_graphical_culture = yugoloth
		}
		20 = { # Ultroloth
			set_graphical_culture = ultroloth
		}
		60 = { # Mezzoloth
			set_graphical_culture = mezzoloth
		}
		10 = { # Hydroloth
			set_graphical_culture = kuo_toa
		}
	}
}

# Find the nearest human to base a half-human child on.
human_racial = {
	if = {
		limit = {
			mother_even_if_dead = {
				trait = creature_human
			}
		}
		mother_even_if_dead = {
			tb_graph_culture_racial = yes
		}
	}
	else_if = {
		limit = {
			true_father_even_if_dead = {
				trait = creature_human
			}
		}
		true_father_even_if_dead = {
			tb_graph_culture_racial = yes
		}
	}
	else_if = {
		limit = {
			any_close_relative = {
				trait = creature_human
			}
		}
		random_close_relative = {
			limit = {
				trait = creature_human
			}
			tb_graph_culture_racial = yes
		}
	}
	else_if = {
		limit = {
			evilcat_is_human_cultured = yes
		}
		set_graphical_culture = ROOT
	}
	else_if = {
		limit = {
			true_father_even_if_dead = { evilcat_is_human_cultured = yes }
		}
		true_father_even_if_dead = {
			ROOT = { set_graphical_culture = PREV }
		}
	}
	else_if = {
		limit = {
			mother_even_if_dead = { evilcat_is_human_cultured = yes }
		}
		mother_even_if_dead = {
			ROOT = { set_graphical_culture = PREV }
		}
	}
	else_if = {
		limit = {
			any_dynasty_member = {
				trait = creature_human
			}
		}
		random_dynasty_member = {
			limit = {
				trait = creature_human
			}
			tb_graph_culture_racial = yes
		}
	}
	else_if = {
		limit = {
			any_realm_lord = {
				trait = creature_human
			}
		}
		random_realm_lord = {
			tb_graph_culture_racial = yes
		}
	}
	else_if = {
		limit = {
			any_neighbor_independent_ruler = {
				trait = creature_human
			}
		}
		random_neighbor_independent_ruler = {
			limit = {
				trait = creature_human
			}
			tb_graph_culture_racial = yes
		}
	}
	else = {
		random_playable_ruler = {
			limit = {
				trait = creature_human
			}
			tb_graph_culture_racial = yes
		}
	}
}

# Turn a character undead and change to the matching undead graphical culture.
turn_undead_effect = {
	add_trait = undead
	if = {
		limit = {
			trait = infirm
		}
		remove_trait = infirm
	}
	hidden_effect = {
		if = {
			limit = {
				OR = {
					trait = creature_human
					trait = creature_aasimar
					trait = creature_tiefling
					trait = creature_half_giant
					trait = creature_genasi
					trait = creature_gith
					trait = creature_gnome
					trait = creature_halfling
					trait = creature_centaur
					trait = creature_wemic
					trait = creature_deep_imaskari
					trait = creature_spirit_folk
				}
			}
			set_graphical_culture = undead_human
		}
		else_if = {
			limit = {
				OR = {
					trait = creature_goblin
					trait = creature_hobgoblin
					trait = creature_bugbear
					trait = creature_gnoll
					trait = creature_half_gnoll
					trait = creature_orc
					trait = creature_half_orc
					trait = creature_tanarukk
					trait = creature_kobold
					trait = creature_lizardfolk
					trait = creature_saurial
					trait = creature_sahuagin
					trait = creature_malenti
					trait = creature_dragonborn
				}
			}
			set_graphical_culture = undead_creature
		}
		else_if = {
			limit = {
				OR = {
					trait = creature_dwarf
					trait = creature_half_dwarf
				}
			}
			set_graphical_culture = dwarfvampire
		}
		else_if = {
			limit = {
				OR = {
					trait = creature_elf
					trait = creature_feyri
					trait = creature_drow
					trait = creature_draegloth
					trait = creature_half_elf
					trait = creature_malison
					trait = creature_pureblood
				}
			}
			set_graphical_culture = undeadelf
		}
		else_if = {
			limit = {
				OR = {
					trait = creature_naga
					trait = creature_abomination
					trait = creature_sarrukh
				}
			}
			set_graphical_culture = bone_naga
		}
		else_if = {
			limit = {
				OR = {
					trait = creature_ogre
					trait = creature_half_ogre
					trait = creature_ogrillon
				}
			}
			set_graphical_culture = undeadogre
		}
		else_if = {
			limit = {
				trait = creature_dragon
			}
			set_graphical_culture = dracolich
		}
	}
}

# Turn a character into a lich and change to the matching undead graphical culture.
turn_lich_effect = {
	add_artifact = lich_phylactery_artf
	if = {
		limit = {
			trait = infirm
		}
		remove_trait = infirm
	}
	hidden_effect = {
		if = {
			limit = {
				NOR = {
					trait = lich
					trait = archlich
					trait = lich_baelnorn
				}
			}
			add_trait = lich
		}

		if = {
			limit = {
				OR = {
					trait = creature_human
					trait = creature_aasimar
					trait = creature_tiefling
					trait = creature_deep_imaskari
					trait = creature_spirit_folk
					trait = creature_half_giant
					trait = creature_halfling
				}
			}
			set_graphical_culture = lich
		}
		else_if = {
			limit = {
				OR = {
					trait = creature_elf
					trait = creature_feyri
					trait = creature_drow
					trait = creature_draegloth
					trait = creature_half_elf
					trait = creature_genasi
					trait = creature_gith
					trait = creature_gnome
					trait = creature_centaur
					trait = creature_wemic
					trait = creature_malison
					trait = creature_pureblood
				}
			}
			set_graphical_culture = lichelf
		}
		else_if = {
			limit = {
				OR = {
					trait = creature_goblin
					trait = creature_hobgoblin
					trait = creature_bugbear
					trait = creature_gnoll
					trait = creature_half_gnoll
					trait = creature_orc
					trait = creature_half_orc
					trait = creature_tanarukk
					trait = creature_kobold
					trait = creature_lizardfolk
					trait = creature_saurial
					trait = creature_sahuagin
					trait = creature_malenti
					trait = creature_dragonborn
				}
			}
			set_graphical_culture = undead_creature
		}
		else_if = {
			limit = {
				OR = {
					trait = creature_dwarf
					trait = creature_half_dwarf
				}
			}
			set_graphical_culture = dwarfvampire
		}
		else_if = {
			limit = {
				OR = {
					trait = creature_naga
					trait = creature_abomination
					trait = creature_sarrukh
				}
			}
			set_graphical_culture = bone_naga
		}
		else_if = {
			limit = {
				OR = {
					trait = creature_ogre
					trait = creature_half_ogre
					trait = creature_ogrillon
				}
			}
			set_graphical_culture = undeadogre
		}
		else_if = {
			limit = {
				trait = creature_dragon
			}
			set_graphical_culture = dracolich
		}
	}
}

# Turn a character into a vampire and change to the matching undead graphical culture.
turn_vampire_effect = {
	if = {
		limit = {
			trait = infirm
		}
		remove_trait = infirm
	}
	hidden_effect = {
		if = {
			limit = {
				NOR = {
					trait = vampire
					trait = vampire_spawn
				}
			}
			add_trait = vampire
		}

		if = {
			limit = {
				OR = {
					trait = creature_human
					trait = creature_aasimar
					trait = creature_tiefling
					trait = creature_deep_imaskari
					trait = creature_spirit_folk
					trait = creature_half_giant
					trait = creature_genasi
					trait = creature_gith
					trait = creature_gnome
					trait = creature_halfling
					trait = creature_centaur
					trait = creature_wemic
				}
			}
			set_graphical_culture = vampire
		}
		else_if = {
			limit = {
				OR = {
					trait = creature_dwarf
					trait = creature_half_dwarf
				}
			}
			set_graphical_culture = dwarfvampire
		}
		else_if = {
			limit = {
				OR = {
					trait = creature_elf
					trait = creature_feyri
					trait = creature_drow
					trait = creature_draegloth
					trait = creature_half_elf
					trait = creature_malison
					trait = creature_pureblood
				}
			}
			set_graphical_culture = undeadelf
		}
		else_if = {
			limit = {
				OR = {
					trait = creature_naga
					trait = creature_abomination
					trait = creature_sarrukh
				}
			}
			set_graphical_culture = bone_naga
		}
		else_if = {
			limit = {
				OR = {
					trait = creature_ogre
					trait = creature_half_ogre
					trait = creature_ogrillon
				}
			}
			set_graphical_culture = undeadogre
		}
	}
}

# Add freckles to new characters.
set_freckles_effect = {
	if = {
		limit = {
			OR = {
				trait = creature_human
				trait = creature_genasi
				trait = creature_tiefling
				trait = creature_aasimar
				trait = creature_deep_imaskari
				trait = creature_pureblood
				trait = creature_dwarf
				trait = creature_half_dwarf
				trait = creature_drow
				trait = creature_elf
				trait = creature_half_elf
				trait = creature_feyri
				trait = creature_draegloth
				trait = creature_gnome
				trait = creature_halfling
				trait = creature_orc
				trait = creature_half_orc
				trait = creature_tanarukk
				trait = creature_spirit_folk
				trait = creature_centaur
				trait = creature_satyr
				trait = creature_wemic
				trait = creature_giant
				trait = creature_half_giant
				trait = creature_ogre
				trait = creature_half_ogre
				trait = creature_ogrillon
				trait = creature_hag
				trait = creature_hagspawn
			}
		}
		random_list = {
			2 = { add_trait = freckles_5 }
			6 = { add_trait = freckles_4 }
			7 = { add_trait = freckles }
			7 = { add_trait = freckles_2 }
			10 = { add_trait = freckles_3 }
			4500 = {
				modifier = {
					factor = 0.02
					graphical_culture = ffolkgfx
				}
				modifier = {
					factor = 0.03
					OR = {
						graphical_culture = northlandergfx
						graphical_culture = lantannagfx
					}
				}
				modifier = {
					factor = 0.04
					OR = {
						graphical_culture = highcoastergfx
						graphical_culture = reghedgfx
					}
				}
				modifier = {
					factor = 0.06
					OR = {
						graphical_culture = tethyriangfx
						graphical_culture = hobbitsgfx
						graphical_culture = dwarfgfx
						graphical_culture = norsedwarfgfx
						graphical_culture = satyrgfx
					}
				}
				modifier = {
					factor = 0.08
					OR = {
						graphical_culture = cormyreangfx
						graphical_culture = westerngfx
						graphical_culture = gnomesgfx
					}
				}
				modifier = {
					factor = 0.1
					OR = {
						graphical_culture = illuskangfx
						graphical_culture = uthgardtgfx
						graphical_culture = southerngfx
						graphical_culture = asraigfx
					}
				}
				modifier = {
					factor = 0.2
					OR = {
						graphical_culture = draevengfx
						graphical_culture = golddwarfgfx
						graphical_culture = wilddwarfgfx
						graphical_culture = centaurgfx
						graphical_culture = woodgiantgfx
					}
				}
				modifier = {
					factor = 0.5
					OR = {
						graphical_culture = chondathangfx
						graphical_culture = dalesmengfx
						graphical_culture = moonelfgfx
						graphical_culture = greenelfgfx
						graphical_culture = giantgfx
						graphical_culture = halfwoodelfgfx
						graphical_culture = halfgreenelfgfx
					}
				}
				modifier = {
					factor = 0.75
					OR = {
						graphical_culture = westernslavicgfx
						graphical_culture = croatsouthslavicgfx
						graphical_culture = serbsouthslavicgfx
						graphical_culture = calishitegfx
						graphical_culture = netheresegfx
						graphical_culture = ulutiungfx
						graphical_culture = halfsunelfgfx
						graphical_culture = halfmoonelfgfx
						graphical_culture = halfseaelfgfx
						graphical_culture = halfeladringfx
					}
				}
			}
		}
	}
}

set_aasimar_subtype = { # Set on the aasimar themselves, will check their parents and some other stuff.
	if = {
		limit = {
			OR = {
				true_father_even_if_dead = {
					graphical_culture = planetargfx
				}
				mother_even_if_dead = {
					graphical_culture = planetargfx
				}
			}
		}
		set_graphical_culture = planetar_aasimar
	}
	else_if = {
		limit = {
			OR = {
				true_father_even_if_dead = {
					graphical_culture = houndgfx
				}
				mother_even_if_dead = {
					graphical_culture = houndgfx
				}
			}
		}
		set_graphical_culture = dog_culture
	}
	else_if = {
		limit = {
			OR = {
				true_father_even_if_dead = {
					graphical_culture = wardengfx
				}
				mother_even_if_dead = {
					graphical_culture = wardengfx
				}
			}
		}
		set_graphical_culture = guardinal
	}
	else_if = {
		limit = {
			OR = {
				true_father_even_if_dead = {
					graphical_culture = asuragfx
				}
				mother_even_if_dead = {
					graphical_culture = asuragfx
				}
			}
		}
		set_graphical_culture = deva_aasimar
	}
	else_if = {
		limit = {
			OR = {
				true_father_even_if_dead = {
					graphical_culture = celestialeladringfx
				}
				mother_even_if_dead = {
					graphical_culture = celestialeladringfx
				}
			}
		}
		set_graphical_culture = eladrin_aasimar
	}
	else_if = {
		limit = {
			OR = {
				true_father_even_if_dead = {
					graphical_culture = einheriargfx
				}
				mother_even_if_dead = {
					graphical_culture = einheriargfx
				}
			}
		}
		set_graphical_culture = einheriar
	}
	else_if = {
		limit = {
			OR = {
				true_father_even_if_dead = {
					graphical_culture = moonmaidengfx
				}
				mother_even_if_dead = {
					graphical_culture = moonmaidengfx
				}
			}
		}
		set_graphical_culture = moonmaiden
	}
	else_if = {
		limit = {
			OR = {
				true_father_even_if_dead = {
					race_part_animal = yes
				}
				mother_even_if_dead = {
					race_part_animal = yes
				}
			}
		}
		spawn_random_ardling = yes
	}
	else = {
		set_graphical_culture = aasimar
		random = {
			chance = 10
			set_graphical_culture = deva_aasimar
		}
	}
}

set_tiefling_subtype = { # Set on the tiefling themselves, will check their parents and some other stuff.
	if = {
		limit = {
			OR = {
				true_father_even_if_dead = {
					trait = creature_fiend
					OR = {
						graphical_culture = nycalothgfx
						graphical_culture = nurgleprincegfx
						graphical_culture = ultrolothgfx
						graphical_culture = mezzolothgfx
						graphical_culture = slanngfx
					}
				}
				mother_even_if_dead = {
					trait = creature_fiend
					OR = {
						graphical_culture = nycalothgfx
						graphical_culture = nurgleprincegfx
						graphical_culture = ultrolothgfx
						graphical_culture = mezzolothgfx
						graphical_culture = slanngfx
					}
				}
			}
		}
		set_graphical_culture = cambion
	}
	else_if = {
		limit = {
			OR = {
				true_father_even_if_dead = {
					graphical_culture = rakshasagfx
				}
				mother_even_if_dead = {
					graphical_culture = rakshasagfx
				}
			}
		}
		set_graphical_culture = wemic
	}
	else_if = {
		limit = {
			OR = {
				true_father_even_if_dead = {
					graphical_culture = marrashgfx
				}
				mother_even_if_dead = {
					graphical_culture = marrashgfx
				}
			}
		}
		set_graphical_culture = gnoll
	}
	else = {
		set_graphical_culture = tiefling
	}
}

set_genasi_subtype = {
	random_list = {
		1 = {
			trigger = {
				OR = {
					has_character_modifier = fire_genasi
					has_character_modifier = magma_genasi
					has_character_modifier = smoke_genasi
					has_character_modifier = steam_genasi
				}
			}
			set_graphical_culture = firegenasi
		}
		1 = {
			trigger = {
				OR = {
					has_character_modifier = air_genasi
					has_character_modifier = dust_genasi
					has_character_modifier = smoke_genasi
					has_character_modifier = ice_genasi
				}
			}
			set_graphical_culture = airgenasi
		}
		1 = {
			trigger = {
				OR = {
					has_character_modifier = water_genasi
					has_character_modifier = ice_genasi
					has_character_modifier = ooze_genasi
					has_character_modifier = steam_genasi
				}
			}
			set_graphical_culture = watergenasi
		}
		1 = {
			trigger = {
				OR = {
					has_character_modifier = earth_genasi
					has_character_modifier = magma_genasi
					has_character_modifier = dust_genasi
					has_character_modifier = ooze_genasi
				}
			}
			set_graphical_culture = earthgenasi
		}
	}
}
