###REAPER's DUE###

remove_patrons_effect = {
	remove_character_modifier = patron_shiva
	remove_character_modifier = patron_vishnu
	remove_character_modifier = patron_brahma
	remove_character_modifier = patron_kali
	remove_character_modifier = patron_ganesha
	remove_character_modifier = patron_ganga
}

end_inaccessibility_effect = {
	if = {
		limit = { trait = in_hiding }

		remove_trait = in_hiding
		clr_character_flag = do_not_disturb

		add_character_modifier = {
			name = went_out_of_hiding_timer
			months = 6
			hidden = yes
		}

		character_event = { id = CM.6400 } # Notify plotters and family
	}

	if = {
		limit = { in_seclusion = yes }

		remove_character_modifier = in_seclusion

		if = {
			limit = { is_ruler = yes }

			add_character_modifier = {
				name = recently_opened_gates
				years = 1
			}

			custom_tooltip = {
				text = open_the_gates_info_tooltip

				clr_character_flag = do_not_disturb
				clr_character_flag = exposed_to_outside
				clr_character_flag = seclusion_piling_corpses
				clr_character_flag = seclusion_lazy_seduction
				clr_character_flag = seclusion_nightmares
				clr_character_flag = seclusion_gained_friend
				clr_character_flag = seclusion_child_has_lover
				clr_character_flag = seclusion_tunnel
				clr_character_flag = seclusion_food_events
				clr_character_flag = seclusion_events_on

				character_event = {
					id = RIP.11557 # Clears starvation modifiers
					days = 40
					random = 20
				}

				any_courtier = {
					clr_character_flag = seclusion_events_on
					remove_character_modifier = in_seclusion

					character_event = {
						id = RIP.11557 # Clears starvation modifiers
						days = 40
						random = 20
					}
				}

				any_vassal = {
					limit = {
						is_voter = yes
						is_landed = yes
						in_seclusion = no

						host = {
							NOT = { character = ROOT }
						}
					}

					force_host = ROOT
				}
			}

			if = { # Rejoin your liege's court if both of you are not in seclusion
				limit = {
					is_voter = yes

					liege = {
						in_seclusion = no
					}
				}

				force_host = liege
			}
		}
	}
}

will_not_marry_effect = {
	add_character_modifier = {
		name = will_not_marry
		duration = -1
	}

	add_trait = cannot_marry
}

#Use to remove any opinion giving a prison reason. Must set appropriate event targets before using this effect.
remove_prison_reason_effect = {
	event_target:remove_prison_reason_effect_accuser = {
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_traitor }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_rebel_traitor }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_dishonorable }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_regicide_traitor }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_fatwa_target }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_refused_order }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_witch }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_takfir }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_unfaithful_wife }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_cuckolded }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_charge_heresiarch }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_charge_infidel }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_charge_deviant }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_charge_illegitimate }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_charge_traitor }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_charge_slanderer }
	}
}

add_cat_effect = {
	if = {
		limit = {
			NOT = { has_character_modifier = pet_cat }
		}

		add_character_modifier = {
			name = pet_cat
			duration = -1
		}

		character_event = {
			id = 77802 # Cat dies
			days = 3000
			random = 2000
		}

		character_event = {
			id = 77861 # Cat & dog
			days = 30
			random = 100
		}
	}
}

add_pet_owl_effect = {
	add_character_modifier = {
		name = pet_owl
		duration = -1
	}

	character_event = {
		id = 77800 # Owl dies
		days = 3500
		random = 2000
	}
}

###MONKS & MYSTICS###
remove_secret_religion_trait_effect = {
	clear_secret_religion = yes
}

# give_this_warrior_lodge_religion_effect = { #Mostly for spawned characters.
	# if = {
		# limit = {
			# society_member_of = warrior_lodge_uthgardt
		# }
		# religion = uthgardt_faith
	# }
	# else_if = {
		# limit = {
			# society_member_of = warrior_lodge_orcs
			# NOT = { has_global_flag = orc_reformation }
		# }
		# religion = orc_pantheon
	# }
	# else_if = {
		# limit = {
			# society_member_of = warrior_lodge_orcs
			# has_global_flag = orc_reformation
		# }
		# religion = orc_reformed
	# }
	# else_if = {
		# limit = {
			# society_member_of = warrior_lodge_goblins
			# NOT = { has_global_flag = goblin_reformation }
		# }
		# religion = goblin_pantheon
	# }
	# else_if = {
		# limit = {
			# society_member_of = warrior_lodge_goblins
			# has_global_flag = goblin_reformation
		# }
		# religion = goblin_reformed
	# }
	# else_if = {
		# limit = {
			# society_member_of = warrior_lodge_rashemen
		# }
		# religion = rasallesian
	# }
	# else_if = {
		# limit = {
			# society_member_of = warrior_lodge_elven
		# }
		# religion = elven_pantheon
	# }
	# else_if = {
		# limit = {
			# society_member_of = warrior_lodge_dwarven
		# }
		# religion = dwarven_pantheon
	# }
# }

remove_education_effect = {
	remove_trait = naive_appeaser
	remove_trait = underhanded_rogue
	remove_trait = charismatic_negotiator
	remove_trait = grey_eminence
	remove_trait = misguided_warrior
	remove_trait = tough_soldier
	remove_trait = skilled_tactician
	remove_trait = brilliant_strategist
	remove_trait = indulgent_wastrel
	remove_trait = thrifty_clerk
	remove_trait = fortune_builder
	remove_trait = midas_touched
	remove_trait = amateurish_plotter
	remove_trait = flamboyant_schemer
	remove_trait = intricate_webweaver
	remove_trait = elusive_shadow
	remove_trait = detached_priest
	remove_trait = martial_cleric
	remove_trait = scholarly_theologian
	remove_trait = mastermind_theologian
}

random_accident_death_effect = {
	tooltip = {
		death = {
			death_reason = death_accident
		}
	}

	random_list = {
		10 = {
			trigger	= {
				host = {
					capital_scope = {
						NOT = { region = northern_zakhara_region }
					}
				}
			}

			death = {
				death_reason = death_accident_drowning
			}
		}

		10 = {
			trigger = {
				host = {
					capital_scope = {
						NOT = { region = northern_zakhara_region }
					}
				}
			}

			death = {
				death_reason = death_accident_bear
			}
		}

		10 = {
			death = {
				death_reason = death_accident_boar
			}
		}

		10 = {
			death = {
				death_reason = death_accident_fall
			}
		}

		10 = {
			death = {
				death_reason = death_accident_arrow
			}
		}

		10 = {
			death = {
				death_reason = death_accident_snakes
			}
		}

		10 = {
			trigger = {
				host = {
					capital_scope = {
						region = world_india
					}
				}
			}

			death = {
				death_reason = death_accident_tiger
			}
		}
	}
}

print_scope_effect = {
	log = "------------------------------"
	log = "- Printing the current scope -"
	log = "- This: [This.GetName][This.GetBestName]"
	log = "- Root: [Root.GetName][Root.GetBestName]"
	log = "- Prev: [Prev.GetName][Prev.GetBestName]"
	log = "- PrevPrev: [PrevPrev.GetName][PrevPrev.GetBestName]"
	log = "- PrevPrevPrev: [PrevPrevPrev.GetName][PrevPrevPrev.GetBestName]"
	log = "- PrevPrevPrevPrev: [PrevPrevPrevPrev.GetName][PrevPrevPrevPrev.GetBestName]"
	log = "- From: [From.GetName][From.GetBestName]"
	log = "- FromFrom: [FromFrom.GetName][FromFrom.GetBestName]"
	log = "- FromFromFrom: [FromFromFrom.GetName][FromFromFrom.GetBestName]"
	log = "- FromFromFromFrom: [FromFromFromFrom.GetName][FromFromFromFrom.GetBestName]"
	log = "- Event_target:test_target1: [test_target1.GetName][test_target1.GetBestName]"
	log = "- Event_target:test_target2: [test_target2.GetName][test_target2.GetBestName]"
	log = "- Event_target:test_target3: [test_target3.GetName][test_target3.GetBestName]"
	log = "------------------------------"
}

add_trait_for_prevs_secret_religion_society_effect = {
	set_secret_religion = PREV
}

flip_to_secret_religion_effect = {
	convert_to_secret_religion = yes
}

add_prevs_secret_religion_trait_effect = {
	set_secret_religion = PREV
}

#Used in different sutiation, there conditions on effect. Flag has precedence over religion.
add_secret_religion_trait_trigger_is_religion_or_old_religion_flag_clear_flag_after_effect_is_run_this_name_is_a_tribute_to_m_effect = {
	# if = {
		# limit = {
			# OR = {
				# AND = {
					# NOT = {
						# OR = {
							# has_character_flag = character_was_catholic
						# }
					# }
					# religion = catholic
				# }
				# has_character_flag = character_was_catholic
			# }
		# }
		# set_secret_religion = catholic
		# clr_character_flag = character_was_catholic
		# break = yes
	# }
}

add_religion_char_flag_effect = {
	# if = {
		# limit = { religion = catholic }
		# set_character_flag = character_was_catholic
	# }
}

clr_religion_char_flag_effect = {
	# clr_character_flag = character_was_catholic
}

event_target_old_religion_from_flag_effect = {
	# if = {
		# limit = { has_character_flag = character_was_catholic }
		# catholic = {
			# save_event_target_as = old_religion
		# }
	# }
}

# removed Zodiac effects

flip_secret_religious_community_provinces = {
	trigger_switch = {
		on_trigger = society_member_of
		# secret_religious_society_catholic = {
			# ROOT = {
				# any_demesne_province = {
					# limit = {
						# has_province_modifier = secret_catholic_community
					# }
					# religion = catholic
					# remove_province_modifier = secret_catholic_community
				# }
			# }
		# }
	}
}

# Raiding adventurer war declaration effect
raiding_adventurer_war_declaration_effect = {
	custom_tooltip = {
		text = raiding_adventurer_war_declaration_tooltip

		event_target:selling_province = {
			duchy = {
				save_event_target_as = target_duchy
			}

			event_target:raiding_adventurer = {
				unsafe_war = {
					target = PREVPREV
					casus_belli = duchy_adventure
					thirdparty_title = event_target:target_duchy
				}

				any_army = {
					set_can_toggle_looting = yes
					set_looting = no
				}
			}
		}

		clr_character_flag = adventurer_unsafe_duchy_war
		clr_character_flag = adventurer_safe_duchy_war
		clr_character_flag = negotiating_with_adventurer

		event_target:raiding_adventurer = {
			clr_character_flag = raiding_adventurer
		}
	}
}

send_final_book_outcome_event_effect = {
	#character_event = { id = JD.10070 days = 5 random = 10 } #Testing values...
	if = {
		limit = {
			society_rank = {
				rank >= 3
				society = heralds
			}
		}
		character_event = { id = JD.10070 days = 565 random = 1825 }
	}
	else = {
		character_event = { id = JD.10070 days = 565 random = 3650 }
	}
}

root_secret_religion_provinces_convert_effect = {
	ROOT = {
		trigger_switch = {
			on_trigger = society_member_of
			# secret_religious_society_catholic = {
				# PREV = {
					# any_demesne_province = {
						# limit = {
							# has_province_modifier = secret_catholic_community
						# }
						# religion = catholic
						# remove_province_modifier = secret_catholic_community
					# }
				# }
			# }
		}
	}
}

# random_coronation_events_effect - removed

remove_opinions_with_prison_reason_effect = {
	#Removes the specified opinion about "who" (PREV), from current scope
	#NOTE: If you add a new opinion with "prison_reason" to the game, add it here, too!
	remove_opinion = { modifier = opinion_dishonorable who = PREV }
	remove_opinion = { modifier = opinion_traitor who = PREV }
	remove_opinion = { modifier = opinion_rebel_traitor who = PREV }
	remove_opinion = { modifier = opinion_regicide_traitor who = PREV }
	remove_opinion = { modifier = attempted_murder_of_spouse who = PREV }
	remove_opinion = { modifier = attempted_murder_of_child who = PREV }
	remove_opinion = { modifier = attempted_murder_of_parent who = PREV }
	remove_opinion = { modifier = attempted_murder_of_sibling who = PREV }
	remove_opinion = { modifier = attempted_murder_of_vassal who = PREV }
	remove_opinion = { modifier = attempted_murder_of_spouse_vassal who = PREV }
	remove_opinion = { modifier = attempted_murder who = PREV }
	remove_opinion = { modifier = opinion_spouse_slayer who = PREV }
	remove_opinion = { modifier = opinion_murder_attempt who = PREV }
	remove_opinion = { modifier = opinion_killed_close_kin who = PREV }
	remove_opinion = { modifier = opinion_killed_father who = PREV }
	remove_opinion = { modifier = opinion_hajj_attempt_murder who = PREV }
	remove_opinion = { modifier = opinion_fatwa_target who = PREV }
	remove_opinion = { modifier = opinion_refused_order who = PREV }
	remove_opinion = { modifier = opinion_castrated_me who = PREV }
	remove_opinion = { modifier = opinion_blinded_me who = PREV }
	remove_opinion = { modifier = opinion_castrated_family who = PREV }
	remove_opinion = { modifier = opinion_castrated_close_kin who = PREV }
	remove_opinion = { modifier = opinion_blinded_family who = PREV }
	remove_opinion = { modifier = opinion_blinded_close_kin who = PREV }
	remove_opinion = { modifier = opinion_witch who = PREV }
	remove_opinion = { modifier = opinion_takfir who = PREV }
	remove_opinion = { modifier = opinion_attempted_abduction who = PREV }
	remove_opinion = { modifier = opinion_unfaithful_wife who = PREV }
	remove_opinion = { modifier = opinion_unfaithful_husband_crime who = PREV }
	remove_opinion = { modifier = opinion_cuckolded who = PREV }
	remove_opinion = { modifier = opinion_killed_lover who = PREV }
	remove_opinion = { modifier = opinion_charge_heresiarch who = PREV }
	remove_opinion = { modifier = opinion_charge_infidel who = PREV }
	remove_opinion = { modifier = opinion_charge_deviant who = PREV }
	remove_opinion = { modifier = opinion_charge_illegitimate who = PREV }
	remove_opinion = { modifier = opinion_charge_cultist who = PREV }
	remove_opinion = { modifier = opinion_charge_dw who = PREV }
	remove_opinion = { modifier = opinion_charge_traitor who = PREV }
	remove_opinion = { modifier = opinion_charge_slanderer who = PREV }
	remove_opinion = { modifier = abuse_of_office who = PREV }
	remove_opinion = { modifier = opinion_tortured_me who = PREV }
	remove_opinion = { modifier = opinion_tortured_family who = PREV }
	remove_opinion = { modifier = opinion_tortured_close_kin who = PREV }
	remove_opinion = { modifier = opinion_mutilated_me who = PREV }
	remove_opinion = { modifier = opinion_mutilated_family who = PREV }
	remove_opinion = { modifier = opinion_mutilated_close_kin who = PREV }
	remove_opinion = { modifier = opinion_thief who = PREV }
	remove_opinion = { modifier = opinion_outlawed_society who = PREV }
	remove_opinion = { modifier = opinion_accused_apostate who = PREV }
}



randomize_ABC_desc_flag_effect = {
	# Actually, this is not needed, but won't remove for fear of breaking something.
	# Instead, to randomize descs, simply define (in the event), multiple descs.

	# Example below:
	# desc = text_1
	# desc = text_2
	# desc = text_3

	clr_ABC_desc_flag_effect = yes
	random_list = {
		10 = { set_character_flag = desc_A }
		10 = { set_character_flag = desc_B }
		10 = { set_character_flag = desc_C }
	}
}
clr_ABC_desc_flag_effect = {
	clr_character_flag = desc_A
	clr_character_flag = desc_B
	clr_character_flag = desc_C
}

# Find someone to reference... (event_target:my_beloved)
# NOTE: might be platonic, children, etc
save_beloved_character_effect = {
	if = {
		limit = { # In case you have a spouse outside of your realm...
			is_married = yes

			any_spouse = {
				is_landed = yes
				ROOT_possibly_romantically_interested_trigger = yes
				root_has_terrible_opinion_modifier_of_this_trigger = no
			}
		}

		random_spouse = {
			limit = {
				is_landed = yes
				ROOT_possibly_romantically_interested_trigger = yes
				root_has_terrible_opinion_modifier_of_this_trigger = no
			}

			save_event_target_as = my_beloved
		}
	}
	else = { # In case you do not...
		any_courtier_or_vassal = {
			limit = {
				NOR = {
					character = event_target:enemy_commander
					character = event_target:enemy_liege
				}
			}

			score_value = {
				value = 1
				beloved_target_selection_score = yes
			}

			# Effect:
			save_event_target_as = my_beloved
		}
	}
}

child_of_destiny_journey_start_effect = {
	if = {
		limit = {
			has_global_flag = cod_test_values
		}
		character_event = { id = HF.210 days = 1 } # The journey begins... Test Value
	}
	else = {
		character_event = { id = HF.210 days = 200 random = 200 } # The journey begins...
	}
}

child_of_destiny_journey_resume_effect = {
	if = {
		limit = {
			has_global_flag = cod_test_values
		}
		character_event = { id = HF.210 days = 1 }  # Back to the journey tombola! Test Value
	}
	else = {
		character_event = { id = HF.210 days = 365 random = 500 } # Back to the journey tombola!
	}
}

transfer_crown_on_abdication_effect = {
	#if = {
		#limit = {
			#has_landed_title = e_hre
			#any_artifact = { artifact_type = crown_hre }
		#}
			#current_heir = { save_event_target_as = crown_hre_heir }
			#any_artifact = {
				#limit = { artifact_type = crown_hre }
				#transfer_artifact = {
					#from = PREV
					#to = event_target:crown_hre_heir
				#}
			#}
	#}
	#Now transfer all other remaining artifacts to the player_heir, who may or may not be the current_heir.
	player_heir = { save_event_target_as = scoped_player_heir }
	any_artifact = {
		#limit = {
			#NOR = {
				#artifact_type = crown_hre
			#}
		#}
		transfer_artifact = {
			from = PREV
			to = event_target:scoped_player_heir
		}
	}
}

# Referenced by the "button_rename" button in the character view
rename_character_effect = {
	prompt_name = {
		player = FROM
		type = RENAME_CHARACTER_MESSAGE
	}
}

warrior_lodge_pay_dice_debt_effect = {
	if = {
		limit = { has_character_flag = flag_betting_money_1000 }
		wealth = -1000
		if = {
			limit = { event_target:random_society_winner = { is_alive = yes } }
			event_target:random_society_winner = { wealth = 1000 }
		}
	}
	if = {
		limit = { has_character_flag = flag_betting_money_500 }
		wealth = -500
		if = {
			limit = { event_target:random_society_winner = { is_alive = yes } }
			event_target:random_society_winner = { wealth = 500 }
		}
	}
	if = {
		limit = { has_character_flag = flag_betting_money_250 }
		wealth = -250
		if = {
			limit = { event_target:random_society_winner = { is_alive = yes } }
			event_target:random_society_winner = { wealth = 250 }
		}
	}
	if = {
		limit = { has_character_flag = flag_betting_money_200 }
		wealth = -200
		if = {
			limit = { event_target:random_society_winner = { is_alive = yes } }
			event_target:random_society_winner = { wealth = 200 }
		}
	}
	if = {
		limit = { has_character_flag = flag_betting_money_100 }
		wealth = -100
		if = {
			limit = { event_target:random_society_winner = { is_alive = yes } }
			event_target:random_society_winner = { wealth = 100 }
		}
	}
	if = {
		limit = { has_character_flag = flag_betting_money_50 }
		wealth = -50
		if = {
			limit = { event_target:random_society_winner = { is_alive = yes } }
			event_target:random_society_winner = { wealth = 50 }
		}
	}
	if = {
		limit = { has_character_flag = flag_betting_money_25 }
		wealth = -25
		if = {
			limit = { event_target:random_society_winner = { is_alive = yes } }
			event_target:random_society_winner = { wealth = 25 }
		}
	}
	if = {
		limit = { has_character_flag = flag_betting_money_20 }
		wealth = -20
		if = {
			limit = { event_target:random_society_winner = { is_alive = yes } }
			event_target:random_society_winner = { wealth = 20 }
		}
	}
	if = {
		limit = { has_character_flag = flag_betting_money_10 }
		wealth = -10
		if = {
			limit = { event_target:random_society_winner = { is_alive = yes } }
			event_target:random_society_winner = { wealth = 10 }
		}
	}
}

warrior_lodge_get_dice_bet_effect = {
	if = {
		limit = { has_character_flag = flag_betting_money_1000 }
		wealth = 1000
	}
	if = {
		limit = { has_character_flag = flag_betting_money_500 }
		wealth = 500
	}
	if = {
		limit = { has_character_flag = flag_betting_money_250 }
		wealth = 250
	}
	if = {
		limit = { has_character_flag = flag_betting_money_200 }
		wealth = 200
	}
	if = {
		limit = { has_character_flag = flag_betting_money_100 }
		wealth = 100
	}
	if = {
		limit = { has_character_flag = flag_betting_money_50 }
		wealth = 50
	}
	if = {
		limit = { has_character_flag = flag_betting_money_25 }
		wealth = 25
	}
	if = {
		limit = { has_character_flag = flag_betting_money_20 }
		wealth = 20
	}
	if = {
		limit = { has_character_flag = flag_betting_money_10 }
		wealth = 10
	}
}

warrior_lodge_double_dice_bet_effect = {
	if = {
		limit = { has_character_flag = flag_betting_money_500 }
		clr_character_flag = flag_betting_money_500
		set_character_flag = flag_betting_money_1000
		custom_tooltip = { text = tooltip_betting_1000_gold }
	}
	else_if = {
		limit = { has_character_flag = flag_betting_money_250 }
		clr_character_flag = flag_betting_money_250
		set_character_flag = flag_betting_money_500
		custom_tooltip = { text = tooltip_betting_500_gold }
	}
	else_if = {
		limit = { has_character_flag = flag_betting_money_100 }
		clr_character_flag = flag_betting_money_100
		set_character_flag = flag_betting_money_200
		custom_tooltip = { text = tooltip_betting_200_gold }
	}
	else_if = {
		limit = { has_character_flag = flag_betting_money_50 }
		clr_character_flag = flag_betting_money_50
		set_character_flag = flag_betting_money_100
		custom_tooltip = { text = tooltip_betting_100_gold }
	}
	else_if = {
		limit = { has_character_flag = flag_betting_money_25 }
		clr_character_flag = flag_betting_money_25
		set_character_flag = flag_betting_money_50
		custom_tooltip = { text = tooltip_betting_50_gold }
	}
	else_if = {
		limit = { has_character_flag = flag_betting_money_10 }
		clr_character_flag = flag_betting_money_10
		set_character_flag = flag_betting_money_20
		custom_tooltip = { text = tooltip_betting_20_gold }
	}
}

this_is_becoming_grand_mistress_effect = {
	custom_tooltip = {
		text = tooltip_becoming_grand_mistress
		hidden_tooltip = { change_variable = { which = becoming_grand_mistress value = 2 } }
	}
}
this_is_becoming_iron_matron_effect = {
	custom_tooltip = {
		text = tooltip_becoming_iron_matron
		hidden_tooltip = { change_variable = { which = becoming_iron_matron value = 2 } }
	}
}
this_is_becoming_virago_effect = {
	custom_tooltip = {
		text = tooltip_becoming_virago
		hidden_tooltip = { change_variable = { which = becoming_virago value = 2 } }
	}
}

this_is_becoming_atoner_effect = {
	custom_tooltip = {
		text = tooltip_becoming_atoner
		hidden_tooltip = { change_variable = { which = becoming_atoner value = 2 } }
	}
}
this_is_becoming_manservant_effect = {
	custom_tooltip = {
		text = tooltip_becoming_manservant
		hidden_tooltip = { change_variable = { which = becoming_manservant value = 2 } }
	}
}
this_is_becoming_stud_effect = {
	custom_tooltip = {
		text = tooltip_becoming_stud
		hidden_tooltip = { change_variable = { which = becoming_stud value = 2 } }
	}
}

this_is_becoming_grand_paramour_effect = {
	custom_tooltip = {
		text = tooltip_becoming_grand_paramour
		hidden_tooltip = { change_variable = { which = becoming_grand_paramour value = 2 } }
	}
}
this_is_becoming_judicator_effect = {
	custom_tooltip = {
		text = tooltip_becoming_judicator
		hidden_tooltip = { change_variable = { which = becoming_judicator value = 2 } }
	}
}
this_is_becoming_subjugator_effect = {
	custom_tooltip = {
		text = tooltip_becoming_subjugator
		hidden_tooltip = { change_variable = { which = becoming_subjugator value = 2 } }
	}
}

this_is_becoming_prim_effect = {
	custom_tooltip = {
		text = tooltip_becoming_prim
		hidden_tooltip = { change_variable = { which = becoming_prim value = 2 } }
	}
}
this_is_becoming_doll_effect = {
	custom_tooltip = {
		text = tooltip_becoming_doll
		hidden_tooltip = { change_variable = { which = becoming_doll value = 2 } }
	}
}
this_is_becoming_breeder_effect = {
	custom_tooltip = {
		text = tooltip_becoming_breeder
		hidden_tooltip = { change_variable = { which = becoming_breeder value = 2 } }
	}
}

WL_ritual_hunt_flavor_events_effect = {
	hidden_tooltip = {
		#Flavor events: (increasing/decreasing hunt variable)
		## Character is about to fall/drown/random. (might result in Friendship/Rivalry/Love)
		## Co-hunter is about to fall/drown/random. (might result in Friendship/Rivalry/Love)
		## Characters looking for tracks. (intrigue) - paranoid
		## Characters need to examine carcass killed by target. (martial) - cruel
		## Characters reflect upon their target. (learning) - scholar
		## Characters find hermit, ask info on target. (diplomacy) - charitable
		## Characters need to interpret old map and pathways. (stewardship) - administrator

		## Characters see a bad omen. (low piety triggers) - theologian
		## Characters see a good omen. (high piety triggers) - theologian

		## Lunatic/Possessed character goes on a Wild Hunt and kills partner.

		random_list = {
			15 = { #Character is in trouble.
				trigger = { event_target:scoped_WL_co_hunter = { is_alive = yes } }
				modifier = {
					factor = 1.5
					trait = craven
				}
				modifier = {
					factor = 1.5
					trait = dull
				}
				modifier = {
					factor = 1.5
					trait = slow
				}
				modifier = {
					factor = 1.5
					trait = imbecile
				}
				modifier = {
					factor = 1.5
					trait = inbred
				}
				modifier = {
					factor = 1.5
					trait = slothful
				}
				character_event = { id = HF.25603 days = 10 random = 5 }
			}
			15 = { #Co-hunter is in trouble.
				trigger = { event_target:scoped_WL_co_hunter = { is_alive = yes } }
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { trait = craven }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { trait = dull }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { trait = slow }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { trait = imbecile }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { trait = inbred }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { trait = slothful }
				}
				character_event = { id = HF.25606 days = 10 random = 5 }
			}
			25 = { #Characters looking for tracks.
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { intrigue = 10 }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { intrigue = 14 }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { intrigue = 18 }
				}
				character_event = { id = HF.25608 days = 10 random = 5 }
			}
			25 = { #Characters need to examine carcass.
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { martial = 10 }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { martial = 14 }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { martial = 18 }
				}
				character_event = { id = HF.25609 days = 10 random = 5 }

			}
			25 = { #Characters reflect upon target.
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { learning = 10 }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { learning = 14 }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { learning = 18 }
				}
				character_event = { id = HF.25610 days = 10 random = 5 }

			}
			25 = { #Characters persuade hermit for directions.
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { diplomacy = 10 }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { diplomacy = 14 }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { diplomacy = 18 }
				}
				character_event = { id = HF.25611 days = 10 random = 5 }

			}
			25 = { #Characters need to interpret old map.
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { stewardship = 10 }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { stewardship = 14 }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { stewardship = 18 }
				}
				modifier = {
					factor = 1.5
					has_character_flag = flag_picked_ritual_co_hunter_smart
				}
				character_event = { id = HF.25612 days = 10 random = 5 }

			}
			25 = { #Characters see bad omen.
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { learning = 10 }
				}
				modifier = {
					factor = 1.5
					NOT = { piety = 50 }
				}
				modifier = {
					factor = 1.5
					NOT = { piety = 100 }
				}
				modifier = {
					factor = 1.5
					NOT = { piety = 150 }
				}
				character_event = { id = HF.25613 days = 10 random = 5 }
			}
			5 = { #Characters see good omen.
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { learning = 10 }
				}
				modifier = {
					factor = 1.5
					piety = 250
				}
				modifier = {
					factor = 1.5
					piety = 350
				}
				modifier = {
					factor = 1.5
					piety = 450
				}
				modifier = {
					factor = 1.5
					piety = 550
				}
				character_event = { id = HF.25614 days = 10 random = 5 }

			}

			100 = {  #Lunatic/Possessed ruler starts a Wild Hunt.
				trigger = {
					OR = {
						trait = possessed
						trait = lunatic
						AND = {
							has_character_modifier = lycanthropy
							OR = {
								has_character_flag = flag_hunting_wolf_norse
								has_character_flag = flag_hunting_wolf_baltic
								has_character_flag = flag_hunting_wolf_hellenic
							}
						}
					}
					event_target:scoped_WL_co_hunter = { is_alive = yes }
				}
				character_event = { id = HF.25615 days = 10 random = 5 }
			}
		}
	}
}

stable_attribute_improvement_effect = {
	hidden_effect = {
		event_target:scoped_improvement_target = {
			random_list = {
				20 = { # Education improvement
					trigger = {
						has_character_flag = flag_training_diplomacy_attribute

						# Education Improvement only unlocked by synergy
						OR = {
							has_religion_feature = religion_meritocratic
							has_religion_feature = religion_matriarchal
							has_religion_feature = religion_patriarchal
							has_religion_feature = religion_feature_ulutiuan
							has_religion_feature = religion_feature_goblin_good
						}

						OR = {
							trait = naive_appeaser
							trait = underhanded_rogue
							trait = charismatic_negotiator
						}
					}

					character_event = {
						id = HF.23761
						days = 15
						random = 15
					}

					mult_modifier = {
						factor = 1.5

						event_target:scoped_improvement_ruler = {
							attribute_diff = {
								attribute = diplomacy
								character = event_target:scoped_improvement_target
								value >= 3
							}
						}
					}

					mult_modifier = {
						factor = 1.5

						event_target:scoped_improvement_ruler = {
							attribute_diff = {
								attribute = diplomacy
								character = event_target:scoped_improvement_target
								value >= 6
							}
						}
					}

					mult_modifier = {
						factor = 1.75

						event_target:scoped_improvement_ruler = {
							attribute_diff = {
								attribute = diplomacy
								character = event_target:scoped_improvement_target
								value >= 9
							}
						}
					}
				}

				20 = {
					trigger = {
						# Education improvement
						OR = {
							has_character_flag = flag_training_martial_attribute
							has_character_flag = flag_training_combat_rating
						}

						# Education Improvement only unlocked by synergy
						OR = {
							has_religion_feature = religion_meritocratic
							has_religion_feature = religion_matriarchal
							has_religion_feature = religion_patriarchal
							has_religion_feature = religion_feature_ulutiuan
							has_religion_feature = religion_feature_goblin_good
						}

						OR = {
							trait = misguided_warrior
							trait = tough_soldier
							trait = skilled_tactician
						}
					}

					character_event = {
						id = HF.23761
						days = 15
						random = 15
					}

					mult_modifier = {
						factor = 1.5

						attribute_diff = {
							attribute = martial
							character = event_target:scoped_improvement_ruler
							value <= 3
						}
					}

					mult_modifier = {
						factor = 1.5

						attribute_diff = {
							attribute = martial
							character = event_target:scoped_improvement_ruler
							value <= 6
						}
					}

					mult_modifier = {
						factor = 1.75

						attribute_diff = {
							attribute = martial
							character = event_target:scoped_improvement_ruler
							value <= 9
						}
					}
				}

				20 = {
					trigger = {
						# Education improvement
						has_character_flag = flag_training_stewardship_attribute

						# Education Improvement only unlocked by synergy
						OR = {
							has_religion_feature = religion_meritocratic
							has_religion_feature = religion_matriarchal
							has_religion_feature = religion_patriarchal
							has_religion_feature = religion_feature_ulutiuan
							has_religion_feature = religion_feature_goblin_good
						}

						OR = {
							trait = indulgent_wastrel
							trait = thrifty_clerk
							trait = fortune_builder
						}
					}

					character_event = {
						id = HF.23761
						days = 15
						random = 15
					}

					mult_modifier = {
						factor = 1.5

						attribute_diff = {
							attribute = stewardship
							character = event_target:scoped_improvement_target
							value <= 3
						}
					}

					mult_modifier = {
						factor = 1.5

						attribute_diff = {
							attribute = stewardship
							character = event_target:scoped_improvement_target
							value <= 6
						}
					}

					mult_modifier = {
						factor = 1.75

						attribute_diff = {
							attribute = stewardship
							character = event_target:scoped_improvement_target
							value <= 9
						}
					}
				}

				20 = {
					trigger = {
						# Education improvement
						has_character_flag = flag_training_intrigue_attribute

						# Education Improvement only unlocked by synergy
						OR = {
							has_religion_feature = religion_meritocratic
							has_religion_feature = religion_matriarchal
							has_religion_feature = religion_patriarchal
							has_religion_feature = religion_feature_ulutiuan
							has_religion_feature = religion_feature_goblin_good
						}

						OR = {
							trait = amateurish_plotter
							trait = flamboyant_schemer
							trait = intricate_webweaver
						}
					}

					character_event = {
						id = HF.23761
						days = 15
						random = 15
					}

					mult_modifier = {
						factor = 1.5

						attribute_diff = {
							attribute = intrigue
							character = event_target:scoped_improvement_target
							value <= 3
						}
					}

					mult_modifier = {
						factor = 1.5

						attribute_diff = {
							attribute = intrigue
							character = event_target:scoped_improvement_target
							value <= 6
						}
					}

					mult_modifier = {
						factor = 1.75

						attribute_diff = {
							attribute = intrigue
							character = event_target:scoped_improvement_target
							value <= 9
						}
					}
				}

				20 = {
					trigger = {
						# Education improvement
						has_character_flag = flag_training_learning_attribute

						# Education Improvement only unlocked by synergy
						OR = {
							has_religion_feature = religion_meritocratic
							has_religion_feature = religion_matriarchal
							has_religion_feature = religion_patriarchal
							has_religion_feature = religion_feature_ulutiuan
							has_religion_feature = religion_feature_goblin_good
						}

						OR = {
							trait = detached_priest
							trait = martial_cleric
							trait = scholarly_theologian
						}
					}

					character_event = {
						id = HF.23761
						days = 15
						random = 15
					}

					mult_modifier = {
						factor = 1.5
						event_target:scoped_improvement_ruler = {
							has_religion_feature = religion_meritocratic # More pressure
						}
					}

					mult_modifier = {
						factor = 1.5

						attribute_diff = {
							attribute = learning
							character = event_target:scoped_improvement_target
							value <= 3
						}
					}

					mult_modifier = {
						factor = 1.5

						attribute_diff = {
							attribute = learning
							character = event_target:scoped_improvement_target
							value <= 6
						}
					}

					mult_modifier = {
						factor = 1.75

						attribute_diff = {
							attribute = learning
							character = event_target:scoped_improvement_target
							value <= 9
						}
					}
				}

				20 = { # Burnout
					trigger = {
						check_variable = {
							which = burnout_count
							value >= 1 # Never first time
						}
					}

					character_event = {
						id = HF.23762
						days = 15
						random = 15
					}

					mult_modifier = {
						factor = 1.5

						check_variable = {
							which = burnout_count
							value >= 2
						}
					}

					mult_modifier = {
						factor = 1.5

						check_variable = {
							which = burnout_count
							value >= 3
						}
					}

					mult_modifier = {
						factor = 1.5

						check_variable = {
							which = burnout_count
							value >= 4
						}
					}

					mult_modifier = {
						factor = 1.75

						check_variable = {
							which = burnout_count
							value >= 5
						}
					}

					mult_modifier = {
						factor = 2

						check_variable = {
							which = burnout_count
							value >= 8
						}
					}

					mult_modifier = {
						factor = 2

						check_variable = {
							which = burnout_count
							value >= 12
						}
					}

					mult_modifier = {
						factor = 1.5
						trait = slothful
					}

					mult_modifier = {
						factor = 1.5
						trait = stressed
					}

					mult_modifier = {
						factor = 1.75
						trait = depressed
					}

					mult_modifier = {
						factor = 1.5
						is_ill = yes
					}

					mult_modifier = {
						factor = 0.75
						trait = diligent
					}
				}

				80 = {
					# Nothing
				}
			}
		}
	}
}

clr_flags_introduce_heir_effect = {
	clr_character_flag = ZE_evt_heir_1
	clr_character_flag = ZE_evt_heir_2
	clr_character_flag = ZE_evt_heir_2B
	clr_character_flag = ZE_evt_heir_3
	clr_character_flag = ZE_evt_heir_3B
	clr_character_flag = ZE_evt_heir_4
	clr_character_flag = ZE_evt_heir_5
	clr_character_flag = ZE_evt_heir_6
	clr_character_flag = ZE_evt_heir_7
	clr_character_flag = ZE_evt_heir_8
}

reformation_god_names_changes_effect = { #Reforming religion with certain Doctrines might result in gods being added/removed/changed.
	ROOT = { #The Reformer scope.
		if = {
			limit = { #Holy Family actually becomes Holy.
				has_dlc = "Holy Fury"
				OR = {
					has_religion_feature = religion_holy_family
					has_religion_feature = religion_feature_nogari
				}
			}
			if = {
				limit = { #Reformer himself, but only if he is not becoming the High God due to synergy.
					NOT = { has_religion_feature = religion_temporal_head }
					OR = {
						AND = {
							is_female = no
							NOT = { has_religion_feature = religion_matriarchal }
						}
						AND = {
							is_female = yes
							NOT = { has_religion_feature = religion_patriarchal }
						}
					}
				}
				add_god_name = string_reformer_god
			}
			if = {
				limit = { #Spouse.
					is_married = yes
					OR = {
						AND = {
							is_female = yes
							NOT = { has_religion_feature = religion_matriarchal }
						}
						AND = {
							is_female = no
							NOT = { has_religion_feature = religion_patriarchal }
						}
					}
				}
				random_spouse = { save_event_target_as = scoped_god_spouse }
				add_god_name = string_reformer_spouse_god
			}
			if = {
				limit = { #Spouse, again.
					is_married = yes
					OR = {
						AND = {
							is_female = yes
							has_religion_feature = religion_matriarchal
						}
						AND = {
							is_female = no
							has_religion_feature = religion_patriarchal
						}
					}
				}
				random_spouse = { save_event_target_as = scoped_god_spouse }
				add_evil_god_name = string_reformer_spouse_god
			}
			if = {
				limit = { #Child.
					any_child = {
						OR = {
							AND = {
								is_female = no
								NOT = { ROOT = { has_religion_feature = religion_matriarchal } }
							}
							AND = {
								is_female = yes
								NOT = { ROOT = { has_religion_feature = religion_matriarchal } }
							}
						}
					}
				}
				random_child = {
					limit = {
						OR = {
							AND = {
								is_female = no
								NOT = { ROOT = { has_religion_feature = religion_matriarchal } }
							}
							AND = {
								is_female = yes
								NOT = { ROOT = { has_religion_feature = religion_matriarchal } }
							}
						}
					}
					preferred_limit = {
						is_primary_heir = ROOT
					}
					save_event_target_as = scoped_god_child
				}
				add_god_name = string_reformer_child_god
			}
			if = {
				limit = { #Sibling.
					any_sibling = {
						OR = {
							AND = {
								is_female = no
								NOT = { ROOT = { has_religion_feature = religion_matriarchal } }
							}
							AND = {
								is_female = yes
								NOT = { ROOT = { has_religion_feature = religion_matriarchal } }
							}
						}
					}
				}
				random_sibling = {
					limit = {
						OR = {
							AND = {
								is_female = no
								NOT = { ROOT = { has_religion_feature = religion_matriarchal } }
							}
							AND = {
								is_female = yes
								NOT = { ROOT = { has_religion_feature = religion_matriarchal } }
							}
						}
					}
					preferred_limit = {
						is_primary_heir = ROOT
					}
					save_event_target_as = scoped_god_sibling
				}
				add_god_name = string_reformer_sibling_god
			}
		}

		if = {
			limit = { #Reformer becomes the High God.
				has_dlc = "Holy Fury"
				OR = {
					has_religion_feature = religion_holy_family
					has_religion_feature = religion_feature_nogari
				}
				has_religion_feature = religion_temporal_head
			}
			set_high_god_name = string_reformer_god
		}
	}
}

princely_elective_german_elector_setup_effect = {
	e_hre = {
		#County of Koln
		#County of Mainz
		#County of Trier
		#Duchy of Bohemia
		#Duchy of Franconia
		#Duchy of Saxony
		#Duchy of Brandenburg
		save_persistent_event_target = { name = hre_title_1_per scope = c_koln }
		save_persistent_event_target = { name = hre_title_2_per scope = c_mainz }
		save_persistent_event_target = { name = hre_title_3_per scope = c_trier }
		save_persistent_event_target = { name = hre_title_4_per scope = d_bohemia }
		save_persistent_event_target = { name = hre_title_5_per scope = d_franconia }
		save_persistent_event_target = { name = hre_title_6_per scope = d_saxony }
		save_persistent_event_target = { name = hre_title_7_per scope = d_brandenburg }
	}
}

princely_elective_french_elector_setup_effect = {
	e_hre = {
		#County of Amiens
		#County of Reims
		#County of Anjou
		#Duchy of Aquitaine
		#Duchy of Burgundy
		#Duchy of Normandy
		#Duchy of Champagne
		save_persistent_event_target = { name = hre_title_1_per scope = c_amiens }
		save_persistent_event_target = { name = hre_title_2_per scope = c_reims }
		save_persistent_event_target = { name = hre_title_3_per scope = c_anjou }
		save_persistent_event_target = { name = hre_title_4_per scope = d_aquitaine }
		save_persistent_event_target = { name = hre_title_5_per scope = d_burgundy }
		save_persistent_event_target = { name = hre_title_6_per scope = d_normandy }
		save_persistent_event_target = { name = hre_title_7_per scope = d_champagne }
	}
}

princely_elective_italian_elector_setup_effect = {
	e_hre = {
		#County of Rome
		#County of Ravenna
		#County of Genoa
		#Duchy of Latium
		#Duchy of Milan
		#Duchy of Tuscany
		#Duchy of Pisa
		save_persistent_event_target = { name = hre_title_1_per scope = c_roma }
		save_persistent_event_target = { name = hre_title_2_per scope = c_ravenna }
		save_persistent_event_target = { name = hre_title_3_per scope = c_genoa }
		save_persistent_event_target = { name = hre_title_4_per scope = d_latium }
		save_persistent_event_target = { name = hre_title_5_per scope = d_lombardia }
		save_persistent_event_target = { name = hre_title_6_per scope = d_toscana }
		save_persistent_event_target = { name = hre_title_7_per scope = d_pisa }
	}
}

princely_elective_spain_elector_setup_effect = {
	e_hre = {
		#County of Santiago
		#County of Cordoba
		#County of Leon
		#Duchy of Barcelona
		#Duchy of Castille
		#Duchy of Portucale
		#Duchy of Seville
		save_persistent_event_target = { name = hre_title_1_per scope = c_santiago }
		save_persistent_event_target = { name = hre_title_2_per scope = c_leon }
		save_persistent_event_target = { name = hre_title_3_per scope = c_cordoba }
		save_persistent_event_target = { name = hre_title_4_per scope = d_barcelona }
		save_persistent_event_target = { name = hre_title_5_per scope = d_castilla }
		save_persistent_event_target = { name = hre_title_6_per scope = d_porto }
		save_persistent_event_target = { name = hre_title_7_per scope = d_sevilla }
	}
}

princely_elective_britannia_elector_setup_effect = {
	e_hre = {
		#County of Kent
		#County of Worcester
		#County of Durham
		#Duchy of Mercia
		#Duchy of Meath
		#Duchy of Albany
		#Duchy of Gwynedd
		save_persistent_event_target = { name = hre_title_1_per scope = c_kent }
		save_persistent_event_target = { name = hre_title_2_per scope = c_worcester }
		save_persistent_event_target = { name = hre_title_3_per scope = c_durham }
		save_persistent_event_target = { name = hre_title_4_per scope = d_mercia }
		save_persistent_event_target = { name = hre_title_5_per scope = d_meath }
		save_persistent_event_target = { name = hre_title_6_per scope = d_albany }
		save_persistent_event_target = { name = hre_title_7_per scope = d_gwynedd }
	}
}

princely_elective_apply_elector_setup_effect = {
	if = {
		limit = {
			capital_scope = {
				region = world_europe_south_italy
			}
		}
		hidden_tooltip = {
			princely_elective_italian_elector_setup_effect = yes
		}
	}
	else_if = {
		limit = {
			capital_scope = {
				region = world_europe_west_francia
			}
		}
		hidden_tooltip = {
			princely_elective_french_elector_setup_effect = yes
		}
	}
	else_if = {
		limit = {
			capital_scope = {
				region = world_europe_west_germania
			}
		}
		hidden_tooltip = {
			princely_elective_german_elector_setup_effect = yes
		}
	}
	else_if = {
		limit = {
			capital_scope = {
				region = world_europe_west_iberia
			}
		}
		hidden_tooltip = {
			princely_elective_spain_elector_setup_effect = yes
		}
	}
	else_if = {
		limit = {
			capital_scope = {
				region = world_europe_west_brittania
			}
		}
		hidden_tooltip = {
			princely_elective_britannia_elector_setup_effect = yes
		}
	}
	else = { #If outside usual borders, default to Germania.
		hidden_tooltip = {
			princely_elective_german_elector_setup_effect = yes
		}
	}
}

give_random_character_modifier_effect = {
	random_list = {
		100 = {
			trigger = {
				NOT = { has_character_modifier = aspiring_poet }
			}

			add_character_modifier = {
				name = aspiring_poet
				years = 5
			}

			mult_modifier = {
				factor = 2
				learning >= 12
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = aspiring_duelist }
			}

			add_character_modifier = {
				name = aspiring_duelist
				years = 5
			}

			mult_modifier = {
				factor = 2
				martial >= 12
			}

			mult_modifier = {
				factor = 2

				OR = {
					duelist_skill_is_medium_group_trigger = yes
					duelist_skill_is_high_group_trigger = yes
				}
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = aspiring_hunter }
			}

			add_character_modifier = {
				name = aspiring_hunter
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = aspiring_falconer }
			}

			add_character_modifier = {
				name = aspiring_falconer
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = learning_advice }
			}

			add_character_modifier = {
				name = learning_advice
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = slept_in_church }
			}

			add_character_modifier = {
				name = slept_in_church
				years = 5
			}

			mult_modifier = {
				factor = 2
				trait = drunkard
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = gambler }
			}

			add_character_modifier = {
				name = gambler
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = whoremaster }
			}

			add_character_modifier = {
				name = whoremaster
				years = 5
			}

			mult_modifier = {
				factor = 2
				trait = lustful
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = good_deeds }
			}

			add_character_modifier = {
				name = good_deeds
				years = 5
			}

			mult_modifier = {
				factor = 1.5
				is_benevolent_trigger = yes
			}

			mult_modifier = {
				factor = 1.5
				has_pleasant_personality_trigger = yes
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = proving_bravery }
			}

			add_character_modifier = {
				name = proving_bravery
				years = 5
			}

			mult_modifier = {
				factor = 2
				trait = brave
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = suspected_coward }
			}

			add_character_modifier = {
				name = suspected_coward
				years = 5
			}

			mult_modifier = {
				factor = 0.5
				trait = brave
			}
		}

		5 = {
			trigger = {
				NOT = { has_character_modifier = speaking_in_tounges }
			}

			add_character_modifier = {
				name = speaking_in_tounges
				years = 5
			}

			mult_modifier = {
				factor = 4
				trait = lunatic
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = good_times }
			}

			add_character_modifier = {
				name = good_times
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = good_hunt }
			}

			add_character_modifier = {
				name = good_hunt
				years = 5
			}

			mult_modifier = {
				factor = 2
				trait = hunter
			}
		}

		5 = {
			trigger = {
				NOT = { has_character_modifier = epic_hangover }
			}

			add_character_modifier = {
				name = epic_hangover
				years = 5
			}

			mult_modifier = {
				factor = 4
				trait = drunkard
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = weird_scholar }
			}

			add_character_modifier = {
				name = weird_scholar
				years = 5
			}

			mult_modifier = {
				factor = 2
				learning >= 12
			}
		}

		100 = {
			trigger = {
				has_lover = yes
				NOT = { has_character_modifier = comfort_of_lover }
			}

			add_character_modifier = {
				name = comfort_of_lover
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = sleep_deprivation }
			}

			add_character_modifier = {
				name = sleep_deprivation
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = pet_cat }
			}

			add_character_modifier = {
				name = pet_cat
				years = 5
			}

			random_list = {
				25 = {
					trigger = { is_female = yes }

					add_character_modifier = {
						name = crazy_cat_lady
						years = 5
					}
				}

				25 = {
					trigger = { is_female = no }

					add_character_modifier = {
						name = crazy_cat_lord
						years = 5
					}
				}

				50 = { } # Nothing
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = invigorated }
			}

			add_character_modifier = {
				name = invigorated
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = good_listener }
			}

			add_character_modifier = {
				name = good_listener
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = confident }
			}

			add_character_modifier = {
				name = confident
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = bad_person }
				is_benevolent_trigger = no
				has_pleasant_personality_trigger = no
			}

			add_character_modifier = {
				name = bad_person
				years = 5
			}

			mult_modifier = {
				factor = 2

				OR = {
					is_evil_trigger = yes
					has_unpleasant_personality_trigger = yes
				}
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = pet_parrot }
			}

			add_character_modifier = {
				name = pet_parrot
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = pet_owl }
			}

			add_character_modifier = {
				name = pet_owl
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = taking_it_easy }
			}

			add_character_modifier = {
				name = taking_it_easy
				years = 5
			}

			mult_modifier = {
				factor = 2
				trait = slothful
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = fell_into_the_river }
			}

			add_character_modifier = {
				name = fell_into_the_river
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = green_fingers }
			}

			add_character_modifier = {
				name = green_fingers
				years = 5
			}
		}
		# 100 = {
			# trigger = {
				# NOT = { has_character_modifier = pet_house_dog }
			# }
			# add_character_modifier = {
				# name = pet_house_dog
				# years = 5
			# }
		# }
		# 100 = {
			# trigger = {
				# NOT = { has_character_modifier = pet_hedgehog }
			# }
			# add_character_modifier = {
				# name = pet_hedgehog
				# years = 5
			# }
		# }
		# 100 = {
			# trigger = {
				# NOT = { has_character_modifier = pet_otter }
			# }
			# add_character_modifier = {
				# name = pet_otter
				# years = 5
			# }
		# }
		100 = {
			trigger = {
				NOT = { has_character_modifier = bad_nights_sleep }
			}

			add_character_modifier = {
				name = bad_nights_sleep
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = good_nights_sleep }
			}

			add_character_modifier = {
				name = good_nights_sleep
				years = 5
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = well_spoken }
			}

			add_character_modifier = {
				name = well_spoken
				years = 5
			}

			mult_modifier = {
				factor = 2
				diplomacy >= 12
			}
		}

		100 = {
			trigger = {
				NOT = { has_character_modifier = jumbling_words }
			}

			add_character_modifier = {
				name = jumbling_words
				years = 5
			}

			mult_modifier = {
				factor = 2
				diplomacy < 8
			}
		}

		100 = {
			trigger = {
				has_injury_trigger = no
			}

			apply_random_minor_injury_effect = yes
		}
	}
}

assign_random_nickname_effect = {
	random_list = {
		10 = { give_nickname = nick_the_unlucky }
		10 = { give_nickname = nick_the_lucky }
		10 = { give_nickname = nick_the_careless }
		10 = { give_nickname = nick_the_jittery }
		10 = { give_nickname = nick_the_dry_throat }
		10 = { give_nickname = nick_the_messy }
		10 = { give_nickname = nick_the_feeble }
		10 = { give_nickname = nick_the_red_cheeks }
		10 = { give_nickname = nick_the_blushing }
		10 = { give_nickname = nick_the_twitchy }

		10 = {
			trigger = { trait = brave }

			random_list = {
				10 = { give_nickname = nick_the_brave }
				10 = { give_nickname = nick_the_fearless }
			}
		}

		5 = {
			give_nickname = nick_the_clueless

			mult_modifier = {
				factor = 4
				learning < 6
			}
		}

		10 = {
			give_nickname = nick_the_ill_tempered

			mult_modifier = {
				factor = 4

				OR = {
					is_evil_trigger = yes
					has_unpleasant_personality_trigger = yes
				}
			}
		}

		10 = {
			give_nickname = nick_the_affable

			mult_modifier = {
				factor = 4

				OR = {
					has_pleasant_personality_trigger = yes
					is_pious_trigger = yes
				}
			}
		}

		10 = {
			trigger = { practical_age < 30 }

			give_nickname = nick_the_youthful
		}

		5 = {
			give_nickname = nick_the_beguiling

			mult_modifier = {
				factor = 4
				is_attractive_trigger = yes
			}
		}

		10 = {
			trigger = { trait = lustful }

			give_nickname = nick_the_lewd
		}

		5 = {
			give_nickname = nick_the_unchaste

			mult_modifier = {
				factor = 4
				trait = lustful
			}

			mult_modifier = {
				factor = 2
				has_lover = yes
			}
		}

		5 = {
			trigger = {
				uses_decadence = yes
				decadence >= 50
			}

			give_nickname = nick_the_decadent

			mult_modifier = {
				factor = 4
				decadence >= 70
			}
		}

		10 = {
			trigger = { has_unpleasant_personality_trigger = yes }

			random_list = {
				10 = { give_nickname = nick_the_shrewd }
				10 = { give_nickname = nick_the_wily }
			}
		}

		10 = {
			trigger = { has_pleasant_personality_trigger = yes }

			give_nickname = nick_the_jolly
		}

		10 = {
			trigger = { has_pleasant_personality_trigger = yes }

			random_list = {
				10 = { give_nickname = nick_the_gracious }
				10 = { give_nickname = nick_the_kind }
				10 = { give_nickname = nick_the_good }
			}
		}

		10 = {
			trigger = { trait = patient }

			random_list = {
				10 = { give_nickname = nick_the_tenacious }
				10 = { give_nickname = nick_the_mule }
			}
		}

		5 = {
			give_nickname = nick_the_strange

			mult_modifier = {
				factor = 4
				has_mental_disorder_trigger = yes
			}
		}

		10 = {
			trigger = { is_weak_trigger = yes }

			give_nickname = nick_the_clumsy
		}

		10 = {
			trigger = { is_impious_trigger = yes }

			give_nickname = nick_the_evil
		}

		10 = {
			trigger = { is_strong_trigger = yes }

			give_nickname = nick_the_strong
		}

		10 = {
			give_nickname = nick_the_merry

			mult_modifier = {
				factor = 2
				has_pleasant_personality_trigger = yes
			}
		}

		10 = {
			give_nickname = nick_the_gentle

			mult_modifier = {
				factor = 2
				has_pleasant_personality_trigger = yes
			}
		}

		10 = {
			trigger = { trait = proud }

			give_nickname = nick_the_proud
		}

		10 = {
			trigger = { trait = shy }

			give_nickname = nick_the_silent
		}

		10 = {
			trigger = { trait = chaste }

			give_nickname = nick_the_chaste
		}

		10 = {
			trigger = {
				is_female = no
				is_attractive_trigger = yes
			}

			random_list = {
				10 = { give_nickname = nick_the_handsome }
				10 = { give_nickname = nick_the_vain }
			}
		}

		10 = {
			trigger = {
				is_female = yes
				is_attractive_trigger = yes
			}

			random_list = {
				10 = { give_nickname = nick_the_fair }
				10 = { give_nickname = nick_the_vain }
				10 = { give_nickname = nick_the_flower }
			}
		}

		10 = {
			trigger = { is_unattractive_trigger = yes }

			random_list = {
				10 = { give_nickname = nick_the_hideous }
				10 = { give_nickname = nick_the_frog }
				10 = { give_nickname = nick_the_repulsive }
			}
		}

		10 = {
			trigger = { trait = lunatic }

			give_nickname = nick_the_mad
		}

		10 = {
			trigger = { trait = drunkard }

			give_nickname = nick_the_drunkard
		}

		10 = {
			trigger = { learning >= 10 }

			give_nickname = nick_the_wise

			mult_modifier = {
				factor = 2
				learning >= 14
			}
		}

		10 = {
			trigger = { is_pious_trigger = yes }

			random_list = {
				10 = { give_nickname = nick_the_pious }
				10 = { give_nickname = nick_the_blessed }
			}
		}

		10 = {
			trigger = { practical_age < 25 }

			give_nickname = nick_the_young
		}

		10 = {
			trigger = { practical_age >= 50 }

			give_nickname = nick_the_old
		}

		10 = {
			trigger = { learning >= 10 }

			random_list = {
				10 = { give_nickname = nick_the_scholar }
				10 = { give_nickname = nick_the_understanding }
				10 = { give_nickname = nick_the_healer }
			}
		}

		10 = {
			trigger = { combat_rating >= 10 }

			give_nickname = nick_the_oakskin
		}

		10 = {
			trigger = { trait = slothful }

			give_nickname = nick_the_sleepy
		}

		10 = {
			trigger = { base_health < 3 }

			random_list = {
				10 = { give_nickname = nick_butter_teeth }
				10 = { give_nickname = nick_the_toothless }
			}
		}

		10 = {
			trigger = { trait = craven }

			random_list = {
				10 = { give_nickname = nick_the_cowardly }
				10 = { give_nickname = nick_the_squirmy }
			}
		}

		10 = {
			trigger = { trait = paranoid }

			give_nickname = nick_the_frantic
		}

		10 = {
			trigger = {
				NOR = {
					trait = genius
					trait = quick
				}
			}

			random_list = {
				10 = { give_nickname = nick_the_thin_minded }
				10 = { give_nickname = nick_the_forgetful }
			}

			mult_modifier = {
				factor = 4

				OR = {
					trait = imbecile
					trait = slow
				}
			}
		}

		10 = {
			trigger = {
				NOT = { trait = gregarious }
			}

			give_nickname = nick_the_recluse

			mult_modifier = {
				factor = 2
				trait = shy
			}
		}

		10 = {
			trigger = { trait = wroth }

			give_nickname = nick_the_short_tempered
		}

		10 = {
			trigger = {
				NOT = { trait = content }
			}

			give_nickname = nick_the_whiner
		}

		10 = {
			trigger = {
				trait = deceitful
			}

			give_nickname = nick_the_liar
		}
	}
}

setup_province_pulse = {
	if = {
		limit = {
			independent = yes
			NOT = { has_global_flag = pulse_province_set }
		}

		random_province = {
			limit = { has_owner = yes }

			set_province_flag = pulse_province
			save_global_event_target_as = pulse_province
			log = "[This.GetName] (ID [This.GetID]) is the pulse province"
		}

		set_global_flag = pulse_province_set
	}
}
