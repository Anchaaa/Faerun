###REAPER's DUE###

remove_patrons_effect = {
	remove_character_modifier = patron_shiva
	remove_character_modifier = patron_vishnu
	remove_character_modifier = patron_brahma
	remove_character_modifier = patron_kali
	remove_character_modifier = patron_ganesha
	remove_character_modifier = patron_ganga
}

increase_mercenary_troop_support_effect = {
	if = {
		limit = {
			has_mercenary_maintenance_modifier = maintaining_mercenary_band_6
		}
		set_mercenary_maintenance_modifier = maintaining_mercenary_band_7
		change_title_army_size = 0.3
	}
	if = {
		limit = {
			has_mercenary_maintenance_modifier = maintaining_mercenary_band_5
		}
		set_mercenary_maintenance_modifier = maintaining_mercenary_band_6
		change_title_army_size = 0.3
	}
	if = {
		limit = {
			has_mercenary_maintenance_modifier = maintaining_mercenary_band_4
		}
		set_mercenary_maintenance_modifier = maintaining_mercenary_band_5
		change_title_army_size = 0.3
	}
	if = {
		limit = {
			has_mercenary_maintenance_modifier = maintaining_mercenary_band_3
		}
		set_mercenary_maintenance_modifier = maintaining_mercenary_band_4
		change_title_army_size = 0.3
	}
	if = {
		limit = {
			has_mercenary_maintenance_modifier = maintaining_mercenary_band_2
		}
		set_mercenary_maintenance_modifier = maintaining_mercenary_band_3
		change_title_army_size = 0.3
	}
	if = {
		limit = {
			has_mercenary_maintenance_modifier = maintaining_mercenary_band
		}
		set_mercenary_maintenance_modifier = maintaining_mercenary_band_2
		change_title_army_size = 0.3
	}
}

increase_mercenary_ambition_level_effect = {
	if = {
		limit = {
			has_character_flag = mercenary_ambition_8
		}
		clr_character_flag = mercenary_ambition_8
		set_character_flag = mercenary_ambition_9
	}
	if = {
		limit = {
			has_character_flag = mercenary_ambition_7
		}
		clr_character_flag = mercenary_ambition_7
		set_character_flag = mercenary_ambition_8
	}
	if = {
		limit = {
			has_character_flag = mercenary_ambition_6
		}
		clr_character_flag = mercenary_ambition_6
		set_character_flag = mercenary_ambition_7
	}
	if = {
		limit = {
			has_character_flag = mercenary_ambition_5
		}
		clr_character_flag = mercenary_ambition_5
		set_character_flag = mercenary_ambition_6
	}
	if = {
		limit = {
			has_character_flag = mercenary_ambition_4
		}
		clr_character_flag = mercenary_ambition_4
		set_character_flag = mercenary_ambition_5
	}
	if = {
		limit = {
			has_character_flag = mercenary_ambition_3
		}
		clr_character_flag = mercenary_ambition_3
		set_character_flag = mercenary_ambition_4
	}
	if = {
		limit = {
			has_character_flag = mercenary_ambition_2
		}
		clr_character_flag = mercenary_ambition_2
		set_character_flag = mercenary_ambition_3
	}
	if = {
		limit = {
			has_character_flag = mercenary_ambition_1
		}
		clr_character_flag = mercenary_ambition_1
		set_character_flag = mercenary_ambition_2
	}
}

decrease_mercenary_ambition_level_effect = {
	if = {
		limit = {
			has_character_flag = mercenary_ambition_2
		}
		clr_character_flag = mercenary_ambition_2
		set_character_flag = mercenary_ambition_1
	}
	if = {
		limit = {
			has_character_flag = mercenary_ambition_3
		}
		clr_character_flag = mercenary_ambition_3
		set_character_flag = mercenary_ambition_2
	}
	if = {
		limit = {
			has_character_flag = mercenary_ambition_4
		}
		clr_character_flag = mercenary_ambition_4
		set_character_flag = mercenary_ambition_3
	}
	if = {
		limit = {
			has_character_flag = mercenary_ambition_5
		}
		clr_character_flag = mercenary_ambition_5
		set_character_flag = mercenary_ambition_4
	}
	if = {
		limit = {
			has_character_flag = mercenary_ambition_6
		}
		clr_character_flag = mercenary_ambition_6
		set_character_flag = mercenary_ambition_5
	}
	if = {
		limit = {
			has_character_flag = mercenary_ambition_7
		}
		clr_character_flag = mercenary_ambition_7
		set_character_flag = mercenary_ambition_6
	}
	if = {
		limit = {
			has_character_flag = mercenary_ambition_8
		}
		clr_character_flag = mercenary_ambition_8
		set_character_flag = mercenary_ambition_7
	}
	if = {
		limit = {
			has_character_flag = mercenary_ambition_9
		}
		clr_character_flag = mercenary_ambition_9
		set_character_flag = mercenary_ambition_8
	}
}


add_symptom_effect = {
	custom_tooltip = {
		text = add_symptom_tooltip
		hidden_tooltip = {
			random_list = {
				10 = {
					modifier = {
						factor = 0
							trait = cough
					}
					character_event = { id = RIP.5000 days = 1 }
				}
				10 = {
					modifier = {
						factor = 0
							trait = fever

					}
					character_event = { id = RIP.5001 days = 1 }
				}
				10 = {
					modifier = {
						factor = 0
							trait = diarrhea

					}
					character_event = { id = RIP.5002 days = 1 }
				}
				10 = {
					modifier = {
						factor = 0
							trait = vomiting
					}
					character_event = { id = RIP.5003 days = 1 }
				}
				10 = {
					modifier = {
						factor = 0
							trait = headache
					}
					character_event = { id = RIP.5004 days = 1 }
				}
				10 = {
					modifier = {
						factor = 0
							trait = chest_pain
					}
					character_event = { id = RIP.5005 days = 1 }
				}
				10 = {
					modifier = {
						factor = 0
							trait = cramps
					}
					character_event = { id = RIP.5006 days = 1 }
				}
				10 = {
					modifier = {
						factor = 0
							trait = rash
					}
					character_event = { id = RIP.5007 days = 1 }
				}
				10 = {
					modifier = {
						factor = 0
							trait = abdominal_pain
					}
					character_event = { id = RIP.5008 days = 1 }
				}
				10 = {
					modifier = {
						factor = 0
							trait = fatigue
					}
					character_event = { id = RIP.5009 days = 1 }
				}
				10 = {
					modifier = {
						factor = 0
							trait = malaise
					}
					character_event = { id = RIP.5010 days = 1 }
				}
			}
		}
	}
}


add_maimed_trait_effect = {
	custom_tooltip = {
		text = maimed_effect_tooltip
		hidden_tooltip = {
			random_list = {
				10 = {
					modifier = {
						factor = 0
						has_dlc = "Reapers"
					}
					add_trait = maimed
					character_event = { id = 38281 }
				}
				15 = {
					modifier = {
						factor = 0
						OR = {
							trait = one_eyed
							trait = blinded
							NOT = { has_dlc = "Reapers" }
						}
					}
					add_trait = one_eyed
					character_event = { id = RIP.11501 }
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							trait = one_legged
							NOT = { has_dlc = "Reapers" }
						}
					}
					add_trait = one_legged
					character_event = { id = RIP.11503 }
				}
				20 = {
					modifier = {
						factor = 0
						OR = {
							trait = one_handed
							NOT = { has_dlc = "Reapers" }
						}
					}
					add_trait = one_handed
					character_event = { id = RIP.11502 }
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							trait = disfigured
							NOT = { has_dlc = "Reapers" }
						}
					}
					add_trait = disfigured
					character_event = { id = RIP.11504 }
				}
				5 = {
					modifier = {
						factor = 0
						OR = {
							trait = mangled
							NOT = { has_dlc = "Reapers" }
						}
					}
					add_trait = mangled
					character_event = { id = RIP.11505 }
				}
			}
		}
	}
	if = {
		limit = {
			AND = {
				has_dlc = "Reapers"
				NOT = { trait = severely_injured }
			}
		}
		add_trait = severely_injured
		hidden_tooltip = {
			random_list = {
				75 = { #Get rid of severely_injured
					character_event = { id = RIP.11000 days = 90 random = 275}
				}
				25 = { #Get rid of severely_injured but develop infection
					set_character_flag = pending_infection
					character_event = { id = RIP.11000 days = 90 random = 275}
				}
			}
		}
	}
}

add_plague_symptom_effect = {
	random_list = {
		10 = {
			modifier = {
				factor = 0
				trait = malaise
			}
			character_event = { id = RIP.5010 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = fever
			}
			character_event = { id = RIP.5001 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = cramps
			}
			character_event = { id = RIP.5006 }
		}
	}
}

add_pneumonia_symptom_effect = {
	random_list = {
		10 = {
			modifier = {
				factor = 0
				trait = cough
			}
			character_event = { id = RIP.5000 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = fever
			}
			character_event = { id = RIP.5001 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = chest_pain
			}
			character_event = { id = RIP.5005 }
		}
	}
}

add_syphilis_symptom_effect = {
	random_list = {
		10 = {
			modifier = {
				factor = 0
				trait = rash
			}
			character_event = { id = RIP.5007 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = fever
			}
			character_event = { id = RIP.5001 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = headache
			}
			character_event = { id = RIP.5004 }
		}
	}
}

add_tuberculosis_symptom_effect = {
	random_list = {
		10 = {
			modifier = {
				factor = 0
				trait = cough
			}
			character_event = { id = RIP.5000 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = fever
			}
			character_event = { id = RIP.5001 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = chest_pain
			}
			character_event = { id = RIP.5005 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = fatigue
			}
			character_event = { id = RIP.5009 }
		}
	}
}

add_typhoid_symptom_effect = {
	random_list = {
		10 = {
			modifier = {
				factor = 0
				trait = diarrhea
			}
			character_event = { id = RIP.5002 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = fever
			}
			character_event = { id = RIP.5001 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = abdominal_pain
			}
			character_event = { id = RIP.5008 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = malaise
			}
			character_event = { id = RIP.5010 }
		}
	}
}

add_typhus_symptom_effect = {
	random_list = {
		10 = {
			modifier = {
				factor = 0
				trait = diarrhea
			}
			character_event = { id = RIP.5002 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = fever
			}
			character_event = { id = RIP.5001 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = abdominal_pain
			}
			character_event = { id = RIP.5008 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = fatigue
			}
			character_event = { id = RIP.5009 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = rash
			}
			character_event = { id = RIP.5007 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = headache
			}
			character_event = { id = RIP.5004 }
		}
	}
}

add_measles_symptom_effect = {
	random_list = {
		10 = {
			modifier = {
				factor = 0
				trait = rash
			}
			character_event = { id = RIP.5007 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = fever
			}
			character_event = { id = RIP.5001 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = cough
			}
			character_event = { id = RIP.5000 }
		}
	}
}

add_smallpox_symptom_effect = {
	random_list = {
		10 = {
			modifier = {
				factor = 0
				trait = rash
			}
			character_event = { id = RIP.5007 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = fever
			}
			character_event = { id = RIP.5001 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = headache
			}
			character_event = { id = RIP.5004 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = malaise
			}
			character_event = { id = RIP.5010 }
		}
	}
}

add_flu_symptom_effect = {
	random_list = {
		10 = {
			modifier = {
				factor = 0
				trait = fatigue
			}
			character_event = { id = RIP.5009 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = fever
			}
			character_event = { id = RIP.5001 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = headache
			}
			character_event = { id = RIP.5004 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = malaise
			}
			character_event = { id = RIP.5010 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = cough
			}
			character_event = { id = RIP.5000 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = abdominal_pain
			}
			character_event = { id = RIP.5008 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = diarrhea
			}
			character_event = { id = RIP.5002 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = vomiting
			}
			character_event = { id = RIP.5003 }
		}
	}
}

add_dysentery_symptom_effect = {
	random_list = {
		10 = {
			modifier = {
				factor = 0
				trait = diarrhea
			}
			character_event = { id = RIP.5002 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = fever
			}
			character_event = { id = RIP.5001 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = abdominal_pain
			}
			character_event = { id = RIP.5008 }
		}
	}
}

add_gout_symptom_effect = {
	random_list = {
		10 = {
			modifier = {
				factor = 0
				trait = fatigue
			}
			character_event = { id = RIP.5009 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = fever
			}
			character_event = { id = RIP.5001 }
		}
	}
}

add_food_poisoning_symptom_effect = {
	random_list = {
		10 = {
			modifier = {
				factor = 0
				trait = diarrhea
			}
			character_event = { id = RIP.5002 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = fever
			}
			character_event = { id = RIP.5001 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = cramps
			}
			character_event = { id = RIP.5006 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = vomiting
			}
			character_event = { id = RIP.5003 }
		}
	}
}

add_rabies_symptom_effect = {
	random_list = {
		10 = {
			modifier = {
				factor = 0
				trait = malaise
			}
			character_event = { id = RIP.5010 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = fever
			}
			character_event = { id = RIP.5001 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = fatigue
			}
			character_event = { id = RIP.5009 }
		}
	}
}

add_cancer_symptom_effect = {
	random_list = {
		10 = {
			modifier = {
				factor = 0
				trait = fatigue
			}
			character_event = { id = RIP.5009 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = chest_pain
			}
			character_event = { id = RIP.5005 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = headache
			}
			character_event = { id = RIP.5004 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = malaise
			}
			character_event = { id = RIP.5010 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = cough
			}
			character_event = { id = RIP.5000 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = abdominal_pain
			}
			character_event = { id = RIP.5008 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = diarrhea
			}
			character_event = { id = RIP.5002 }
		}
		10 = {
			modifier = {
				factor = 0
				trait = vomiting
			}
			character_event = { id = RIP.5003 }
		}
	}
}

increase_depopulation_effect = {
	if = {
		limit = {
			has_province_modifier = depopulated_2
		}
		random_list = {
			40 = {
				modifier = {
					factor = 1.5
					AND = {
						any_province_holding = {
							OR = {
								holding_type = nomad
								holding_type = tribal
							}
						}
						NOT = { num_of_settlements = 3 }
					}
				}
				modifier = {
					factor = 1.2
					hospital_level = 1
				}
				modifier = {
					factor = 1.2
					hospital_level = 2
				}
				modifier = {
					factor = 1.2
					hospital_level = 3
				}
				modifier = {
					factor = 1.2
					hospital_level = 4
				}
				modifier = {
					factor = 1.2
					hospital_level = 5
				}
				modifier = {
					factor = 1.2
					hospital_level = 6
				}
			}
			60 = {
				modifier = {
					factor = 0
					any_province_holding = {
						NOR = {
							holding_type = city
							holding_type = temple
							holding_type = castle
							holding_type = tribal
						}
					}
				}
				remove_province_modifier = depopulated_2
				add_province_modifier = {
					name = depopulated_3
					duration = -1
				}
				clr_province_flag = recent_depopulation_2
				set_province_flag = recent_depopulation_3
			}
		}
	}
	if = {
		limit = {
			has_province_modifier = depopulated_1
		}
		random_list = {
			20 = {
				modifier = {
					factor = 4
					AND = {
						any_province_holding = {
							OR = {
								holding_type = nomad
								holding_type = tribal
							}
						}
						NOT = { num_of_settlements = 3 }
					}
				}
				modifier = {
					factor = 1.4
						hospital_level = 1
				}
				modifier = {
					factor = 1.4
						hospital_level = 2
				}
				modifier = {
					factor = 1.4
						hospital_level = 3
				}
				modifier = {
					factor = 1.4
						hospital_level = 4
				}
				modifier = {
					factor = 1.4
						hospital_level = 5
				}
				modifier = {
					factor = 1.4
						hospital_level = 6
				}
			}
			80 = {
				modifier = {
					factor = 0
					any_province_holding = {
						NOR = {
							holding_type = city
							holding_type = temple
							holding_type = castle
							holding_type = tribal
						}
					}
				}
				remove_province_modifier = depopulated_1
				add_province_modifier = {
					name = depopulated_2
					duration = -1
				}
				clr_province_flag = recent_depopulation_1
				set_province_flag = recent_depopulation_2
			}
		}

	}
	if = {
		limit = {
			NOR = {
				has_province_modifier = depopulated_1
				has_province_modifier = depopulated_2
				has_province_modifier = depopulated_3
			}
		}
		random_list = {
			5 = {
				modifier = {
					factor = 15
					AND = {
						any_province_holding = {
							OR = {
								holding_type = nomad
								holding_type = tribal
							}
						}
						NOT = { num_of_settlements = 3 }
					}
				}
				modifier = {
					factor = 1.5
					hospital_level = 1
				}
				modifier = {
					factor = 1.5
					hospital_level = 2
				}
				modifier = {
					factor = 1.5
						hospital_level = 3
				}
				modifier = {
					factor = 1.5
						hospital_level = 4
				}
				modifier = {
					factor = 1.5
						hospital_level = 5
				}
				modifier = {
					factor = 1.5
						hospital_level = 6
				}
			}
			95 = {
				modifier = {
					factor = 0
					any_province_holding = {
						NOR = {
							holding_type = city
							holding_type = temple
							holding_type = castle
							holding_type = tribal
						}
					}
				}
				set_variable = { which = prosperity_value value = 0 }
				remove_province_modifier = prosperity_modifier_1
				remove_province_modifier = prosperity_modifier_2
				remove_province_modifier = prosperity_modifier_3
				add_province_modifier = {
					name = depopulated_1
					duration = -1
				}
				set_province_flag = recent_depopulation_1
			}
		}
	}
}

decrease_depopulation_effect = {
	if = {
		limit = {
			has_province_modifier = depopulated_1
		}
		remove_province_modifier = depopulated_1
	}
	if = {
		limit = {
			has_province_modifier = depopulated_2
		}
		remove_province_modifier = depopulated_2
		add_province_modifier = {
			name = depopulated_1
			duration = -1
		}
	}
	if = {
		limit = {
			has_province_modifier = depopulated_3
		}
		remove_province_modifier = depopulated_3
		add_province_modifier = {
			name = depopulated_2
			duration = -1
		}
	}
}

prisoner_mutilate_effect = {

	random = {
		chance = 20
		if = {
				limit = { NOR = { trait = craven trait = berserker } }
				add_trait = craven
				hidden_tooltip = { character_event = { id = 38257 } }
			}
	}

	random_list = {
		80 = {
			if = {
					limit = { NOT = { trait = stressed } }
					add_trait = stressed
					hidden_tooltip = { character_event = { id = 38282 } }
				}
		}
		10 = {
			if = {
					limit = { NOT = { trait = lunatic } }
					add_trait = lunatic
					hidden_tooltip = { character_event = { id = 38304 } }
				}
		}
		10 = {
			#no effect
		}
	}

	add_trait = severely_injured
	hidden_tooltip = {
		random_list = {
			75 = { #Get rid of severely_injured
				character_event = { id = RIP.11000 days = 90 random = 275}
			}
			25 = { #Get rid of severely_injured but develop infection
				set_character_flag = pending_infection
				character_event = { id = RIP.11000 days = 90 random = 275}
			}
		}
	}
}

jailor_mutilate_effect = {

	if = {
		limit = { NOR = { trait = craven trait = berserker } }
		random = {
			chance = 20
			add_trait = craven
			hidden_tooltip = { character_event = { id = 38257 } } # Notify craven
		}
	}


	add_trait = severely_injured
	hidden_tooltip = {
		random_list = {
			75 = { #Get rid of severely_injured
				character_event = { id = RIP.11000 days = 90 random = 275}
			}
			25 = { #Get rid of severely_injured but develop infection
				set_character_flag = pending_infection
				character_event = { id = RIP.11000 days = 90 random = 275}
			}
		}
	}

	custom_tooltip = { text = might_affect_mental_health_tt }
	hidden_effect = {
		random_list = {
			80 = {
				add_trait = stressed
			}
			10 = {
				add_trait = lunatic
			}
			10 = {
				#no effect
			}
		}
	}
}

prisoner_torture_effect = {
	add_character_modifier = { name = tortured years = 2 }

	random_list = {
		80 = {
			if = {
				limit = { NOT = { trait = stressed } }
				add_trait = stressed
				hidden_tooltip = { character_event = { id = 38282 } }
			}
		}
		10 = {
			if = {
				limit = { NOR = { trait = craven trait = berserker } }
				add_trait = craven
				hidden_tooltip = { character_event = { id = 38257 } }
			}
		}
		5 = {
			if = {
				limit = { NOT = { trait = lunatic } }
				add_trait = lunatic
				hidden_tooltip = { character_event = { id = 38304 } }
			}
		}
		5 = {
			#nothing
		}
	}
}

jailor_torture_effect = {
	add_character_modifier = { name = tortured years = 2 }

	random_list = {
		80 = {
				if = {
					limit = { trait = stressed }
					health = -0.25
				}
				add_trait = stressed
			}
		10 = {
			if = {
				limit = { OR = { trait = craven trait = berserker } }
				health = -0.5
			}
			if = {
				limit = { NOR = { trait = craven trait = berserker } }
				add_trait = craven
			}
		}
		5 = {
			if = {
				limit = { trait = lunatic }
				health = -1.0
			}
			add_trait = lunatic
		}
		5 = {
			#nothing
		}
	}
}

jailor_humiliation_effect = {
	random_list = {
		15 = {
			add_trait = stressed
		}
		30 = {
			add_trait = humble
		}
		30 = {
			add_trait = shy
		}
		25 = {
			#nothing happens
		}
	}
}

prisoner_humiliation_effect = {
	random_list = {
		15 = {
			modifier = {
				factor = 0
				trait = stressed
			}
			add_trait = stressed
			hidden_tooltip = {
				character_event = { id = 38282 } # Notify Stressed
			}
		}
		30 = {
			modifier = {
				factor = 0
				trait = humble
			}
			add_trait = humble
			hidden_tooltip = {
				character_event = { id = 38260 } # Notify Humble
			}
		}
		30 = {
			modifier = {
				factor = 0
				trait = shy
			}
			add_trait = shy
			hidden_tooltip = {
				character_event = { id = 38263 } # Notify Shy
			}
		}
		25 = {
			#nothing happens
		}
	}
}

maim_hand_effect = {
	if = {
		limit = {
			NOT = {
				has_dlc = "Reapers"
			}
		}
		add_trait = maimed
	}
	if = {
		limit = {
			has_dlc = "Reapers"
		}
		if = {
			limit = {
				trait = one_handed
				NOT = { trait = mangled }
			}
			add_trait = mangled
			hidden_tooltip = { character_event = { id = RIP.11505 } }
		}
		if = {
			limit = {
				NOT = { trait = one_handed }
			}
			add_trait = one_handed
			hidden_tooltip = { character_event = { id = RIP.11502 } }
		}
	}
	add_trait = severely_injured
	hidden_tooltip = {
		hidden_tooltip = {
			random_list = {
				75 = { #Get rid of severely_injured
					character_event = { id = RIP.11000 days = 90 random = 275}
				}
				25 = { #Get rid of severely_injured but develop infection
					set_character_flag = pending_infection
					character_event = { id = RIP.11000 days = 90 random = 275}
				}
			}
		}
	}
}

mangle_effect = {
	if = {
		limit = {
			NOT = {
				has_dlc = "Reapers"
			}
		}
		add_trait = maimed
	}
	if = {
		limit = {
			has_dlc = "Reapers"
		}
		if = {
			limit = {
				NOT = { trait = mangled }
			}
			add_trait = mangled
			hidden_tooltip = { character_event = { id = RIP.11505 } }
		}
	}
	add_trait = severely_injured
	hidden_tooltip = {
		hidden_tooltip = {
			random_list = {
				75 = { #Get rid of severely_injured
					character_event = { id = RIP.11000 days = 90 random = 275}
				}
				25 = { #Get rid of severely_injured but develop infection
					set_character_flag = pending_infection
					character_event = { id = RIP.11000 days = 90 random = 275}
				}
			}
		}
	}
}

remove_treatment_modifiers_effect = {
	remove_character_modifier = successful_treatment_1
	remove_character_modifier = successful_treatment_2
	remove_character_modifier = successful_treatment_3
	remove_character_modifier = failed_treatment_1
	remove_character_modifier = failed_treatment_2
	remove_character_modifier = mystic_treatment_decent
	remove_character_modifier = mystic_treatment_poor
	remove_character_modifier = mystic_treatment_terrible
	remove_character_modifier = symptom_treatment_1
	remove_character_modifier = symptom_treatment_2
	remove_character_modifier = symptom_treatment_3
	remove_character_modifier = symptom_treatment_4
}

remove_disease_flags_effect = {
	clr_character_flag = developing_illness
	clr_character_flag = got_syphilis
	clr_character_flag = got_tuberculosis
	clr_character_flag = got_typhoid_fever
	clr_character_flag = got_typhus
	clr_character_flag = got_bubonic_plague
	clr_character_flag = got_measles
	clr_character_flag = got_smallpox
	clr_character_flag = got_aztec_disease
	clr_character_flag = got_flu
	clr_character_flag = got_dysentery
	clr_character_flag = got_gout
	clr_character_flag = got_food_poisoning
	clr_character_flag = got_rabies
	clr_character_flag = got_cancer
	clr_character_flag = got_pneumonia
	clr_character_flag = manifest_syphilis
	clr_character_flag = manifest_tuberculosis
	clr_character_flag = manifest_typhoid_fever
	clr_character_flag = manifest_typhus
	clr_character_flag = manifest_bubonic_plague
	clr_character_flag = manifest_measles
	clr_character_flag = manifest_small_pox
	clr_character_flag = manifest_aztec_disease
	clr_character_flag = manifest_flu
	clr_character_flag = manifest_dysentery
	clr_character_flag = manifest_gout
	clr_character_flag = manifest_food_poisoning
	clr_character_flag = manifest_rabies
	clr_character_flag = manifest_cancer
	clr_character_flag = manifest_pneumonia
}

leave_court_effect = {
	reverse_opinion = {
		modifier = opinion_leave
		who = ROOT
	}

	banish = yes

	reverse_remove_opinion = {
		modifier = opinion_leave
		who = ROOT
	}
}

courtiers_leaving_effect = {
	hidden_effect = { #To get a banishment reason
		reverse_opinion = {
			modifier = opinion_leave
			who = ROOT
		}

		banish = yes

		reverse_remove_opinion = {
			modifier = opinion_leave
			who = ROOT
		}
	}
	opinion = {
		modifier = opinion_left_court
		who = root
	}
}

leave_court_and_die_effect = {
	death = { death_reason = death_missing }
}

give_epidemic_disease_effect = {
	if = {
		limit = {
			location = { disease = tuberculosis }
			NOT = { has_character_flag = immune_tuberculosis }
		}

		set_character_flag = got_tuberculosis
		set_character_flag = developing_illness

		character_event = { id = RIP.5015 }

		break = yes
	}
	if = {
		limit = {
			location = { disease = typhoid_fever }
			NOT = { has_character_flag = immune_typhoid_fever }
		}

		set_character_flag = got_typhoid_fever
		set_character_flag = developing_illness

		character_event = { id = RIP.5016 }

		break = yes
	}
	if = {
		limit = {
			location = { disease = typhus }
			NOT = { has_character_flag = immune_typhus }
		}

		set_character_flag = got_typhus
		set_character_flag = developing_illness

		character_event = { id = RIP.5017 }

		break = yes
	}
	if = {
		limit = {
			location = { disease = measles }
			NOT = { has_character_flag = immune_measles }
		}

		set_character_flag = got_measles
		set_character_flag = developing_illness

		character_event = { id = RIP.5018 }

		break = yes
	}
	if = {
		limit = {
			location = { disease = small_pox }
			NOT = { has_character_flag = immune_smallpox }
		}

		set_character_flag = got_small_pox
		set_character_flag = developing_illness

		character_event = { id = RIP.5019 }

		break = yes
	}
	if = {
		limit = {
			location = { disease = syphilis }
			NOT = { has_character_flag = immune_syphilis }
		}

		set_character_flag = got_syphilis
		set_character_flag = developing_illness

		character_event = { id = RIP.5014 }

		break = yes
	}
}

blessing_removes_disease_effect = {
	if = {
		limit = {
			has_dlc = "The Old Gods"
			has_character_flag = old_gods_blessing
			has_character_modifier = blessing_of_health
		}
		hidden_tooltip = { character_event = { id = TOG.7015 days = 30 } }
	}
}

deaths_gift_removes_disease_effect = {
	if = {
		limit = {
			has_dlc = "Reapers"
			has_character_modifier = deaths_gift
		}
		hidden_tooltip = { character_event = { id = RIP.30233 days = 30 } }
	}
}

remove_disease_trait_effect = {
	if = {
	 	limit = { trait = ill }
	 	remove_trait = ill
	}
	if = {
	 	limit = { trait = has_tuberculosis }
	 	remove_trait = has_tuberculosis
	}
	if = {
	 	limit = { trait = has_typhoid_fever }
	 	remove_trait = has_typhoid_fever
	}
	if = {
	 	limit = { trait = has_typhus }
	 	remove_trait = has_typhus
	}
	if = {
	 	limit = { trait = has_bubonic_plague }
	 	remove_trait = has_bubonic_plague
	}
	if = {
	 	limit = { trait = has_measles }
	 	remove_trait = has_measles
	}
	if = {
	 	limit = { trait = has_small_pox }
	 	remove_trait = has_small_pox
	}
	if = {
	 	limit = { trait = has_aztec_disease }
	 	remove_trait = has_aztec_disease
	}
	if = {
	 	limit = { trait = syphilitic }
	 	remove_trait = syphilitic
	}
	if = {
	 	limit = { trait = flu }
	 	remove_trait = flu
	}
	if = {
	 	limit = { trait = dysentery }
	 	remove_trait = dysentery
	}
	if = {
	 	limit = { trait = gout }
	 	remove_trait = gout
	}
	if = {
	 	limit = { trait = food_poisoning }
	 	remove_trait = food_poisoning
	}
	if = {
	 	limit = { trait = rabies }
	 	remove_trait = rabies
	}
	if = {
	 	limit = { trait = cancer }
	 	remove_trait = cancer
	}
	if = {
	 	limit = { trait = pneumonic }
	 	remove_trait = pneumonic
	}
	if = {
	 	limit = { trait = scurvy }
	 	remove_trait = scurvy
	}
	if = {
	 	limit = { trait = dancing_plague }
	 	remove_trait = dancing_plague
	}
	if = {
	 	limit = { trait = leper }
	 	remove_trait = leper
	}
	clear_disease_level_effect = yes
}

resolve_severely_injured_effect = {
	hidden_tooltip = {
		random_list = {
			70 = { #Get rid of severely_injured
				character_event = { id = RIP.11000 days = 100 random = 300 }
			}
			30 = { #Get rid of severely_injured but develop infection
				set_character_flag = pending_infection
				character_event = { id = RIP.11000 days = 100 random = 300 }
			}
		}
	}
}

#For when you "only" become really injured, but still want the risk of infection...
add_severely_injured_effect = {
	add_trait = severely_injured
	resolve_severely_injured_effect = yes
}

leave_council_position_effect = {
	if = {
		limit = { has_job_title = job_chancellor }
		remove_title = job_chancellor
		add_character_modifier = {
			modifier = resigned_in_anger
			years = 2
			hidden = yes
		}
	}
	if = {
		limit = { has_job_title = job_marshal }
		remove_title = job_marshal
		add_character_modifier = {
			modifier = resigned_in_anger
			years = 2
			hidden = yes
		}
	}
	if = {
		limit = { has_job_title = job_treasurer }
		remove_title = job_treasurer
		add_character_modifier = {
			modifier = resigned_in_anger
			years = 2
			hidden = yes
		}
	}
	if = {
		limit = { has_job_title = job_spymaster }
		remove_title = job_spymaster
		add_character_modifier = {
			modifier = resigned_in_anger
			years = 2
			hidden = yes
		}
	}
	if = {
		limit = { has_job_title = job_spiritual }
		remove_title = job_spiritual
		add_character_modifier = {
			modifier = resigned_in_anger
			years = 2
			hidden = yes
		}
	}
	if = {
		limit = { has_minor_title = title_councilmember_king }
		remove_title = title_councilmember_king
		add_character_modifier = {
			modifier = resigned_in_anger
			years = 2
			hidden = yes
		}
	}
	if = {
		limit = { has_minor_title = title_councilmember_emperor }
		remove_title = title_councilmember_emperor
		add_character_modifier = {
			modifier = resigned_in_anger
			years = 2
			hidden = yes
		}
	}
}

increase_prosperity_effect = {
	if = {
		limit = {
			NOR = {
				has_province_modifier = prosperity_modifier_1
				has_province_modifier = prosperity_modifier_2
				has_province_modifier = prosperity_modifier_3
				has_province_modifier = depopulated_1
				has_province_modifier = depopulated_2
				has_province_modifier = depopulated_3
			}
		}

		add_province_modifier = { name = prosperity_modifier_1 duration = -1 }
		hidden_tooltip = { set_variable = { which = prosperity_value value = 100 } }
		break = yes
	}

	if = {
		limit = { has_province_modifier = prosperity_modifier_1 }

		hidden_tooltip = { remove_province_modifier = prosperity_modifier_1 }
		add_province_modifier = { name = prosperity_modifier_2 duration = -1 }
		hidden_tooltip = { set_variable = { which = prosperity_value value = 250 } }
		break = yes
	}

	if = {
		limit = { has_province_modifier = prosperity_modifier_2 }

		hidden_tooltip = { remove_province_modifier = prosperity_modifier_2 }
		add_province_modifier = { name = prosperity_modifier_3 duration = -1 }
		hidden_tooltip = { set_variable = { which = prosperity_value value = 500 } }
		break = yes
	}
}

decrease_prosperity_effect = {
	if = {
		limit = {
			has_province_modifier = prosperity_modifier_3
		}
		hidden_tooltip = {
			remove_province_modifier = prosperity_modifier_3
			set_variable = { which = prosperity_value value = 250 }
		}
		add_province_modifier = { name = prosperity_modifier_2 duration = -1 }
	}
}

add_disease_level_effect = {
		random_list = {
			65 = {
				custom_tooltip = {
					text = become_normal_ill
				}
			}
			20 = {
				modifier = {
					factor = 2
					trait = strong
				}
				modifier = {
					factor = 2
					trait = robust
				}
				custom_tooltip = {
					text = become_mild_ill
					hidden_tooltip = {
						add_character_modifier = { name = mild_illness duration = -1 }
					}
				}
			}
			10 = {
				modifier = {
					factor = 1.5
					trait = feeble
				}
				modifier = {
					factor = 1.5
					trait = weak
				}
				modifier = {
					factor = 0.5
					trait = strong
				}
				modifier = {
					factor = 0.5
					trait = robust
				}
				modifier = {
					factor = 1.5
					age = 50
				}
				modifier = {
					factor = 1.5
					age = 60
				}
				modifier = {
					factor = 1.5
					age = 70
				}
				modifier = {
					factor = 1.5
					age = 80
				}
				custom_tooltip = {
					text = become_severe_ill
					hidden_tooltip = {
						add_character_modifier = { name = severe_illness duration = -1 }
					}
				}
			}
			5= {
				modifier = {
					factor = 0
					immortal = yes
				}
				modifier = {
					factor = 2
					trait = feeble
				}
				modifier = {
					factor = 2
					trait = weak
				}
				modifier = {
					factor = 0.5
					trait = strong
				}
				modifier = {
					factor = 0.5
					trait = robust
				}
				 modifier = {
					factor = 2
					age = 50
				}
				modifier = {
					factor = 2
					age = 60
				}
				modifier = {
					factor = 2
					age = 70
				}
				modifier = {
					factor = 2
					age = 80
				}
				custom_tooltip = {
					text = become_bedridden_ill
					hidden_tooltip = {
						add_character_modifier = { name = bedridden_illness duration = -1 }
						add_trait = sick_incapable
					}
				}
			}
		}
}

clear_disease_level_effect = {
	if = {
		limit = { has_character_modifier = mild_illness }
		remove_character_modifier = mild_illness
	}
	if = {
		limit = { has_character_modifier = severe_illness }
		remove_character_modifier = severe_illness
	}
	if = {
		limit = { has_character_modifier = bedridden_illness }
		remove_character_modifier = bedridden_illness
		hidden_tooltip = {
			remove_trait = sick_incapable
		}
	}
}

end_inaccessibility_effect = {
	if = {
		limit = { trait = in_hiding }
		remove_trait = in_hiding

		clr_character_flag = do_not_disturb

		add_character_modifier = {
			name = went_out_of_hiding_timer
			duration = 180
			hidden = yes
		}
		hidden_tooltip = { character_event = { id = CM.6400 } } # Notify plotters and family
	}
	if = {
		limit = { has_character_modifier = in_seclusion }

		remove_character_modifier = in_seclusion

		if = {
			limit = { is_ruler = yes }

			clr_character_flag = do_not_disturb
			clr_character_flag = exposed_to_outside
			clr_character_flag = seclusion_piling_corpses
			clr_character_flag = seclusion_lazy_seduction
			clr_character_flag = seclusion_nightmares
			clr_character_flag = seclusion_gained_friend
			clr_character_flag = seclusion_child_has_lover
			clr_character_flag = seclusion_tunnel
			clr_character_flag = seclusion_food_events

			custom_tooltip = { text = open_the_gates_info_tooltip }

			add_character_modifier = {
				name = recently_opened_gates
				duration = 365
			}
			hidden_tooltip = {
				clr_character_flag = seclusion_events_on
				character_event = { id = RIP.11557 days = 40 random = 20} #clears starvation modifiers
				any_courtier = {
					clr_character_flag = seclusion_events_on
					remove_character_modifier = in_seclusion
					character_event = { id = RIP.11557 days = 40 random = 20} #clears starvation modifiers
				}
				any_vassal = {
					limit = {
						OR = {
							is_councillor = yes
							has_minor_title = title_councilmember_king
							has_minor_title = title_councilmember_emperor
						}
						is_landed = yes
						liege = { character = ROOT }
						NOT = {
							has_character_modifier = in_seclusion
						}
						host = { NOT = { character = ROOT } }
					}
					force_host = ROOT
				}
			}
			if = { # Rejoin your liege's court if both of you are not in seclusion
				limit = {
					OR = {
						is_councillor = yes
						has_minor_title = title_councilmember_king
						has_minor_title = title_councilmember_emperor
					}
					NOT = {
						liege = {
							has_character_modifier = in_seclusion
						}
					}
				}
				liege = {
					ROOT = {
						force_host = PREV
					}
				}
			}
		}
	}
}

#Effects for adding diseases
give_pneumonic_effect = {
	if = {
		limit = { NOT = { trait = pneumonic } }

		if = {
			limit = {
				has_dlc = "Reapers"
				NOT = { has_character_flag = developing_illness }
				NOT = { has_character_flag = disease_not_serious }
			}
			tooltip = { add_trait = pneumonic }
			set_character_flag = got_pneumonia
			set_character_flag = developing_illness
			hidden_tooltip = { character_event = { id = RIP.5011 days = 3 random = 10 } }
		}
		if = {
			limit = { NOT = { has_dlc = "Reapers" } }
			add_trait = pneumonic
		}
	}
}


give_has_tuberculosis_effect = {
	if = {
		limit = { NOT = { trait = has_tuberculosis } }

		if = {
			limit = {
				has_dlc = "Reapers"
				NOT = { has_character_flag = developing_illness }
				NOT = { has_character_flag = disease_not_serious }
			}
			set_character_flag = got_tuberculosis
			set_character_flag = developing_illness
			hidden_tooltip = { character_event = { id = RIP.5015 days = 3 random = 40 } }
		}
		if = {
			limit = { NOT = { has_dlc = "Reapers" } }
			add_trait = has_tuberculosis
		}
	}
}

give_has_typhoid_fever_effect = {
	if = {
		limit = { NOT = { trait = has_typhoid_fever } }

		if = {
			limit = {
				has_dlc = "Reapers"
				NOT = { has_character_flag = developing_illness }
				NOT = { has_character_flag = disease_not_serious }
			}
			set_character_flag = got_typhoid_fever
			set_character_flag = developing_illness
			hidden_tooltip = { character_event = { id = RIP.5016 days = 3 random = 10 } }
		}
		if = {
			limit = { NOT = { has_dlc = "Reapers" } }
			add_trait = has_typhoid_fever
		}
	}
}

give_has_bubonic_plague_effect = {
	if = {
		limit = { NOT = { trait = has_bubonic_plague } }

		if = {
			limit = {
				has_dlc = "Reapers"
				NOT = { has_character_flag = developing_illness }
				NOT = { has_character_flag = disease_not_serious }
			}
			set_character_flag = got_bubonic_plague
			set_character_flag = developing_illness
			hidden_tooltip = { character_event = { id = RIP.5012 days = 3 random = 10 } }
		}
		if = {
			limit = { NOT = { has_dlc = "Reapers" } }
			add_trait = has_bubonic_plague
		}
	}
}

give_has_measles_effect = {
	if = {
		limit = { NOT = { trait = has_measles } }

		if = {
			limit = {
				has_dlc = "Reapers"
				NOT = { has_character_flag = developing_illness }
				NOT = { has_character_flag = disease_not_serious }
			}
			set_character_flag = got_measles
			set_character_flag = developing_illness
			hidden_tooltip = { character_event = { id = RIP.5018 days = 3 random = 10 } }
		}
		if = {
			limit = { NOT = { has_dlc = "Reapers" } }
			add_trait = has_measles
		}
	}
}

give_has_small_pox_effect = {
	if = {
		limit = { NOT = { trait = has_small_pox } }

		if = {
			limit = {
				has_dlc = "Reapers"
				NOT = { has_character_flag = developing_illness }
				NOT = { has_character_flag = disease_not_serious }
			}
			set_character_flag = got_smallpox
			set_character_flag = developing_illness
			hidden_tooltip = { character_event = { id = RIP.5019 days = 3 random = 10 } }
		}
		if = {
			limit = { NOT = { has_dlc = "Reapers" } }
			add_trait = has_small_pox
		}
	}
}

give_has_aztec_disease_effect = {
	if = {
		limit = { NOT = { trait = has_aztec_disease } }

		if = {
			limit = {
				has_dlc = "Reapers"
				NOT = { has_character_flag = developing_illness }
				NOT = { has_character_flag = disease_not_serious }
			}
			set_character_flag = got_aztec_disease
			set_character_flag = developing_illness
			hidden_tooltip = { character_event = { id = RIP.5014 days = 3 random = 40 } }
		}
		if = {
			limit = { NOT = { has_dlc = "Reapers" } }
			add_trait = has_aztec_disease
		}
	}
}

give_syphilitic_effect = {
	if = {
		limit = {
			NOT = { trait = syphilitic }
		}

		if = {
			limit = {
				has_dlc = "Reapers"
				NOT = { has_character_flag = developing_illness }
				NOT = { has_character_flag = disease_not_serious }
			}
			set_character_flag = got_syphilis
			set_character_flag = developing_illness
			hidden_tooltip = { character_event = { id = RIP.5014 days = 3 random = 40 } }
		}
		if = {
			limit = { NOT = { has_dlc = "Reapers" } }
			add_trait = syphilitic
		}
	}
}

give_flu_effect = {
	if = {
		limit = {
			NOT = { trait = flu }
			has_dlc = "Reapers"
			NOT = { has_character_flag = developing_illness }
			NOT = { has_character_flag = disease_not_serious }
		}

		set_character_flag = got_flu
		set_character_flag = developing_illness
		hidden_tooltip = { character_event = { id = RIP.5020 days = 3 random = 3 } }
	}
}

give_dysentery_effect = {
	if = {
		limit = {
			NOT = { trait = dysentery }
			has_dlc = "Reapers"
			NOT = { has_character_flag = developing_illness }
			NOT = { has_character_flag = disease_not_serious }
		}

		set_character_flag = got_dysentery
		set_character_flag = developing_illness
		hidden_tooltip = { character_event = { id = RIP.5021 days = 3 random = 10 } }
	}
}

give_gout_effect = {
	if = {
		limit = {
			NOT = { trait = gout }
			has_dlc = "Reapers"
			NOT = { has_character_flag = developing_illness }
			NOT = { has_character_flag = disease_not_serious }
		}

		set_character_flag = got_gout
		set_character_flag = developing_illness
		hidden_tooltip = { character_event = { id = RIP.5022 days = 30 random = 60 } }
	}
}

give_food_poisoning_effect = {
	if = {
		limit = {
			NOT = { trait = food_poisoning }
			has_dlc = "Reapers"
			NOT = { has_character_flag = developing_illness }
			NOT = { has_character_flag = disease_not_serious }
		}

		set_character_flag = got_food_poisoning
		set_character_flag = developing_illness
		hidden_tooltip = { character_event = { id = RIP.5023 days = 1 random = 2 } }
	}
}

give_rabies_effect = {
	if = {
		limit = {
			NOT = { trait = rabies }
			has_dlc = "Reapers"
			NOT = { has_character_flag = developing_illness }
			NOT = { has_character_flag = disease_not_serious }
		}

		set_character_flag = got_rabies
		set_character_flag = developing_illness
		hidden_tooltip = { character_event = { id = RIP.5024 days = 30 random = 60 } }
	}
}

give_cancer_effect = {
	if = {
		limit = {
			NOT = { trait = cancer }
			has_dlc = "Reapers"
			NOT = { has_character_flag = developing_illness }
			NOT = { has_character_flag = disease_not_serious }
		}

		set_character_flag = got_cancer
		set_character_flag = developing_illness
		hidden_tooltip = { character_event = { id = RIP.5025 days = 30 random = 60 } }
	}
}

give_ill_effect = {
	if = {
		limit = {
			NOR = {
				has_dlc = "Reapers"
				trait = ill
			}
		}
		add_trait = ill
		hidden_tooltip = {
			character_event = {
				days = 3
				id = 38290 #Notify Ill
			}
		}
	}
	if = {
		limit = { has_dlc = "Reapers" }
		tooltip = { add_trait = flu }
		give_flu_effect = yes
	}
}

#Impregnation and venereal disease handling between event_target:sex_partner and THIS. Used in THIS scope.
unprotected_sex_effect_event_target = {
	random = {
		chance = 50
		venereal_disease_effect_event_target = yes
	}
	random = {
		chance = 10
		modifier = {
			factor = 2
			is_fertile_trigger = yes
		}
		modifier = {
			factor = 2
			event_target:sex_partner = { is_fertile_trigger = yes }
		}
		modifier = {
			factor = 0.5
			is_infertile_trigger = yes
		}
		modifier = {
			factor = 0.5
			event_target:sex_partner = { is_infertile_trigger = yes }
		}
		impregnate_effect_event_target = yes
	}
}

#Transfers venereal diseases between event_target:sex_partner and THIS.
venereal_disease_effect_event_target = {
	#Great pox and aztec disease for sex_partner
	if = {
		limit = {
			NOR = {
				event_target:sex_partner = { has_character_flag = developing_illness }
				event_target:sex_partner = { has_character_flag = disease_not_serious }
			}
		}

		if = {
			limit = { trait = syphilitic }
			event_target:sex_partner = { give_syphilitic_effect = yes }
		}
		if = {
			limit = { trait = has_aztec_disease }
			event_target:sex_partner = { give_has_aztec_disease_effect = yes }
		}
	}

	#Great pox and aztec disease for THIS
	if = {
		limit = {
			NOR = {
				has_character_flag = developing_illness
				has_character_flag = disease_not_serious
			}
		}

		if = {
			limit = { event_target:sex_partner = { trait = syphilitic } }
			give_syphilitic_effect = yes
		}
		if = {
			limit = { event_target:sex_partner = { trait = has_aztec_disease } }
			give_has_aztec_disease_effect = yes
		}
	}

	#Lover's pox
	if = {
		limit = {
			OR = {
				trait = lovers_pox
				has_character_modifier = minor_disease_herpes
			}
			NOR = {
				event_target:sex_partner = { trait = lovers_pox }
				event_target:sex_partner = { has_character_modifier = minor_disease_herpes }
			}
		}
		hidden_tooltip = { event_target:sex_partner = { character_event = { id = 6359 days = 15 random = 5 } } }
	}
	if = {
		limit = {
			OR = {
				event_target:sex_partner = { trait = lovers_pox }
				event_target:sex_partner = { has_character_modifier = minor_disease_herpes }
			}
			NOR = {
				trait = lovers_pox
				has_character_modifier = minor_disease_herpes
			}
		}
		hidden_tooltip = { character_event = { id = 6359 days = 15 random = 5 } }
	}
}

#Tries to impregnate either event_target:sex_partner or THIS if all conditions are met
impregnate_effect_event_target = {
	if = {
		limit = { is_opposite_sex = event_target:sex_partner }

		#If THIS is a female which can get pregnant
		if = {
			limit = {
				is_female = yes
				NOT = { age = 45 }
				is_pregnant = no
				health = 3
				event_target:sex_partner = { NOT = { trait = eunuch } }
			}

			#THIS is not consort/spouse of anyone or is consort/spouse of event_target:sex_partner
			if = {
				limit = {
					OR = {
						AND = {
							is_married = no
							is_consort = no
						}
						AND = {
							is_consort = yes
							consort = { character = event_target:sex_partner }
						}
						AND = {
							is_married = yes
							spouse = { character = event_target:sex_partner }
						}
					}
				}
				event_target:sex_partner = { impregnate = PREV }
			}

			#THIS is consort/spouse of someone else than event_target:sex_partner
			if = {
				limit = {
					OR = {
					 	AND = {
					 		is_married = yes
					 		NOT = { spouse = { character = event_target:sex_partner } }
					 	}
					 	AND = {
					 		is_consort = yes
					 		NOT = { consort = { character = event_target:sex_partner } }
					 	}
					}
				}
				event_target:sex_partner = { impregnate_cuckoo = PREV }
			}
		}

		#If event_target:sex_partner is a female which can get pregnant
		if = {
			limit = {
				event_target:sex_partner = {
					is_female = yes
					NOT = { age = 45 }
					is_pregnant = no
					health = 3
					PREV = { NOT = { trait = eunuch } }
				}
			}

			#event_target:sex_partner is not consort/spouse of anyone or is consort/spouse of THIS
			if = {
				limit = {
					event_target:sex_partner = {
						OR = {
							AND = {
								is_married = no
								is_consort = no
							}
							AND = {
								is_consort = yes
								consort = { character = PREVPREV }
							}
							AND = {
								is_married = yes
								spouse = { character = PREVPREV }
							}
						}
					}
				}
				impregnate = event_target:sex_partner
			}

			#event_target:sex_partner is consort/spouse of someone else than THIS
			if = {
				limit = {
					event_target:sex_partner = {
						OR = {
						 	AND = {
						 		is_married = yes
						 		NOT = { spouse = { character = PREVPREV } }
						 	}
						 	AND = {
						 		is_consort = yes
						 		NOT = { consort = { character = PREVPREV } }
						 	}
						}
					}
				}

				impregnate_cuckoo = event_target:sex_partner
			}
		}
	}
}

#Impregnation and venereal disease handling between FROM and ROOT. Used in ROOT scope.
unprotected_sex_effect = {
	random = {
		chance = 50
		venereal_disease_effect = yes
	}
	random = {
		chance = 10
		modifier = {
			factor = 2
			is_fertile_trigger = yes
		}
		modifier = {
			factor = 2
			FROM = { is_fertile_trigger = yes }
		}
		modifier = {
			factor = 0.5
			is_infertile_trigger = yes
		}
		modifier = {
			factor = 0.5
			FROM = { is_infertile_trigger = yes }
		}
		impregnate_effect = yes
	}
}

#Transfers venereal diseases between FROM and ROOT
venereal_disease_effect = {
	#Great pox and aztec disease for FROM
	if = {
		limit = {
			NOR = {
				FROM = { has_character_flag = developing_illness }
				FROM = { has_character_flag = disease_not_serious }
			}
		}

		if = {
			limit = { trait = syphilitic }
			FROM = { give_syphilitic_effect = yes }
		}
		if = {
			limit = { trait = has_aztec_disease }
			FROM = { give_has_aztec_disease_effect = yes }
		}
	}

	#Great pox and aztec disease for ROOT
	if = {
		limit = {
			NOR = {
				has_character_flag = developing_illness
				has_character_flag = disease_not_serious
			}
		}

		if = {
			limit = { FROM = { trait = syphilitic } }
			give_syphilitic_effect = yes
		}
		if = {
			limit = { FROM = { trait = has_aztec_disease } }
			give_has_aztec_disease_effect = yes
		}
	}

	#Lover's pox
	if = {
		limit = {
			OR = {
				trait = lovers_pox
				has_character_modifier = minor_disease_herpes
			}
			NOR = {
				FROM = { trait = lovers_pox }
				FROM = { has_character_modifier = minor_disease_herpes }
			}
		}
		hidden_tooltip = { FROM = { character_event = { id = 6359 days = 15 random = 5 } } }
	}
	if = {
		limit = {
			OR = {
				FROM = { trait = lovers_pox }
				FROM = { has_character_modifier = minor_disease_herpes }
			}
			NOR = {
				trait = lovers_pox
				has_character_modifier = minor_disease_herpes
			}
		}
		hidden_tooltip = { character_event = { id = 6359 days = 15 random = 5 } }
	}
}

#Tries to impregnate either ROOT or FROM if all conditions are met
impregnate_effect = {
	if = {
		limit = { is_opposite_sex = FROM }

		#If ROOT is a female which can get pregnant
		if = {
			limit = {
				is_female = yes
				NOT = { age = 45 }
				is_pregnant = no
				health = 3
				FROM = { NOT = { trait = eunuch } }
			}

			#ROOT is not consort/spouse of anyone or is consort/spouse of FROM
			if = {
				limit = {
					OR = {
						AND = {
							is_married = no
							is_consort = no
						}
						AND = {
							is_consort = yes
							consort = { character = FROM }
						}
						AND = {
							is_married = yes
							spouse = { character = FROM }
						}
					}
				}
				FROM = { impregnate = ROOT }
			}

			#ROOT is consort/spouse of someone else than FROM
			if = {
				limit = {
					OR = {
					 	AND = {
					 		is_married = yes
					 		NOT = { spouse = { character = FROM } }
					 	}
					 	AND = {
					 		is_consort = yes
					 		NOT = { consort = { character = FROM } }
					 	}
					}
				}
				FROM = { impregnate_cuckoo = ROOT }
			}
		}

		#If FROM is a female which can get pregnant
		if = {
			limit = {
				FROM = {
					is_female = yes
					NOT = { age = 45 }
					is_pregnant = no
					health = 3
					ROOT = { NOT = { trait = eunuch } }
				}
			}

			#FROM is not consort/spouse of anyone or is consort/spouse of ROOT
			if = {
				limit = {
					FROM = {
						OR = {
							AND = {
								is_married = no
								is_consort = no
							}
							AND = {
								is_consort = yes
								consort = { character = ROOT }
							}
							AND = {
								is_married = yes
								spouse = { character = ROOT }
							}
						}
					}
				}
				impregnate = FROM
			}

			#FROM is consort/spouse of someone else than ROOT
			if = {
				limit = {
					FROM = {
						OR = {
						 	AND = {
						 		is_married = yes
						 		NOT = { spouse = { character = ROOT } }
						 	}
						 	AND = {
						 		is_consort = yes
						 		NOT = { consort = { character = ROOT } }
						 	}
						}
					}
				}

				impregnate_cuckoo = FROM
			}
		}
	}
}

will_not_marry_effect = {
	add_character_modifier = {
		modifier = will_not_marry
		duration = -1
	}
	add_trait = cannot_marry
}

female_councilor_effect_1 = {
	reverse_opinion = {
		modifier = opinion_given_council_position_1
		who = FROM
		years = 5
	}
	add_character_modifier = {
		name = scandalous_councillor_1
		months = 60
	}
}

female_councilor_effect_2 = {
	reverse_opinion = {
		modifier = opinion_given_council_position_2
		who = FROM
		years = 5
	}
	add_character_modifier = {
		name = scandalous_councillor_2
		months = 60
	}
}

female_councilor_effect_3 = {
	reverse_opinion = {
		modifier = opinion_given_council_position_3
		who = FROM
		years = 5
	}
	add_character_modifier = {
		name = scandalous_councillor_3
		months = 60
	}
}

#Use to remove any opinion giving a prison reason. Must set appropriate event targets before using this effect.
remove_prison_reason_effect = {
	event_target:remove_prison_reason_effect_accuser = {
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_traitor }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_rebel_traitor }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_dishonorable }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_regicide_traitor }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_fatwa_target }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_refused_order }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_witch }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_takfir }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_unfaithful_wife }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_cuckolded }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_charge_heresiarch }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_charge_infidel }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_charge_deviant }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_charge_illegitimate }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_charge_traitor }
		remove_opinion = { who = event_target:remove_prison_reason_effect_accused modifier = opinion_charge_slanderer }
	}
}

add_cat_effect = {
	if = {
		limit =  { NOT = { has_character_modifier = pet_cat } }
		add_character_modifier = {
			name = pet_cat
			duration = -1
		}
		hidden_tooltip = { character_event = { id = 77802 days = 3000 random = 2000 } } # Cat dies
		hidden_tooltip = { character_event = { id = 77861 days = 30 random = 100 } } # Cat & dog
	}
}

###MONKS & MYSTICS###
remove_assassins_debt_effect = {
	if = {
		limit = { has_character_modifier = assassins_debt }
		remove_character_modifier = assassins_debt
		hidden_tooltip = {
			set_variable = { which = assassins_debt value = 0 }
		}
		clr_character_flag = assassins_target_debt
		clear_delayed_event = { id = MNM.6009 }
	}
}

remove_secret_religion_trait_effect = {
	clear_secret_religion = yes
}

pay_back_assassins_effect = {
	if = {
		limit = { is_variable_equal = { which = assassins_debt value = 50 } }
		wealth = -50
		hidden_tooltip = {
			event_target:grand_master  = {
				if = {
					limit = {
						ai = yes
						primary_title = { title = d_victorious_blade }
					}
					wealth = 50
				}
			}
		}
	}
	if = {
		limit = { is_variable_equal = { which = assassins_debt value = 250 } }
		wealth = -250
		hidden_tooltip = {
			event_target:grand_master  = {
				if = {
					limit = {
						ai = yes
						primary_title = { title = d_victorious_blade }
					}
					wealth = 250
				}
			}
		}
	}
	if = {
		limit = { is_variable_equal = { which = assassins_debt value = 300 } }
		wealth = -300
		hidden_tooltip = {
			event_target:grand_master  = {
				if = {
					limit = {
						ai = yes
						primary_title = { title = d_victorious_blade }
					}
					wealth = 300
				}
			}
		}
	}
	if = {
		limit = { is_variable_equal = { which = assassins_debt value = 500 } }
		wealth = -500
		hidden_tooltip = {
			event_target:grand_master = {
				if = {
					limit = {
						ai = yes
						primary_title = { title = d_victorious_blade }
					}
					wealth = 500
				}
			}
		}
	}
}

major_soul_corruption_effect = {
	custom_tooltip = {
		text = major_soul_corruption_effect_tooltip
	}
	hidden_effect = {
		if = {
			limit = {
				NAND = {
					trait = cruel
					trait = arbitrary
					trait = deceitful
					trait = possessed
				}
			}
			random_list = {
				20 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { trait = kind }
							trait = cruel
							has_character_flag = corruption_remove_kind
						}
					}
					set_character_flag = corruption_remove_kind
					character_event = { id = MNM.7050 days = 3 random = 27 }
				}
				20 = {
					modifier = {
						factor = 0
						OR = {
							trait = kind
							trait = cruel
							has_character_flag = corruption_add_cruel
						}
					}
					set_character_flag = corruption_add_cruel
					character_event = { id = MNM.7050 days = 3 random = 27 }
				}
				15 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { trait = just }
							trait = arbitrary
							has_character_flag = corruption_remove_just
						}
					}
					set_character_flag = corruption_remove_just
					character_event = { id = MNM.7050 days = 3 random = 27 }
				}
				15 = {
					modifier = {
						factor = 0
						OR = {
							trait = just
							trait = arbitrary
							has_character_flag = corruption_add_arbitrary
						}
					}
					set_character_flag = corruption_add_arbitrary
					character_event = { id = MNM.7050 days = 3 random = 27 }
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { trait = honest }
							trait = deceitful
							has_character_flag = corruption_remove_honest
						}
					}
					set_character_flag = corruption_remove_honest
					character_event = { id = MNM.7050 days = 3 random = 27 }
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							trait = honest
							trait = deceitful
							has_character_flag = corruption_add_deceitful
						}
					}
					set_character_flag = corruption_add_deceitful
					character_event = { id = MNM.7050 days = 3 random = 27 }
				}
				5 = {
					modifier = {
						factor = 0
						trait = possessed
						has_character_flag = corruption_add_possessed
					}
					set_character_flag = corruption_add_possessed
					character_event = { id = MNM.7050 days = 3 random = 27 }
				}
				50 = { }
			}
		}
		random_list = { #Risk of getting weaker
			10 = {
				trigger = { NOT = { trait = stressed } }
				character_event = { id = MNM.7051 days = 32 random = 5 }
			}
			5 = {
				trigger = { NOT = { trait = lunatic } }
				character_event = { id = MNM.7052 days = 32 random = 5 }
			}
			5 = {
				trigger = { NOR = { trait = stutter } }
				character_event = { id = MNM.7053 days = 32 random = 5 }
			}
			5 = {
				trigger = { NOR = { trait = clubfooted } }
				character_event = { id = MNM.7054 days = 32 random = 5}
			}
			5 = {
				trigger = { NOR = { trait = hunchback } }
				character_event = { id = MNM.7055 days = 32 random = 5 }
			}
			5 = {
				trigger = { NOR = { trait = ugly has_character_flag = infernal_beauty } }
				character_event = { id = MNM.7056 days = 32 random = 5 }
			}
			5 = {
				trigger = {
					NOR = {
						trait = feeble
						trait = weak
						trait = strong
						has_character_flag = infernal_strength
					}
				}
				character_event = { id = MNM.7059 days = 32 random = 5 }
			}
			40 = {
				#trigger = {
				#	NOR = {
				#		NOT = { health = 3 }
				#		has_character_modifier = corrupting_magic_minor
				#		has_character_modifier = corrupting_magic_major
				#	}
				#}
				character_event = { id = MNM.7057 days = 32 random = 5 }
			}
			220 = { # High visibility (ability abuse) increases the risk of getting weaker
				modifier = {
					factor = 0.9
					check_variable = { which = visibility_value value = 10 }
				}
				modifier = {
					factor = 0.9
					check_variable = { which = visibility_value value = 15 }
				}
				modifier = {
					factor = 0.9
					check_variable = { which = visibility_value value = 20 }
				}
				modifier = {
					factor = 0.9
					check_variable = { which = visibility_value value = 25 }
				}
				modifier = {
					factor = 0.9
					check_variable = { which = visibility_value value = 30 }
				}
				modifier = {
					factor = 0.9
					check_variable = { which = visibility_value value = 35 }
				}
				modifier = {
					factor = 0.9
					check_variable = { which = visibility_value value = 40 }
				}
			}
		}
		random = {
			chance = 2
			set_character_flag = has_it_coming
			character_event = { id = MNM.7854 days = 30 random = 50 } #Demon hunters come after you...
		}
	}
}

minor_soul_corruption_effect = {
	custom_tooltip = {
		text = minor_soul_corruption_effect_tooltip
	}
	hidden_effect = {
		if = {
			limit = {
				NAND = {
					trait = cruel
					trait = arbitrary
					trait = deceitful
					trait = possessed
				}
			}
			random_list = {
				10 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { trait = kind }
							trait = cruel
							has_character_flag = corruption_remove_kind
						}
					}
					set_character_flag = corruption_remove_kind
					character_event = { id = MNM.7050 days = 3 random = 27 }
				}
				5 = {
					modifier = {
						factor = 0
						OR = {
							trait = kind
							trait = cruel
							has_character_flag = corruption_add_cruel
						}
					}
					set_character_flag = corruption_add_cruel
					character_event = { id = MNM.7050 days = 3 random = 27 }
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { trait = just }
							trait = arbitrary
							has_character_flag = corruption_remove_just
						}
					}
					set_character_flag = corruption_remove_just
					character_event = { id = MNM.7050 days = 3 random = 27 }
				}
				5 = {
					modifier = {
						factor = 0
						OR = {
							trait = just
							trait = arbitrary
							has_character_flag = corruption_add_arbitrary
						}
					}
					set_character_flag = corruption_add_arbitrary
					character_event = { id = MNM.7050 days = 3 random = 27 }
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							NOT = { trait = honest }
							trait = deceitful
							has_character_flag = corruption_remove_honest
						}
					}
					set_character_flag = corruption_remove_honest
					character_event = { id = MNM.7050 days = 3 random = 27 }
				}
				5 = {
					modifier = {
						factor = 0
						OR = {
							trait = honest
							trait = deceitful
							has_character_flag = corruption_add_deceitful
						}
					}
					set_character_flag = corruption_add_deceitful
					character_event = { id = MNM.7050 days = 3 random = 27 }
				}
				5 = {
					modifier = {
						factor = 0
						trait = possessed
						has_character_flag = corruption_add_possessed
					}
					set_character_flag = corruption_add_possessed
					character_event = { id = MNM.7050 days = 3 random = 27 }
				}
				80 = { }
			}
		}
		random_list = { #Risk of getting weaker
			15 = {
				trigger = { NOT = { trait = stressed } }
				character_event = { id = MNM.7051 days = 32 random = 5 }
			}
			5 = {
				trigger = { NOT = { trait = lunatic } }
				character_event = { id = MNM.7052 days = 32 random = 5 }
			}
			5 = {
				trigger = { NOR = { trait = stutter } }
				character_event = { id = MNM.7053 days = 32 random = 5 }
			}
			5 = {
				trigger = { NOR = { trait = clubfooted } }
				character_event = { id = MNM.7054 days = 32 random = 5 }
			}
			5 = {
				trigger = { NOR = { trait = hunchback } }
				character_event = { id = MNM.7055 days = 32 random = 5 }
			}
			5 = {
				trigger = { NOR = { trait = ugly has_character_flag = infernal_beauty } }
				character_event = { id = MNM.7056 days = 32 random = 5 }
			}
			5 = {
				trigger = {
					NOR = {
						trait = feeble
						trait = weak
						trait = strong
						has_character_flag = infernal_strength
					}
				}
				character_event = { id = MNM.7059 days = 32 random = 5 }
			}
			50 = {
				#trigger = {
				#	NOR = {
				#		NOT = { health = 3 }
				#		has_character_modifier = corrupting_magic_minor
				#		has_character_modifier = corrupting_magic_major
				#	}
				#}
				character_event = { id = MNM.7058 days = 32 random = 5 }
			}
			450 = {  # High visibility (ability abuse) increases the risk of getting weaker
				modifier = {
					factor = 0.9
					check_variable = { which = visibility_value value = 10 }
				}
				modifier = {
					factor = 0.9
					check_variable = { which = visibility_value value = 15 }
				}
				modifier = {
					factor = 0.9
					check_variable = { which = visibility_value value = 20 }
				}
				modifier = {
					factor = 0.9
					check_variable = { which = visibility_value value = 25 }
				}
				modifier = {
					factor = 0.9
					check_variable = { which = visibility_value value = 30 }
				}
				modifier = {
					factor = 0.9
					check_variable = { which = visibility_value value = 35 }
				}
				modifier = {
					factor = 0.9
					check_variable = { which = visibility_value value = 40 }
				}
			}
		}
	}
}

add_society_currency_trivial_effect = {
	if = {
		limit = { is_in_society = yes }
		change_society_currency = 10
	}
}

add_society_currency_tiny_effect = {
	if = {
		limit = { is_in_society = yes }
		change_society_currency = 50
	}
}

add_society_currency_minor_effect = {
	if = {
		limit = { is_in_society = yes }
		change_society_currency = 100
	}
}

add_society_currency_medium_effect = {
	if = {
		limit = { is_in_society = yes }
		change_society_currency = 200
	}
}

add_society_currency_major_effect = {
	if = {
		limit = { is_in_society = yes }
		change_society_currency = 300
	}
}

add_society_currency_large_effect = {
	if = {
		limit = { is_in_society = yes }
		change_society_currency = 500
	}
}

add_society_currency_massive_effect = {
	if = {
		limit = { is_in_society = yes }
		change_society_currency = 1000
	}
}

detract_society_currency_trivial_effect = {
	if = {
		limit = { is_in_society = yes }
		change_society_currency = -15
	}
}

detract_society_currency_tiny_effect = {
	if = {
		limit = { is_in_society = yes }
		change_society_currency = -50
	}
}

detract_society_currency_minor_effect = {
	if = {
		limit = { is_in_society = yes }
		change_society_currency = -150
	}
}

detract_society_currency_medium_effect = {
	if = {
		limit = { is_in_society = yes }
		change_society_currency = -300
	}
}

detract_society_currency_major_effect = {
	if = {
		limit = { is_in_society = yes }
		change_society_currency = -500
	}
}

remove_random_maimed_effect = { #remember to clear flags if using this effect :D
	random_list = {
		40 = {
			modifier = {
				NOT = { trait = maimed }
				factor = 0
			}
			set_character_flag = removed_maimed
		}
		40 = {
			modifier = {
				NOT = {trait = mangled}
				factor = 0
			}
			set_character_flag = removed_mangled
		}
		10 = {
			modifier = {
				NOT = {trait = one_eyed}
				factor = 0
			}
			set_character_flag = removed_one_eyed
		}
		10 = {
			modifier = {
				NOT = {trait = one_handed}
				factor = 0
			}
			set_character_flag = removed_one_handed
		}
		10 = {
			modifier = {
				NOT = {trait = one_legged}
				factor = 0
			}
			set_character_flag = removed_one_legged
		}
		5 = {
			modifier = {
				NOT = {trait = disfigured}
				factor = 0
			}
			set_character_flag = removed_disfigured
		}
	}
}

remove_random_disease_effect = { # Do actual trait removal in event. This is a clunky solution, but communication to player has been prioritised for the sake of event MNM.7119
	random_list = {
		40 = {
			modifier = {
				NOT = { trait = flu }
				factor = 0
			}
			set_character_flag = removing_flu
		}
		20 = {
			modifier = {
				NOT = { trait = has_measles }
				factor = 0
			}
			set_character_flag = removing_measles
		}
		40 = {
			modifier = {
				NOT = {
					trait = food_poisoning
				}
				factor = 0
			}
			set_character_flag = removing_food_poisoning
		}
		20 = {
			modifier = {
				NOT = { trait = gout }
				factor = 0
			}
			set_character_flag = removing_gout
		}
		40 = {
			modifier = {
				NOT = { trait = scurvy }
				factor = 0
			}
			set_character_flag = removing_scurvy
		}
		20 = {
			modifier = {
				NOT = { trait = lovers_pox }
				factor = 0
			}
			set_character_flag = removing_lovers_pox
		}
		5 = {
			modifier = {
				NOT = { trait = cancer }
				factor = 0
			}
			set_character_flag = removing_cancer
		}
		10 = {
			modifier = {
				NOT = { trait = pneumonic }
				factor = 0
			}
			set_character_flag = removing_pneumonic
		}
		10 = {
			modifier = {
				NOT = { trait = syphilitic }
				factor = 0
			}
			set_character_flag = removing_syphilitic
		}
		5 = {
			modifier = {
				NOT = { trait = leper }
				factor = 0
			}
			set_character_flag = removing_leper
		}
	}
}

remove_random_epidemic_disease_effect = {
	random_list = {
		10 = {
			modifier = {
				NOT = { trait = has_tuberculosis}
				factor = 0
			}
			set_character_flag = removing_has_tuberculosis
		}
		10 = {
			modifier = {
				NOT = { trait = has_aztec_disease}
				factor = 0
			}
			set_character_flag = removing_has_aztec_disease
		}
		10 = {
			modifier = {
				NOT = { trait = has_small_pox}
				factor = 0
			}
			set_character_flag = removing_has_small_pox
		}
		10 = {
			modifier = {
				NOT = { trait = has_bubonic_plague}
				factor = 0
			}
			set_character_flag = removing_has_bubonic_plague
		}
		10 = {
			modifier = {
				NOT = { trait = has_typhus}
				factor = 0
			}
			set_character_flag = removing_has_typhus
		}
		10 = {
			modifier = {
				NOT = { trait = has_typhoid_fever}
				factor = 0
			}
			set_character_flag = removing_has_typhoid_fever
		}
		10 = {
			modifier = {
				NOT = { trait = has_measles}
				factor = 0
			}
			set_character_flag = removing_measles
		}

	}
}

remove_symptoms_effect = {
	if = {
		limit = { trait = cough}
		remove_trait = cough
	}
	if = {
		limit = { trait = fever}
		remove_trait = fever
	}
	if = {
		limit = { trait = diarrhea}
		remove_trait = diarrhea
	}
	if = {
		limit = { trait = vomiting}
		remove_trait = vomiting
	}
	if = {
		limit = { trait = chest_pain}
		remove_trait = chest_pain
	}
	if = {
		limit = { trait = cramps}
		remove_trait = cramps
	}
	if = {
		limit = { trait = rash}
		remove_trait = rash
	}
	if = {
		limit = { trait = headache}
		remove_trait = headache
	}
	if = {
		limit = { trait = abdominal_pain}
		remove_trait = abdominal_pain
	}
	if = {
		limit = { trait = fatigue}
		remove_trait = fatigue
	}
	if = {
		limit = { trait = malaise}
		remove_trait = malaise
	}
}

join_from_devil_worshiper_society_effect = {
	FROM = {
		if = {
			limit = {
				society_member_of = the_satanists
			}
			ROOT = {
				join_society = the_satanists
			}
		}
	}
}

remove_demonic_blessing_effect = {
	if = { limit = { has_character_modifier = blessing_of_azazel }
		remove_character_modifier = blessing_of_azazel
	}
	if = { limit = { has_character_modifier = blessing_of_avnas }
		remove_character_modifier = blessing_of_avnas
	}
	if = { limit = { has_character_modifier = blessing_of_belial }
		remove_character_modifier = blessing_of_belial
	}
	if = { limit = { has_character_modifier = blessing_of_mammon }
		remove_character_modifier = blessing_of_mammon
	}
	if = { limit = { has_character_modifier = blessing_of_vetis }
		remove_character_modifier = blessing_of_vetis
	}
}

add_prolong_life_effect = {
	if = {
		limit = {
			NOR = {
				has_character_modifier = stolen_life_minor
				has_character_modifier = stolen_life_medium
				has_character_modifier = stolen_life_major
			}
		}
		random_list = {
			10 = {
				add_character_modifier = {
					name = stolen_life_minor
					days = 3650
				}
			}
			10 = {
				add_character_modifier = {
					name = stolen_life_medium
					days = 3650
				}
			}
			10 = {
				add_character_modifier = {
					name = stolen_life_major
					days = 3650
				}
			}
		}
		break = yes
	}
	if = {
		limit = {
			OR = {
				has_character_modifier = stolen_life_minor
				has_character_modifier = stolen_life_medium
			}
		}
		hidden_effect = {
			remove_character_modifier = stolen_life_minor
			remove_character_modifier = stolen_life_medium
		}
		add_character_modifier = {
					name = stolen_life_major
					days = 3650
		}
		break = yes
	}
	add_character_modifier = {
		name = stolen_life_major
		days = 3650
	}
}

join_prev_devil_worshiper_society_effect = {
	if = {
		limit = { PREV = { society_member_of = the_satanists } }
		join_society = the_satanists
	}
}
join_prev_warrior_lodge_society_effect = {
	if = {
		limit = { PREV = { society_member_of = warrior_lodge_uthgardt } }
		join_society = warrior_lodge_uthgardt
	}
	else_if = {
		limit = { PREV = { society_member_of = warrior_lodge_orcs } }
		join_society = warrior_lodge_orcs
	}
	else_if = {
		limit = { PREV = { society_member_of = warrior_lodge_goblins } }
		join_society = warrior_lodge_goblins
	}
	else_if = {
		limit = { PREV = { society_member_of = warrior_lodge_rashemen } }
		join_society = warrior_lodge_rashemen
	}
	else_if = {
		limit = { PREV = { society_member_of = warrior_lodge_elven } }
		join_society = warrior_lodge_elven
	}
	else_if = {
		limit = { PREV = { society_member_of = warrior_lodge_dwarven } }
		join_society = warrior_lodge_dwarven
	}
}
give_this_warrior_lodge_religion_effect = { #Mostly for spawned characters.
	if = {
		limit = {
			society_member_of = warrior_lodge_uthgardt
		}
		religion = uthgardt_faith
	}
	else_if = {
		limit = {
			society_member_of = warrior_lodge_orcs
			NOT = { has_global_flag = orc_reformation }
		}
		religion = orc_pantheon
	}
	else_if = {
		limit = {
			society_member_of = warrior_lodge_orcs
			has_global_flag = orc_reformation
		}
		religion = orc_reformed
	}
	else_if = {
		limit = {
			society_member_of = warrior_lodge_goblins
			NOT = { has_global_flag = goblin_reformation }
		}
		religion = goblin_pantheon
	}
	else_if = {
		limit = {
			society_member_of = warrior_lodge_goblins
			has_global_flag = goblin_reformation
		}
		religion = goblin_reformed
	}
	else_if = {
		limit = {
			society_member_of = warrior_lodge_rashemen
		}
		religion = rasallesian
	}
	else_if = {
		limit = {
			society_member_of = warrior_lodge_elven
		}
		religion = elven_pantheon
	}
	else_if = {
		limit = {
			society_member_of = warrior_lodge_dwarven
		}
		religion = dwarven_pantheon
	}
}

remove_education_effect = {
	remove_trait = naive_appeaser
	remove_trait = underhanded_rogue
	remove_trait = charismatic_negotiator
	remove_trait = grey_eminence
	remove_trait = misguided_warrior
	remove_trait = tough_soldier
	remove_trait = skilled_tactician
	remove_trait = brilliant_strategist
	remove_trait = indulgent_wastrel
	remove_trait = thrifty_clerk
	remove_trait = fortune_builder
	remove_trait = midas_touched
	remove_trait = amateurish_plotter
	remove_trait = flamboyant_schemer
	remove_trait = intricate_webweaver
	remove_trait = elusive_shadow
	remove_trait = detached_priest
	remove_trait = martial_cleric
	remove_trait = scholarly_theologian
	remove_trait = mastermind_theologian
}

monastic_order_purity_effect = {
	if = {
		limit = {
			is_monastic_member_trigger = yes
			OR = {
				AND = {
					is_good_monastic_member_trigger = yes
					OR = {
						trait = cynical
						trait = gluttonous
						trait = greedy
						trait = slothful
						trait = envious
						trait = wroth
						trait = proud
						trait = deceitful
						trait = cruel
						trait = lustful
						trait = ambitious
						NOT = { trait = humble }
						NOT = { trait = charitable }
						NOT = { trait = kind }
						NOT = { trait = temperate }
						NOT = { trait = honest }
						NOT = { trait = chaste }
						NOT = { trait = patient }
						NOT = { trait = diligent }
						NOT = { trait = content }
					}
				}
				AND = {
					is_evil_monastic_member_trigger = yes
					OR = {
						trait = cynical
						trait = gluttonous
						trait = charitable
						trait = slothful
						trait = kind
						trait = lustful
						trait = content
						NOT = { trait = temperate }
						NOT = { trait = greedy }
						NOT = { trait = diligent }
						NOT = { trait = cruel }
						NOT = { trait = chaste }
						NOT = { trait = ambitious }
					}
				}
				AND = {
					is_lawful_neutral_monastic_member_trigger = yes
					OR = {
						trait = cynical
						trait = gluttonous
						trait = slothful
						trait = wroth
						trait = deceitful
						trait = lustful
						trait = arbitrary
						NOT = { trait = temperate }
						NOT = { trait = diligent }
						NOT = { trait = patient }
						NOT = { trait = honest }
						NOT = { trait = chaste }
						NOT = { trait = just }
					}
				}
			}
		}

		random = {
			chance = 20
			modifier = {
				factor = 1.3
				society_rank == 2
			}
			modifier = {
				factor = 1.5
				society_rank == 3
			}
			modifier = {
				factor = 1.7
				society_rank == 4
			}
			modifier = {
				factor = 1.1
				piety = 100
			}
			modifier = {
				factor = 1.3
				piety = 300
			}
			modifier = {
				factor = 1.5
				piety = 500
			}
			modifier = {
				factor = 2
				piety = 1000
			}
			character_event = { id = MNM.4400 days = 10 random = 10 }
		}
	}
}

join_prev_monastic_order_society = {
	if = {
		limit = { PREV = { society_member_of = monastic_order_sun_soul } }
		join_society = monastic_order_sun_soul
	}
	if = {
		limit = { PREV = { society_member_of = monastic_order_long_death } }
		join_society = monastic_order_long_death
	}
	if = {
		limit = { PREV = { society_member_of = monastic_order_empty_hand } }
		join_society = monastic_order_empty_hand
	}
	if = {
		limit = { PREV = { society_member_of = monastic_order_old_order } }
		join_society = monastic_order_old_order
	}
}

random_accident_death_effect = {
	tooltip = { death = { death_reason = death_accident } }
	hidden_effect = {
		random_list = {
			10 = {
				modifier = { factor = 0 host = { capital_scope = { region = northern_zakhara_region } } }
				death = { death_reason = death_accident_drowning }
			}
			10 = {
				modifier = { factor = 0 host = { capital_scope = { region = northern_zakhara_region } } }
				death = { death_reason = death_accident_bear }
			}
			10 = {
				death = { death_reason = death_accident_boar }
			}
			10 = {
				death = { death_reason = death_accident_fall }
			}
			10 = {
				death = { death_reason = death_accident_arrow }
			}
			10 = {
				death = { death_reason = death_accident_snakes }
			}
			10 = {
				modifier = { factor = 0 host = { capital_scope = { region = world_india } } }
				death = { death_reason = death_accident_tiger }
			}
		}
	}
}

print_scope_effect = {
	log = "------------------------------"
	log = "- Printing the current scope -"
	log = "- This: [This.GetName][This.GetBestName]"
	log = "- Root: [Root.GetName][Root.GetBestName]"
	log = "- Prev: [Prev.GetName][Prev.GetBestName]"
	log = "- PrevPrev: [PrevPrev.GetName][PrevPrev.GetBestName]"
	log = "- PrevPrevPrev: [PrevPrevPrev.GetName][PrevPrevPrev.GetBestName]"
	log = "- PrevPrevPrevPrev: [PrevPrevPrevPrev.GetName][PrevPrevPrevPrev.GetBestName]"
	log = "- From: [From.GetName][From.GetBestName]"
	log = "- FromFrom: [FromFrom.GetName][FromFrom.GetBestName]"
	log = "- FromFromFrom: [FromFromFrom.GetName][FromFromFrom.GetBestName]"
	log = "- FromFromFromFrom: [FromFromFromFrom.GetName][FromFromFromFrom.GetBestName]"
	log = "- Event_target:test_target1: [test_target1.GetName][test_target1.GetBestName]"
	log = "- Event_target:test_target2: [test_target2.GetName][test_target2.GetBestName]"
	log = "- Event_target:test_target3: [test_target3.GetName][test_target3.GetBestName]"
	log = "------------------------------"
}

add_sympathy_for_prevs_true_religion_effect = {
	if = {
		limit = {
			PREV = { true_religion_group_good_human_pantheon_group_trigger = yes }
			NOT = { religion_group = good_human_pantheon_group }
		}
		add_trait = sympathy_good_human_pantheon_group
	}
	if = {
		limit = {
			PREV = { true_religion_group_wild_human_pantheon_group_trigger = yes }
			NOT = { religion_group = wild_human_pantheon_group }
		}
		add_trait = sympathy_wild_human_pantheon_group
	}
	if = {
		limit = {
			PREV = { true_religion_group_humanoid_group_trigger = yes }
			NOT = { religion_group = humanoid_group }
		}
		add_trait = sympathy_humanoid_group
	}
	if = {
		limit = {
			PREV = { true_religion_group_evil_human_pantheon_group_trigger = yes }
			NOT = { religion_group = evil_human_pantheon_group }
		}
		add_trait = sympathy_evil_human_pantheon_group
	}
	if = {
		limit = {
			PREV = { true_religion_group_qismaite_group_trigger = yes }
			NOT = { religion_group = qismaite_group }
		}
		add_trait = sympathy_qismaite_group
	}
	if = {
		limit = {
			PREV = { true_religion_group_karaturan_group_trigger = yes }
			NOT = { religion_group = karaturan_group }
		}
		add_trait = sympathy_karaturan_group
	}
	if = {
		limit = {
			PREV = { true_religion_group_elven_pantheon_group_trigger = yes }
			NOT = { religion_group = elven_pantheon_group }
		}
		add_trait = sympathy_elven_pantheon_group
	}
	if = {
		limit = {
			PREV = { true_religion_group_drow_pantheon_trigger = yes }
			NOT = { religion_group = drow_pantheon }
		}
		add_trait = sympathy_drow_pantheon
	}
	if = {
		limit = {
			PREV = { true_religion_group_dwarven_pantheon_group_trigger = yes }
			NOT = { religion_group = dwarven_pantheon_group }
		}
		add_trait = sympathy_dwarven_pantheon_group
	}
	if = {
		limit = {
			PREV = { true_religion_group_giant_pantheon_group_trigger = yes }
			NOT = { religion_group = giant_pantheon_group }
		}
		add_trait = sympathy_giant_pantheon_group
	}
	if = {
		limit = {
			PREV = { true_religion_group_draconic_group_trigger = yes }
			NOT = { religion_group = draconic_group }
		}
		add_trait = sympathy_draconic_group
	}
	if = {
		limit = {
			PREV = { true_religion_group_unenlightened_group_trigger = yes }
			NOT = { religion_group = unenlightened_group }
		}
		add_trait = sympathy_unenlightened_group
	}
	if = {
		limit = {
			PREV = { true_religion_group_atheist_group_trigger = yes }
			NOT = { religion_group = atheist_group }
		}
		add_trait = sympathy_atheist_group
	}
}

add_sympathy_for_prevs_open_religion_effect = {
	if = {
		limit = {
			PREV = { religion_group = good_human_pantheon_group }
			NOT = { religion_group = good_human_pantheon_group }
		}
		add_trait = sympathy_good_human_pantheon_group
	}
	if = {
		limit = {
			PREV = { religion_group = wild_human_pantheon_group }
			NOT = { religion_group = wild_human_pantheon_group }
		}
		add_trait = sympathy_wild_human_pantheon_group
	}
	if = {
		limit = {
			PREV = { religion_group = humanoid_group }
			NOT = { religion_group = humanoid_group }
		}
		add_trait = sympathy_humanoid_group
	}
	if = {
		limit = {
			PREV = { religion_group = evil_human_pantheon_group }
			NOT = { religion_group = evil_human_pantheon_group }
		}
		add_trait = sympathy_evil_human_pantheon_group
	}
	if = {
		limit = {
			PREV = { religion_group = qismaite_group }
			NOT = { religion_group = qismaite_group }
		}
		add_trait = sympathy_qismaite_group
	}
	if = {
		limit = {
			PREV = { religion_group = karaturan_group }
			NOT = { religion_group = karaturan_group }
		}
		add_trait = sympathy_karaturan_group
	}
	if = {
		limit = {
			PREV = { religion_group = elven_pantheon_group }
			NOT = { religion_group = elven_pantheon_group }
		}
		add_trait = sympathy_elven_pantheon_group
	}
	if = {
		limit = {
			PREV = { religion_group = drow_pantheon }
			NOT = { religion_group = drow_pantheon }
		}
		add_trait = sympathy_drow_pantheon
	}
	if = {
		limit = {
			PREV = { religion_group = dwarven_pantheon_group }
			NOT = { religion_group = dwarven_pantheon_group }
		}
		add_trait = sympathy_dwarven_pantheon_group
	}
	if = {
		limit = {
			PREV = { religion_group = giant_pantheon_group }
			NOT = { religion_group = giant_pantheon_group }
		}
		add_trait = sympathy_giant_pantheon_group
	}
	if = {
		limit = {
			PREV = { religion_group = draconic_group }
			NOT = { religion_group = draconic_group }
		}
		add_trait = sympathy_draconic_group
	}
	if = {
		limit = {
			PREV = { religion_group = unenlightened_group }
			NOT = { religion_group = unenlightened_group }
		}
		add_trait = sympathy_unenlightened_group
	}
	if = {
		limit = {
			PREV = { religion_group = atheist_group }
			NOT = { religion_group = atheist_group }
		}
		add_trait = sympathy_atheist_group
	}
}

add_trait_for_prevs_secret_religion_society_effect = {
	set_secret_religion = PREV
}

flip_to_secret_religion_effect = {
	convert_to_secret_religion = yes
}

add_prevs_secret_religion_trait_effect = {
	set_secret_religion = PREV
}

#Used in different sutiation, there conditions on effect. Flag has precedence over religion.
add_secret_religion_trait_trigger_is_religion_or_old_religion_flag_clear_flag_after_effect_is_run_this_name_is_a_tribute_to_m_effect = {
	# if = {
		# limit = {
			# OR = {
				# AND = {
					# NOT = {
						# OR = {
							# has_character_flag = character_was_catholic
						# }
					# }
					# religion = catholic
				# }
				# has_character_flag = character_was_catholic
			# }
		# }
		# set_secret_religion = catholic
		# clr_character_flag = character_was_catholic
		# break = yes
	# }
}

add_religion_char_flag_effect = {
	# if = {
		# limit = { religion = catholic }
		# set_character_flag = character_was_catholic
	# }
}

clr_religion_char_flag_effect = {
	# clr_character_flag = character_was_catholic
}

event_target_old_religion_from_flag_effect = {
	# if = {
		# limit = { has_character_flag = character_was_catholic }
		# catholic = {
			# save_event_target_as = old_religion
		# }
	# }
}

increase_visibility_effect = {
	#custom_tooltip = { text = debug_vis }
	hidden_effect = {
		change_variable = { which = visibility_value value = 5 }
		if = {
			limit = {
				check_variable = { which = visibility_value value = 15 }
				NOR = {
					has_character_modifier = under_suspicion
					has_character_modifier = highly_suspect
				}
			}
			add_character_modifier = {
				name = under_suspicion
				duration = -1
			}
			character_event = { id = MNM.6662 days = 1 }
		}
		if = {
			limit = {
				check_variable = { which = visibility_value value = 25 }
				NOT = {
					has_character_modifier = highly_suspect
				}
			}
			remove_character_modifier = under_suspicion
			add_character_modifier = {
				name = highly_suspect duration = -1
			}
			character_event = { id = MNM.6663 days = 1 }
			liege = {
				set_character_flag = secret_societies_interference
				character_event = { id = MNM.6661 days = 1095 random = 1095 }
			}
		}
		if = { # Too visible? You auto-reveal yourself if you are independent
			limit = {
				independent = yes
				is_ruler = yes
				check_variable = { which = visibility_value value = 40 }
				NOT = {
					has_character_flag = self_reveal
				}
			}
			set_character_flag = self_reveal
			character_event = { id = MNM.6668 days = 1 }
		}
	}
}

increase_visibility_minor_effect = {
	#custom_tooltip = { text = debug_vis }
	hidden_effect = {
		change_variable = { which = visibility_value value = 2 }
		if = {
			limit = {
				check_variable = { which = visibility_value value = 15 }
				NOR = {
					has_character_modifier = under_suspicion
					has_character_modifier = highly_suspect
				}
			}
			add_character_modifier = {
				name = under_suspicion
				duration = -1
			}
			character_event = { id = MNM.6662 days = 1 }
		}
		if = {
			limit = {
				check_variable = { which = visibility_value value = 25 }
				NOT = {
					has_character_modifier = highly_suspect
				}
			}
			remove_character_modifier = under_suspicion
			add_character_modifier = {
				name = highly_suspect duration = -1
			}
			character_event = { id = MNM.6663 days = 1 }
			liege = {
				set_character_flag = secret_societies_interference
				character_event = { id = MNM.6661 days = 1095 random = 1095 }
			}
		}
		if = { # Too visible? You auto-reveal yourself if you are independent
			limit = {
				independent = yes
				is_ruler = yes
				check_variable = { which = visibility_value value = 40 }
				NOT = {
					has_character_flag = self_reveal
				}
			}
			set_character_flag = self_reveal
			if = {
				limit = {
					is_devil_worshiper_trigger = yes
				}
				add_character_modifier = {
					name = known_satanist
					duration = -1
				}
			}
			if = {
				limit = {
					is_devil_worshiper_trigger = no
				}
				add_character_modifier = {
					name = accused_apostate
					duration = -1
				}
			}
			# if = {
				# limit = {
					# controls_religion = no
					# OR = {
						# religion = catholic
						# religion = fraticelli
						# religion = orthodox
						# religion = miaphysite
						# religion = monophysite
						# religion = monothelite
						# religion = paulician
						# religion = nestorian
						# religion = yazidi
					# }
				# }
				# add_trait = excommunicated
			# }
			character_event = { id = MNM.6668 days = 1 }
		}
	}
}

decrease_visibility_effect = {
	hidden_effect = {
		if = {
			limit = {
				check_variable = { which = visibility_value value = 1 }
			}
			random_list = {
				50 = {
					change_variable = { which = visibility_value value = -1 }
				}
				20 = {
					change_variable = { which = visibility_value value = -2 }
					modifier = {
						factor = 1.5
						OR = {
							trait = schemer
							trait = deceitful
							trait = patient
							trait = paranoid
						}
					}
					modifier = {
						factor = 1.25
						intrigue = 12
					}
					modifier = {
						factor = 1.25
						intrigue = 14
					}
					modifier = {
						factor = 1.25
						intrigue = 16
					}
				}
				15 = {
					change_variable = { which = visibility_value value = -3 }
					modifier = {
						factor = 1.5
						OR = {
							trait = schemer
							trait = deceitful
							trait = patient
							trait = paranoid
						}
					}
					modifier = {
						factor = 1.25
						intrigue = 12
					}
					modifier = {
						factor = 1.25
						intrigue = 14
					}
					modifier = {
						factor = 1.25
						intrigue = 16
					}
				}
				10 = {
					change_variable = { which = visibility_value value = -4 }
					modifier = {
						factor = 1.5
						OR = {
							trait = schemer
							trait = deceitful
							trait = patient
							trait = paranoid
						}
					}
					modifier = {
						factor = 1.25
						intrigue = 12
					}
					modifier = {
						factor = 1.25
						intrigue = 14
					}
					modifier = {
						factor = 1.25
						intrigue = 16
					}
				}
				5 = {
					change_variable = { which = visibility_value value = -5 }
					modifier = {
						factor = 1.5
						OR = {
							trait = schemer
							trait = deceitful
							trait = patient
							trait = paranoid
						}
					}
					modifier = {
						factor = 1.25
						intrigue = 12
					}
					modifier = {
						factor = 1.25
						intrigue = 14
					}
					modifier = {
						factor = 1.25
						intrigue = 16
					}
				}
			}
		}
		if = {
			limit = {
				NOT = { check_variable = { which = visibility_value value = 0 } } #safety
			}
			set_variable = { which = visibility_value value = 0 }
		}
	}
	if = {
		limit = {
			NOT = { check_variable = { which = visibility_value value = 25 } }
			has_character_modifier = highly_suspect
		}
		remove_character_modifier = highly_suspect
		add_character_modifier = {
			name = under_suspicion
			duration = -1
		}
		character_event = { id = MNM.6664 }
	}
	if = {
		limit = {
			NOT = { check_variable = { which = visibility_value value = 15 } }
			has_character_modifier = under_suspicion
		}
		remove_character_modifier = under_suspicion
		character_event = { id = MNM.6665 }
	}
}

hermetic_add_herbal_ingredient_effect = {
	hidden_effect = {
		random_list = {
			50 = {
				add_artifact = ingredient_herb1
			}
			50 = {
				add_artifact = ingredient_herb2
			}
			50 = {
				add_artifact = ingredient_herb3
			}
			50 = {
				add_artifact = ingredient_herb4
			}
			50 = {
				add_artifact = ingredient_herb5
			}
			50 = {
				add_artifact = ingredient_herb6
			}
			50 = {
				add_artifact = ingredient_herb7
			}
			50 = {
				add_artifact = ingredient_herb8
			}
			50 = {
				add_artifact = ingredient_herb9
			}
		}
	}
}

hermetic_add_animal_ingredient_effect = {
	hidden_effect = {
		random_list = {
			50 = {
				add_artifact = ingredient_animal1
			}
			50 = {
				add_artifact = ingredient_animal2
			}
			50 = {
				add_artifact = ingredient_animal3
			}
			50 = {
				add_artifact = ingredient_animal4
			}
			50 = {
				add_artifact = ingredient_animal5
			}
			50 = {
				add_artifact = ingredient_animal6
			}
			50 = {
				add_artifact = ingredient_animal7
			}
			50 = {
				add_artifact = ingredient_animal8
			}
			50 = {
				add_artifact = ingredient_animal9
			}
		}
	}
}

hermetic_add_misc_ingredient_effect = {
	hidden_effect = {
		random_list = {
			50 = {
				add_artifact = ingredient_metal_exotic1
			}
			50 = {
				add_artifact = ingredient_metal_exotic2
			}
			50 = {
				add_artifact = ingredient_metal_exotic3
			}
			50 = {
				add_artifact = ingredient_metal_exotic4
			}
			50 = {
				add_artifact = ingredient_metal_exotic5
			}
			50 = {
				add_artifact = ingredient_metal_exotic6
			}
			50 = {
				add_artifact = ingredient_metal_exotic7
			}
			50 = {
				add_artifact = ingredient_metal_exotic8
			}
			50 = {
				add_artifact = ingredient_metal_exotic9
			}
		}
	}
}

remove_scrying_omen_modifiers_effect = { #For cleaning up end-states of the Hermetics Scrying Power
	if = {
		limit = { has_character_modifier = good_battle_omen }
		remove_character_modifier = good_battle_omen
	}
	if = {
		limit = { has_character_modifier = bad_battle_omen }
		remove_character_modifier = bad_battle_omen
	}
	if = {
		limit = { has_character_modifier = good_relationship_omen }
		remove_character_modifier = good_relationship_omen
	}
	if = {
		limit = { has_character_modifier = bad_relationship_omen }
		remove_character_modifier = bad_relationship_omen
	}
	if = {
		limit = { has_character_modifier = good_power_omen }
		remove_character_modifier = good_power_omen
	}
	if = {
		limit = { has_character_modifier = bad_power_omen }
		remove_character_modifier = bad_power_omen
	}
	hidden_effect = { remove_character_modifier = scrying_cooldown }
	clr_character_flag = positive_reaction_to_scrying_flag
	clr_character_flag = negative_reaction_to_scrying_flag
	clr_character_flag = positive_event_flag
	clr_character_flag = negative_event_flag
	clear_delayed_event = { id = MNM.1225 }
	clear_delayed_event = { id = MNM.1226 }
	clear_delayed_event = { id = MNM.1227 }
}

calculate_scrying_outcome_effect = { # the positive_event_flag/negative_event_flag need to be set somewhere in the target event in order for this to work...
	custom_tooltip = { text = tooltip_info_omen_tt }

	if = {
		limit = {
			OR = {
				AND = {
					has_positive_omen_modifier_trigger = yes
					has_character_flag = positive_event_flag
				}
				AND = {
					has_negative_omen_modifier_trigger = yes
					has_character_flag = negative_event_flag
				}
			}
		}
		upgrade_seer_modifier_effect = yes
	}
	if = {
		limit = {
			OR = {
				AND = {
					has_positive_omen_modifier_trigger = yes
					has_character_flag = negative_event_flag
				}
				AND = {
					has_negative_omen_modifier_trigger = yes
					has_character_flag = positive_event_flag
				}
			}
		}
		downgrade_seer_modifier_effect = yes
	}
	clr_character_flag = positive_event_flag
	clr_character_flag = negative_event_flag
}

upgrade_seer_modifier_effect = { # Modifiers gotten at end-states of the Hermetics Scrying Power
	if = {
		limit = {
			has_a_seer_modifier_trigger = yes
		}
		trigger_switch = {
			on_trigger = has_character_modifier
			fulfilled_vision_worst = {
				remove_character_modifier = fulfilled_vision_worst
				add_character_modifier = {
					name = fulfilled_vision_bad
					duration = 2555
				}
			}
			fulfilled_vision_bad = {
				remove_character_modifier = fulfilled_vision_bad
				add_character_modifier = {
					name = fulfilled_vision_ok
					duration = 2555
				}
			}
			fulfilled_vision_ok = {
				remove_character_modifier = fulfilled_vision_ok
				add_character_modifier = {
					name = fulfilled_vision_great
					duration = 2555
				}
			}
			fulfilled_vision_great = {
				add_character_modifier = {
					name = fulfilled_vision_great
					duration = 2555
				}
			}
		}
	}
	if = {
		limit = {
			has_a_seer_modifier_trigger = no
		}
		add_character_modifier = {
			name = fulfilled_vision_ok
			duration = 2555
		}
	}
}

downgrade_seer_modifier_effect = { # Modifiers gotten at end-states of the Hermetics Scrying Power
	if = {
		limit = {
			has_a_seer_modifier_trigger = yes
		}
		trigger_switch = {
			on_trigger = has_character_modifier
			fulfilled_vision_great = {
				remove_character_modifier = fulfilled_vision_great
				add_character_modifier = {
					name = fulfilled_vision_ok
					duration = 2555
				}
			}
			fulfilled_vision_ok = {
				remove_character_modifier = fulfilled_vision_ok
				add_character_modifier = {
					name = fulfilled_vision_bad
					duration = 2555
				}
			}
			fulfilled_vision_bad = {
				remove_character_modifier = fulfilled_vision_bad
				add_character_modifier = {
					name = fulfilled_vision_worst
					duration = 2555
				}
			}
			fulfilled_vision_worst = {
				add_character_modifier = {
					name = fulfilled_vision_worst
					duration = 2555
				}
			}
		}
	}
	if = {
		limit = {
			has_a_seer_modifier_trigger = no
		}
		add_character_modifier = {
			name = fulfilled_vision_bad
			duration = 2555
		}
	}
}

scrying_omen_fulfilled_by_gaining_disease_effect = { #scrying result are sent if someone gets sick and you are carrying an omen (fired from rip_symptom_events)
	hidden_effect = {
		host = {
			if = {
				limit = {
					OR = {
						is_close_relative = ROOT
						is_friend = ROOT
					}
					OR = {
						has_character_modifier = bad_relationship_omen
						has_character_modifier = good_relationship_omen
					}
				}
				character_event = { id = MNM.1221 days = 5 random = 5 } #to the host of sick character
			}
		}
		father = {
			if = {
				limit = {
					is_liege_of = ROOT
					OR = {
						has_character_modifier = bad_relationship_omen
						has_character_modifier = good_relationship_omen
					}
				}
				character_event = { id = MNM.1221 days = 5 random = 5 }
			}
		}
		mother = {
			if = {
				limit = {
					is_liege_of = ROOT
					OR = {
						has_character_modifier = bad_relationship_omen
						has_character_modifier = good_relationship_omen
					}
				}
				character_event = { id = MNM.1221 days = 5 random = 5 }
			}
		}
		spouse = {
			if = {
				limit = {
					is_liege_of = ROOT
					OR = {
						has_character_modifier = bad_relationship_omen
						has_character_modifier = good_relationship_omen
					}
				}
				character_event = { id = MNM.1221 days = 5 random = 5 }
			}
		}
		lover = {
			if = {
				limit = {
					is_liege_of = ROOT
					OR = {
						has_character_modifier = bad_relationship_omen
						has_character_modifier = good_relationship_omen
					}
				}
				character_event = { id = MNM.1221 days = 5 random = 5 }
			}
		}

		if = {
			limit = {
				OR = {
					has_character_modifier = bad_power_omen
					has_character_modifier = good_power_omen
				}
			}
			character_event = { id = MNM.1220 days = 5 random = 5 } #to the sick character themselves
		}
	}
}

scrying_omen_fulfilled_by_removing_disease_effect = { #scrying result are sent if someone gets sick and you are carrying an omen (fired from rip_symptom_events)
	hidden_effect = {
		host = {
			if = {
				limit = {
					OR = {
						is_close_relative = ROOT
						is_friend = ROOT
					}
					OR = {
						has_character_modifier = good_relationship_omen
						has_character_modifier = bad_relationship_omen
					}
				}
				character_event = { id = MNM.1223 days = 5 random = 5 } #to the host of sick character
			}
		}
		father = {
			if = {
				limit = {
					is_liege_of = ROOT
					OR = {
						has_character_modifier = good_relationship_omen
						has_character_modifier = bad_relationship_omen
					}
				}
				character_event = { id = MNM.1223 days = 5 random = 5 }
			}
		}
		mother = {
			if = {
				limit = {
					is_liege_of = ROOT
					OR = {
						has_character_modifier = good_relationship_omen
						has_character_modifier = bad_relationship_omen
					}
				}
				character_event = { id = MNM.1223 days = 5 random = 5 }
			}
		}
		spouse = {
			if = {
				limit = {
					is_liege_of = ROOT
					OR = {
						has_character_modifier = good_relationship_omen
						has_character_modifier = bad_relationship_omen
					}
				}
				character_event = { id = MNM.1223 days = 5 random = 5 }
			}
		}
		lover = {
			if = {
				limit = {
					is_liege_of = ROOT
					OR = {
						has_character_modifier = good_relationship_omen
						has_character_modifier = bad_relationship_omen
					}
				}
				character_event = { id = MNM.1223 days = 5 random = 5 }
			}
		}

		if = {
			limit = {
				OR = {
					has_character_modifier = good_power_omen
					has_character_modifier = bad_power_omen
				}
			}
			character_event = { id = MNM.1222 days = 5 random = 5 } #to the sick character themselves
		}
	}
}

add_pet_owl_effect = {
	add_character_modifier = {
		name = pet_owl
		duration = -1
	}
	hidden_tooltip = { character_event = { id = 77800 days = 3500 random = 2000 } } # Owl dies
}

add_mission_succeed_influence_effect = {
	add_society_modifier = 	{
		modifier = successful_mission
		years = 10
	}
}

add_mission_fail_influence_effect = {
	add_society_modifier = 	{
		modifier = failed_mission
		years = 10
	}
}

add_mission_decline_influence_effect = {
	add_society_modifier = 	{
		modifier = declined_mission
		years = 2
	}
}

clean_up_horoscope_effect = {
	clr_character_flag = avoided_destiny
	clr_character_flag = horoscope_maker_died
	clr_character_flag = destined_artist
	clr_character_flag = destined_fighter
	clr_character_flag = destined_diplomat
	clr_character_flag = destined_schemer
	clr_character_flag = destined_scholar
	clr_character_flag = encouraged_horoscope_pattern
	clr_character_flag = discouraged_horoscope_pattern
	clr_character_flag = horoscope_child_evaluate
	clr_character_flag = horoscope_path_1
	clr_character_flag = horoscope_maker_is_mother
	clr_character_flag = horoscope_maker_is_father
	remove_character_modifier = horoscope_cooldown
}

set_horoscope_modifier_effect = { # Modifiers received by target during the Hermetics Horoscope Power
	if = {
		limit = {
			has_childhood_horoscope_modifier_trigger = yes
			NOT = { has_character_flag = avoided_destiny }
		}
		trigger_switch = {
			on_trigger = has_character_modifier
			guided_by_horoscope_diplomacy = {
				remove_character_modifier = guided_by_horoscope_diplomacy
				add_character_modifier = {
					name = guided_by_horoscope_diplomacy_adult
					duration = 2555
				}
			}
			guided_by_horoscope_martial = {
				remove_character_modifier = guided_by_horoscope_martial
				add_character_modifier = {
					name = guided_by_horoscope_martial_adult
					duration = 2555
				}
			}
			guided_by_horoscope_stewardship = {
				remove_character_modifier = guided_by_horoscope_stewardship
				add_character_modifier = {
					name = guided_by_horoscope_stewardship_adult
					duration = 2555
				}
			}
			guided_by_horoscope_intrigue = {
				remove_character_modifier = guided_by_horoscope_intrigue
				add_character_modifier = {
					name = guided_by_horoscope_intrigue_adult
					duration = 2555
				}
			}
			guided_by_horoscope_learning = {
				remove_character_modifier = guided_by_horoscope_learning
				add_character_modifier = {
					name = guided_by_horoscope_learning_adult
					duration = 2555
				}
			}
		}
		break = yes
	}

	if = {
		limit = {
			has_childhood_horoscope_modifier_trigger = no
			is_adult = no
			NOT = { has_character_flag = avoided_destiny }
		}
		trigger_switch = {
			on_trigger = has_character_flag
			destined_steward = {
				add_character_modifier = {
					name = guided_by_horoscope_stewardship
					duration =-1
				}
			}
			destined_fighter = {
				add_character_modifier = {
					name = guided_by_horoscope_martial
					duration =-1
				}
			}
			destined_diplomat = {
				add_character_modifier = {
					name = guided_by_horoscope_diplomacy
					duration =-1
				}
			}
			destined_schemer = {
				add_character_modifier = {
					name = guided_by_horoscope_intrigue
					duration =-1
				}
			}
			destined_scholar = {
				add_character_modifier = {
					name = guided_by_horoscope_learning
					duration =-1
				}
			}
		}
		break = yes
	}

	if = {
		limit = {
			has_childhood_horoscope_modifier_trigger = no
			has_character_flag = avoided_destiny
		}
		trigger_switch = {
			on_trigger = has_character_flag
			destined_steward = {
				add_character_modifier = {
					name = horoscope_outcome_jittery
					years = 15
				}
			}
			destined_fighter = {
				add_character_modifier = {
					name = horoscope_outcome_brute
					years = 15
				}
			}
			destined_diplomat = {
				add_character_modifier = {
					name = horoscope_outcome_artist
					years = 15
				}
			}
			destined_schemer = {
				add_character_modifier = {
					name = horoscope_outcome_arrogant
					years = 15
				}
			}
			destined_scholar = {
				add_character_modifier = {
					name = horoscope_outcome_scatterbrain
					years = 15
				}
			}
		}
		break = yes
	}

	if = {
		limit = {
			has_childhood_horoscope_modifier_trigger = yes
			has_character_flag = avoided_destiny
		}
		trigger_switch = {
			on_trigger = has_character_flag
			destined_steward = {
				if = { limit = { has_character_modifier = guided_by_horoscope_stewardship }
					remove_character_modifier = guided_by_horoscope_stewardship
				}
				add_character_modifier = {
					name = horoscope_outcome_jittery
					years = 15
				}
			}
			destined_fighter = {
				if = { limit = { has_character_modifier = guided_by_horoscope_martial }
					remove_character_modifier = guided_by_horoscope_martial
				}
				add_character_modifier = {
					name = horoscope_outcome_brute
					years = 15
				}
			}
			destined_diplomat = {
				if = { limit = { has_character_modifier = guided_by_horoscope_diplomacy }
					remove_character_modifier = guided_by_horoscope_diplomacy
				}
				add_character_modifier = {
					name = horoscope_outcome_artist
					years = 15
				}
			}
			destined_schemer = {
				if = { limit = { has_character_modifier = guided_by_horoscope_intrigue }
					remove_character_modifier = guided_by_horoscope_intrigue
				}
				add_character_modifier = {
					name = horoscope_outcome_arrogant
					years = 15
				}
			}
			destined_scholar = {
				if = { limit = { has_character_modifier = guided_by_horoscope_learning }
					remove_character_modifier = guided_by_horoscope_learning
				}
				add_character_modifier = {
					name = horoscope_outcome_scatterbrain
					years = 15
				}
			}
		}
		break = yes
	}
}

increase_astronomical_insights_modifier_effect = {
	custom_tooltip = { text = increase_astronomical_insight_tt }
	trigger_switch = {
		on_trigger = has_character_modifier
		astronomical_insights_1 = {
			hidden_effect = {
				remove_character_modifier = astronomical_insights_1
			}
			add_character_modifier = {
				modifier = astronomical_insights_2
				duration = -1
			}
		}
		astronomical_insights_2 = {
			hidden_effect = {
				remove_character_modifier = astronomical_insights_2
			}
			add_character_modifier = {
				modifier = astronomical_insights_3
				duration = -1
			}
		}
		astronomical_insights_3 = {
			hidden_effect = {
				remove_character_modifier = astronomical_insights_3
			}
			add_character_modifier = {
				modifier = astronomical_insights_4
				duration = -1
			}
		}
	}
	if = {
		limit = {
			NOR = {
				has_character_modifier = astronomical_insights_1
				has_character_modifier = astronomical_insights_2
				has_character_modifier = astronomical_insights_3
				has_character_modifier = astronomical_insights_4
			}
		}
		add_character_modifier = {
			modifier = astronomical_insights_1
			duration = -1
		}
	}
}

remove_astronomical_insight_modifier_effect = {
	hidden_effect = {
		remove_character_modifier = astronomical_insights_1
		remove_character_modifier = astronomical_insights_2
		remove_character_modifier = astronomical_insights_3
		remove_character_modifier = astronomical_insights_4
	}
}

# removed Zodiac effects

flip_secret_religious_community_provinces = {
	trigger_switch = {
		on_trigger = society_member_of
		# secret_religious_society_catholic = {
			# ROOT = {
				# any_demesne_province = {
					# limit = {
						# has_province_modifier = secret_catholic_community
					# }
					# religion = catholic
					# remove_province_modifier = secret_catholic_community
				# }
			# }
		# }
	}
}

clean_up_after_leaving_society_effect = {
	hidden_effect = {
		clr_character_flag = do_not_disturb
		remove_character_modifier = quest_cooldown_timer

		#Powers, Missions and Interactions: the Assassins
		#quest_the_assassins_assassination
		#quest_the_assassins_collect_debt
		#quest_the_assassins_convert_province
		#quest_the_assassins_occupy_holding
		#quest_the_assassins_protege
		# clr_character_flag = ongoing_recruitment
		# clr_character_flag = approves_of_shia
		# clr_character_flag = disapproves_of_shia
		# clr_character_flag = willing_to_join
		# clr_character_flag = unwilling_to_join
		# clr_character_flag = assassins_attempted_recruitment
		# clr_character_flag = escape_successful
		# clr_character_flag = escape_injured
		# clr_character_flag = escape_death
		# clr_character_flag = escape_bribe

		#Powers, Missions and Interactions: Devil Worshipers
		clr_character_flag = attempted_corrupt_priest
		clr_character_flag = possessing_courtier
		clr_character_flag = desecration_in_progress
		clr_character_flag = desecration_violent
		clr_character_flag = desecration_at_home
		clr_character_flag = desecration_plotting
		clr_character_flag = approves_of_satanism
		clr_character_flag = disapproves_of_satanism
		clr_character_flag = has_ill_lover_loc
		clr_character_flag = has_ill_spouse_loc
		clr_character_flag = has_ill_child_loc
		clr_character_flag = has_money_troubles_loc
		clr_character_flag = has_some_illness_loc
		clr_character_flag = has_need_of_winning_battles_loc
		clr_character_flag = has_a_rival_loc
		clr_character_flag = is_weak_loc
		clr_character_flag = is_dumb_loc
		clr_character_flag = being_recruited_by_the_satanists

		#Powers, Missions and Interactions: Secret Religious
		clr_character_flag = sr_too_honest
		clr_character_flag = sr_too_wroth
		clr_character_flag = sr_too_slothful
		clr_character_flag = sr_too_trusting
		clr_character_flag = sr_too_indiscreet
		clr_character_flag = free_help
		clr_character_flag = help_for_cost
		clr_character_flag = conduct_secret_ceremony_timer
		remove_character_modifier = attempting_to_blend_in
		clr_character_flag = blending_in_timer
		clr_character_flag = attempting_to_convince_stubborn_courtier
		clr_character_flag = attempting_to_convince_concerned_friend
		clr_character_flag = blend_in_struggled_with_trait
		clr_character_flag = blend_in_attended_house_of_worship
		clr_character_flag = blend_in_general_progress
		#quest_secret_religious_societies_induct_ruler
		#quest_secret_religious_societies_sympathy_ruler

		#Powers, Missions and Interactions: Monastic orders
		clr_character_flag = monastic_orders_holy_seclusion
		clr_character_flag = monastic_orders_mission_charity
		clr_character_flag = monastic_orders_mission_theology
 		clr_character_flag = monastic_orders_mission_christian_pilgrimage
		clr_character_flag = monastic_orders_mission_dharmic_pilgrimage
		clr_character_flag = monastic_orders_mission_temple
		clr_character_flag = ascetic_arriving
		clr_character_flag = monastic_artifact_lover
		if = {
			limit = { NOT = { has_character_flag = flag_monastic_mid_theft } }
			clr_character_flag = monastic_artifact_seamless_robe_of_jesus
			clr_character_flag = monastic_artifact_crown_of_thorns
			clr_character_flag = monastic_artifact_fragment_of_true_cross
			clr_character_flag = monastic_artifact_holy_foreskin
			clr_character_flag = monastic_artifact_image_of_edessa
			clr_character_flag = monastic_artifact_elaborate_danda
			clr_character_flag = monastic_artifact_sariraka_actual_body_part
			clr_character_flag = monastic_artifact_sarira
		}
		clr_character_flag = suggestion_A_flag
		clr_character_flag = suggestion_B_flag
		clr_character_flag = 3264_deceitful_flag
		clr_character_flag = 3264_publish_flag
		clr_character_flag = 3264_depressed_flag
		clr_character_flag = 3264_deceitful_flag
		clr_character_flag = 4202_visit_monastery_flag
		clr_character_flag = 4202_hire_someone_flag
		clr_character_flag = 4202_send_my_own_samples_flag
		clr_character_flag = 4212_woke_them_up_flag
		clr_character_flag = 4212_let_them_sleep_flag
		clr_character_flag = 4212_pranked_them_flag
		remove_character_modifier = in_meditation
		remove_character_modifier = doing_penance
		clr_character_flag = holy_seclusion_timer
		clr_character_flag = holy_seclusion_struggled_with_vice
		clr_character_flag = holy_seclusion_lustful
		clr_character_flag = holy_seclusion_gluttonous
		clr_character_flag = holy_seclusion_greedy
		clr_character_flag = holy_seclusion_slothful
		clr_character_flag = holy_seclusion_struggled_with_loneliness
		clr_character_flag = holy_seclusion_scripture_reading
		clr_character_flag = holy_seclusion_scripture_reading
		clr_character_flag = holy_seclusion_interrupting_child
		clr_character_flag = success_seculison_desc_A
		clr_character_flag = success_seculison_desc_B
		clr_character_flag = success_seculison_desc_C

		#Powers, Missions and Interactions: Hermetics
		clr_character_flag = power_hungry_scrying_flag
		clr_character_flag = relationship_focused_scrying_flag
		clr_character_flag = battle_focused_scrying_flag
		remove_character_modifier = writing_magnum_opus
		remove_character_modifier = acquire_ingredients_decision_cooldown_timer
		clr_character_flag = building_laboratory
		clr_character_flag = decided_on_glass
		clr_character_flag = decided_on_crucibles
		clr_character_flag = decided_on_tools
		clr_character_flag = decided_on_books
		clr_character_flag = bribed_guards
		clr_character_flag = guards_wake_up
		clr_character_flag = distraction_failed
		clr_character_flag = caught_stealing
		clr_character_flag = caught_destroying
		remove_scrying_omen_modifiers_effect = yes
		clr_character_flag = lab_destruction
		clr_character_flag = lab_damage
		clr_character_flag = lab_explosion_death

		#Warrior Lodges: everything
		if = {
			limit = {
				has_character_flag = call_to_legend_active
				has_character_modifier = out_traveling
			}
			remove_character_modifier = out_traveling #Should hopefully only remove this when relevant
		}
		clr_character_flag = call_to_legend_active
		clr_character_flag = call_to_legend_active
		clr_character_flag = do_not_disturb
		clr_character_flag = start_bracket
		clr_character_flag = mid_bracket
		clr_character_flag = top_bracket
		clr_character_flag = call_it_a_day
		clr_character_flag = i_will_survive
		clr_character_flag = bloodline_quality_1
		clr_character_flag = bloodline_quality_2
		clr_character_flag = bloodline_quality_3
		clr_character_flag = player_was_involved

		#tombola events...
		clr_character_flag = HF_legend_artifact
		clr_character_flag = HF_legend_feast
		clr_character_flag = HF_legend_skull
		clr_character_flag = HF_legend_eagle
		clr_character_flag = HF_legend_upgrade_weapon
		clr_character_flag = HF_legend_artifact
		clr_character_flag = HF_legend_artifact

		#Duel outcomes...
		clr_character_flag = WL_desc_A
		clr_character_flag = WL_desc_B
		clr_character_flag = WL_desc_C
		clr_character_flag = WL_desc_D
		clr_character_flag = WL_desc_E
		clr_character_flag = WL_desc_F
		clr_character_flag = had_WL_desc_A
		clr_character_flag = had_WL_desc_B
		clr_character_flag = had_WL_desc_C
		clr_character_flag = had_WL_desc_D
		clr_character_flag = had_WL_desc_E
		clr_character_flag = had_WL_desc_F
		clr_character_flag = WL_desc_X
		clr_character_flag = WL_desc_Y
		clr_character_flag = WL_desc_Z

		#Some Faerun persistent modifiers
		remove_character_modifier = alliance_member
		remove_character_modifier = open_arcane_brother
		remove_character_modifier = open_flame_brother
		remove_character_modifier = open_zhent
		remove_character_modifier = open_warlock_knight
		remove_character_modifier = zhent_pretender
		remove_character_modifier = shadow_telflamm_walker_modifier
		remove_character_modifier = cat_familiar
		remove_character_modifier = wolf_familiar
		remove_character_modifier = raven_familiar
		remove_character_modifier = owl_familiar
		remove_character_modifier = promise_of_celibacy
		remove_character_modifier = arcane_archer_modifier
		remove_character_modifier = cat_bladesinger_modifier
		remove_character_modifier = bird_bladesinger_modifier
		remove_character_modifier = snake_bladesinger_modifier
		if = {
			limit = {
				has_character_flag = fr_monastic_celibate
			}
			remove_trait = celibate
			clr_character_flag = fr_monastic_celibate
		}
	}
}

increase_council_power_effect = {
	custom_tooltip = {
		text = council_power_increased
		hidden_tooltip = {
			set_variable = { which = "laws" value = 0 }
			if = {
				limit = {
					has_law = law_voting_power_0
					NOT = {
						check_variable = { which = "laws" value = 2 }
					}
				}
				add_law_w_cooldown = law_voting_power_1
				change_variable = { which = "laws" value = 1 }
			}
			if = {
				limit = {
					has_law = war_voting_power_0
					NOT = {
						check_variable = { which = "laws" value = 2 }
					}
				}
				add_law_w_cooldown = war_voting_power_1
				change_variable = { which = "laws" value = 1 }
			}
			if = {
				limit = {
					has_law = revoke_title_voting_power_0
					NOT = {
						check_variable = { which = "laws" value = 2 }
					}
				}
				add_law_w_cooldown = revoke_title_voting_power_1
				change_variable = { which = "laws" value = 1 }
			}
			if = {
				limit = {
					has_law = imprison_voting_power_0
					NOT = {
						check_variable = { which = "laws" value = 2 }
					}
				}
				add_law_w_cooldown = imprison_voting_power_1
				change_variable = { which = "laws" value = 1 }
			}
			if = {
				limit = {
					has_law = grant_title_voting_power_0
					NOT = {
						check_variable = { which = "laws" value = 2 }
					}
				}
				add_law_w_cooldown = grant_title_voting_power_1
				change_variable = { which = "laws" value = 1 }
			}
			if = {
				limit = {
					has_law = banish_voting_power_0
					NOT = {
						check_variable = { which = "laws" value = 2 }
					}
				}
				add_law_w_cooldown = banish_voting_power_1
				change_variable = { which = "laws" value = 1 }
			}
			if = {
				limit = {
					has_law = execution_voting_power_0
					NOT = {
						check_variable = { which = "laws" value = 2 }
					}
				}
				add_law_w_cooldown = execution_voting_power_1
				change_variable = { which = "laws" value = 1 }
			}
			set_variable = { which = "laws" value = 0 }
		}
	}
}

increase_vassal_freedom_effect = {
	if = {
		limit = {
			has_law = vassal_wars_law_1
		}
		add_law_w_cooldown = vassal_wars_law_0
	}
	if = {
		limit = {
			has_law = vassal_wars_law_2
		}
		add_law_w_cooldown = vassal_wars_law_1
	}
}

spawn_good_commander_effect = {
	if = {
		limit = { has_religion_feature = religion_matriarchal }
		create_random_soldier = {
			random_traits = yes
			dynasty = random
			female = yes
			attributes = {
				diplomacy = 2
				learning = 2
				stewardship = 2
				intrigue = 2
				martial = 8
			}
		}
	}
	if = {
		limit = { has_religion_feature = religion_patriarchal }
		create_random_soldier = {
			random_traits = yes
			dynasty = random
			female = no
			attributes = {
				diplomacy = 2
				learning = 2
				stewardship = 2
				intrigue = 2
				martial = 8
			}
		}
	}
	if = {
		limit = {
			AND = {
				NOT = { has_religion_feature = religion_matriarchal }
				NOT = { has_religion_feature = religion_patriarchal }
			}
		}
		create_random_soldier = {
			random_traits = yes
			dynasty = random
			female = 50
			attributes = {
				diplomacy = 2
				learning = 2
				stewardship = 2
				intrigue = 2
				martial = 8
			}
		}
	}
	new_character = {
		remove_trait = weak
		remove_trait = slow
		remove_trait = imbecile
		remove_trait = dull

		remove_trait = mystic
		remove_trait = socializer
		remove_trait = gamer
		remove_trait = hedonist
		remove_trait = duelist
		remove_trait = hunter
		remove_trait = strategist
		remove_trait = administrator
		remove_trait = architect
		remove_trait = gardener
		remove_trait = schemer
		remove_trait = impaler
		remove_trait = seducer
		remove_trait = seductress
		remove_trait = theologian
		remove_trait = scholar

		random_list = { # Flavor Randomization
			35 = {
				# Nothing
			}
			15 = {
				change_martial = 2
			}
			10 = {
				add_trait = robust
			}
			10 = {
				add_trait = duelist
			}
			10 = {
				add_trait = hunter
			}
			5 = {
				add_trait = strategist
			}
			5 = {
				change_martial = 4
			}
			5 = {
				if = {
					limit = {
						has_dlc = "Reapers"
					}
					add_trait = one_eyed
				}
			}
			5 = {
				add_trait = shrewd
			}
			3 = {
				add_trait = giant
			}
		}
		random_list = { # Class assignment
			20 = {
				# No class
			}
			35 = {
				modifier = {
					factor = 0.14
					liege = {
						OR = {
							is_nomadic = yes
							is_tribal = yes
						}
					}
				}
				add_trait = fighter
			}
			35 = {
				modifier = {
					factor = 0.14
					liege = {
						OR = {
							is_nomadic = yes
							is_tribal = yes
						}
					}
				}
				add_trait = trained_fighter
			}
			5 = {
				modifier = {
					factor = 7
					liege = {
						OR = {
							is_nomadic = yes
							is_tribal = yes
						}
					}
				}
				add_trait = barbarian
			}
			5 = {
				modifier = {
					factor = 7
					liege = {
						OR = {
							is_nomadic = yes
							is_tribal = yes
						}
					}
				}
				add_trait = trained_barbarian
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					has_religion_feature = religion_no_leader
				}
				random_list = {
					5 = {
						add_trait = pagan_branch_1
					}
					25 = {
						add_trait = pagan_branch_2
					}
					25 = {
						add_trait = pagan_branch_3
					}
					25 = {
						add_trait = pagan_branch_4
					}
				}
			}
		}
		set_character_flag = invited_soldier
		save_event_target_as = invited_character
	}
}

spawn_great_commander_effect = {
	if = {
		limit = { has_religion_feature = religion_matriarchal }
		create_random_soldier = {
			random_traits = yes
			dynasty = random
			female = yes
			attributes = {
				diplomacy = 3
				learning = 3
				stewardship = 3
				intrigue = 3
				martial = 9
			}
		}
	}
	if = {
		limit = { has_religion_feature = religion_patriarchal }
		create_random_soldier = {
			random_traits = yes
			dynasty = random
			female = no
			attributes = {
				diplomacy = 3
				learning = 3
				stewardship = 3
				intrigue = 3
				martial = 9
			}
		}
	}
	if = {
		limit = {
			AND = {
				NOT = { has_religion_feature = religion_matriarchal }
				NOT = { has_religion_feature = religion_patriarchal }
			}
		}
		create_random_soldier = {
			random_traits = yes
			dynasty = random
			female = 50
			attributes = {
				diplomacy = 3
				learning = 3
				stewardship = 3
				intrigue = 3
				martial = 9
			}
		}
	}
	new_character = {
		remove_trait = weak
		remove_trait = slow
		remove_trait = imbecile
		remove_trait = dull
		remove_trait = dwarf
		remove_trait = giant
		remove_trait = hunchback
		remove_trait = clubfooted
		remove_trait = craven

		remove_trait = mystic
		remove_trait = socializer
		remove_trait = gamer
		remove_trait = hedonist
		remove_trait = duelist
		remove_trait = hunter
		remove_trait = strategist
		remove_trait = administrator
		remove_trait = architect
		remove_trait = gardener
		remove_trait = schemer
		remove_trait = impaler
		remove_trait = seducer
		remove_trait = seductress
		remove_trait = theologian
		remove_trait = scholar

		remove_trait = misguided_warrior
		remove_trait = tough_soldier
		remove_trait = skilled_tactician
		remove_trait = brilliant_strategist

		random_list = {
			5 = { add_trait = misguided_warrior }
			10 = { add_trait = tough_soldier }
			20 = { add_trait = skilled_tactician }
			30 = { add_trait = brilliant_strategist }
		}

		random_list = { # Flavor Randomization
			35 = {
				# Nothing
			}
			15 = {
				change_martial = 2
			}
			10 = {
				add_trait = robust
			}
			10 = {
				add_trait = duelist
			}
			10 = {
				add_trait = hunter
			}
			5 = {
				add_trait = strategist
			}
			5 = {
				change_martial = 4
			}
			5 = {
				if = {
					limit = {
						has_dlc = "Reapers"
					}
					add_trait = one_eyed
				}
			}
			5 = {
				add_trait = shrewd
			}
			1 = {
				add_trait = giant
			}
		}
		random_list = {
			50 = {
				#Nothing
			}
			10 = {
				add_trait = narrow_flank_leader
			}
			10 = {
				add_trait = defensive_leader
			}
			10 = {
				add_trait = experimenter
			}
			10 = {
				add_trait = flanker
			}
			10 = {
				add_trait = heavy_infantry_leader
			}
			10 = {
				add_trait = inspiring_leader
			}
			10 = {
				add_trait = organizer
			}
			10 = {
				add_trait = siege_leader
			}
			10 = {
				add_trait = trickster
			}
			10 = {
				add_trait = aggressive_leader
			}
		}
		random_list = { # Class assignment
			20 = {
				# No class
			}
			35 = {
				modifier = {
					factor = 0.14
					liege = {
						OR = {
							is_nomadic = yes
							is_tribal = yes
						}
					}
				}
				add_trait = trained_fighter
			}
			35 = {
				modifier = {
					factor = 0.14
					liege = {
						OR = {
							is_nomadic = yes
							is_tribal = yes
						}
					}
				}
				add_trait = journeyman_fighter
			}
			5 = {
				modifier = {
					factor = 7
					liege = {
						OR = {
							is_nomadic = yes
							is_tribal = yes
						}
					}
				}
				add_trait = trained_barbarian
			}
			5 = {
				modifier = {
					factor = 7
					liege = {
						OR = {
							is_nomadic = yes
							is_tribal = yes
						}
					}
				}
				add_trait = journeyman_barbarian
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					has_religion_feature = religion_no_leader
				}
				random_list = {
					5 = {
						add_trait = pagan_branch_1
					}
					25 = {
						add_trait = pagan_branch_2
					}
					25 = {
						add_trait = pagan_branch_3
					}
					25 = {
						add_trait = pagan_branch_4
					}
				}
			}
		}
		set_character_flag = invited_soldier
		save_event_target_as = invited_character
	}
}

spawn_fantastic_commander_effect = {

	if = {
		limit = { has_religion_feature = religion_matriarchal }
		create_random_soldier = {
			random_traits = yes
			dynasty = actually_culture
			female = yes
			attributes = {
				diplomacy = 4
				learning = 4
				stewardship = 4
				intrigue = 4
				martial = 12
			}
		}
	}
	if = {
		limit = { has_religion_feature = religion_patriarchal }
		create_random_soldier = {
			random_traits = yes
			dynasty = actually_culture
			female = no
			attributes = {
				diplomacy = 4
				learning = 4
				stewardship = 4
				intrigue = 4
				martial = 12
			}
		}
	}
	if = {
		limit = {
			AND = {
				NOT = { has_religion_feature = religion_matriarchal }
				NOT = { has_religion_feature = religion_patriarchal }
			}
		}
		create_random_soldier = {
			random_traits = yes
			dynasty = actually_culture
			female = 50
			attributes = {
				diplomacy = 4
				learning = 4
				stewardship = 4
				intrigue = 4
				martial = 12
			}
		}
	}
	new_character = {
		remove_trait = weak
		remove_trait = slow
		remove_trait = imbecile
		remove_trait = dull
		remove_trait = dwarf
		remove_trait = giant
		remove_trait = hunchback
		remove_trait = clubfooted
		remove_trait = craven
		remove_trait = paranoid

		remove_trait = mystic
		remove_trait = socializer
		remove_trait = gamer
		remove_trait = hedonist
		remove_trait = duelist
		remove_trait = hunter
		remove_trait = strategist
		remove_trait = administrator
		remove_trait = architect
		remove_trait = gardener
		remove_trait = schemer
		remove_trait = impaler
		remove_trait = seducer
		remove_trait = seductress
		remove_trait = theologian
		remove_trait = scholar

		remove_trait = misguided_warrior
		remove_trait = tough_soldier
		remove_trait = skilled_tactician

		add_trait = brilliant_strategist

		random_list = {
			20 = {
				add_trait = robust
			}
			10 = {
				add_trait = strong
			}
			5 = {
				health = 1
			}
		}

		random_list = {
			10 = {
				add_trait = narrow_flank_leader
			}
			10 = {
				add_trait = defensive_leader
			}
			10 = {
				add_trait = experimenter
			}
			10 = {
				add_trait = flanker
			}
			10 = {
				add_trait = heavy_infantry_leader
			}
			10 = {
				add_trait = inspiring_leader
			}
			10 = {
				add_trait = organizer
			}
			10 = {
				add_trait = siege_leader
			}
			10 = {
				add_trait = trickster
			}
			10 = {
				add_trait = aggressive_leader
			}
		}

		random_list = { # Flavor Randomization
			20 = {
				add_trait = giant
				add_trait = robust
				add_trait = hunter
				change_martial = 2
				give_nickname = nick_the_giant
			}
			20 = {
				modifier = {
					factor = 0
					NOT = {
						has_dlc = "Reapers"
					}
				}
				add_trait = giant
				add_trait = robust
				add_trait = strategist
				add_trait = one_eyed
				change_martial = 1
				give_nickname = nick_the_cyclops
			}
			20 = {
				add_trait = holy_warrior
				add_trait = scarred
				change_martial = 3
				give_nickname = nick_the_hammer
			}
			20 = {
				add_trait = brave
				add_trait = poet
				change_martial = 2
				give_nickname = nick_the_fearless
			}
			20 = {
				add_trait = robust
				remove_trait = temperate
				add_trait = wroth
				add_trait = falconer
				change_martial = 1
				give_nickname = nick_the_ill_tempered
			}
			20 = {
				add_trait = unyielding_leader
				remove_trait = wroth
				add_trait = patient
				change_martial = 2
				give_nickname = nick_the_defender
			}
			20 = {
				add_trait = aggressive_leader
				remove_trait = patient
				add_trait = wroth
				change_martial = 3
				give_nickname = nick_the_destroyer
			}
			20 = {
				add_trait = shrewd
				add_trait = brave
				change_martial = 2
				give_nickname = nick_the_brave
			}
			20 = {
				add_trait = robust
				add_trait = strategist
				change_martial = 1
				give_nickname = nick_the_strong
			}
			20 = {
				add_trait = genius
				add_trait = socializer
				add_trait = poet
				change_martial = 4
				give_nickname = nick_the_noble
			}
			20 = {
				add_trait = blinded
				add_trait = strategist
				add_trait = genius
				change_martial = 4
				give_nickname = nick_the_blind
			}
			20 = {
				remove_trait = humble
				add_trait = proud
				add_trait = duelist
				change_martial = 2
				give_nickname = nick_the_proud
			}
			20 = {
				add_trait = hunter
				add_trait = shrewd
				change_martial = 3
				give_nickname = nick_the_hunter
			}
			20 = {
				modifier = {
					factor = 0
					NOT = {
						has_dlc = "Reapers"
					}
				}
				add_trait = disfigured
				add_trait = scarred
				add_trait = genius
				change_martial = 2
				change_intrigue = 12
				give_nickname = nick_of_a_thousand_faces
			}
			20 = {
				add_trait = genius
				add_trait = clubfooted
				change_martial = 1
				give_nickname = nick_the_bear
			}
			20 = {
				add_trait = trusting
				add_trait = quick
				change_martial = 4
				give_nickname = nick_the_loyal
			}
			20 = {
				add_trait = ugly
				add_trait = strong
				add_trait = duelist
				change_martial = 1
				give_nickname = nick_the_boar
			}
			20 = {
				add_trait = fair
				add_trait = strategist
				change_martial = 4
				give_nickname = nick_the_lion
			}
			20 = {
				add_trait = brave
				add_trait = duelist
				change_martial = 3
				give_nickname = nick_the_bold
			}
			20 = {
				add_trait = shrewd
				add_trait = hedonist
				change_martial = 4
				give_nickname = nick_the_quarreller
			}
			20 = {
				add_trait = shrewd
				add_trait = cavalry_leader
				change_martial = 2
				give_nickname = nick_the_wolf
			}
		}
		random_list = { # Class assignment
			20 = {
				# No class
			}
			35 = {
				modifier = {
					factor = 0.14
					liege = {
						OR = {
							is_nomadic = yes
							is_tribal = yes
						}
					}
				}
				add_trait = journeyman_fighter
			}
			35 = {
				modifier = {
					factor = 0.14
					liege = {
						OR = {
							is_nomadic = yes
							is_tribal = yes
						}
					}
				}
				add_trait = expert_fighter
			}
			5 = {
				modifier = {
					factor = 7
					liege = {
						OR = {
							is_nomadic = yes
							is_tribal = yes
						}
					}
				}
				add_trait = journeyman_barbarian
			}
			5 = {
				modifier = {
					factor = 7
					liege = {
						OR = {
							is_nomadic = yes
							is_tribal = yes
						}
					}
				}
				add_trait = expert_barbarian
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					has_religion_feature = religion_no_leader
				}
				random_list = {
					5 = {
						add_trait = pagan_branch_1
					}
					25 = {
						add_trait = pagan_branch_2
					}
					25 = {
						add_trait = pagan_branch_3
					}
					25 = {
						add_trait = pagan_branch_4
					}
				}
			}
		}
		set_character_flag = invited_soldier
		save_event_target_as = invited_character
	}
}

spawn_fantastic_diplomat_effect = {

	if = {
		limit = { has_religion_feature = religion_matriarchal }
		create_random_diplomat = {
			random_traits = yes
			dynasty = actually_culture
			female = yes
			attributes = {
				diplomacy = 12
				learning = 4
				stewardship = 4
				intrigue = 4
				martial = 4
			}
		}
	}
	if = {
		limit = { has_religion_feature = religion_patriarchal }
		create_random_diplomat = {
			random_traits = yes
			dynasty = actually_culture
			female = no
			attributes = {
				diplomacy = 12
				learning = 4
				stewardship = 4
				intrigue = 4
				martial = 4
			}
		}
	}
	if = {
		limit = {
			AND = {
				NOT = { has_religion_feature = religion_matriarchal }
				NOT = { has_religion_feature = religion_patriarchal }
			}
		}
		create_random_diplomat = {
			random_traits = yes
			dynasty = actually_culture
			female = 50
			attributes = {
				diplomacy = 12
				learning = 4
				stewardship = 4
				intrigue = 4
				martial = 4
			}
		}
	}
	new_character = {
		remove_trait = weak
		remove_trait = slow
		remove_trait = imbecile
		remove_trait = dull
		remove_trait = dwarf
		remove_trait = giant
		remove_trait = hunchback
		remove_trait = clubfooted
		remove_trait = craven
		remove_trait = paranoid

		remove_trait = mystic
		remove_trait = socializer
		remove_trait = gamer
		remove_trait = hedonist
		remove_trait = duelist
		remove_trait = hunter
		remove_trait = strategist
		remove_trait = administrator
		remove_trait = architect
		remove_trait = gardener
		remove_trait = schemer
		remove_trait = impaler
		remove_trait = seducer
		remove_trait = seductress
		remove_trait = theologian
		remove_trait = scholar

		remove_trait = naive_appeaser
		remove_trait = underhanded_rogue
		remove_trait = charismatic_negotiator

		add_trait = grey_eminence

		random_list = {
			27 = {
				add_trait = shrewd
			}
			3 = {
				add_trait = quick
			}
			70 = {
				health = 1
			}
		}
		if = {
			limit = {
				has_global_flag = christian_crusades_unlocked
			}
			random = {
				chance = 20
				add_trait = crusader
			}
		}
		random_list = { # Class assignment
			60 = {
				# No class
			}
			10 = {
				add_trait = trained_shadow
			}
			10 = {
				add_trait = journeyman_shadow
			}
			10 = {
				add_trait = trained_bard
			}
			10 = {
				add_trait = journeyman_bard
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					has_religion_feature = religion_no_leader
				}
				random_list = {
					5 = {
						add_trait = pagan_branch_1
					}
					25 = {
						add_trait = pagan_branch_2
					}
					25 = {
						add_trait = pagan_branch_3
					}
					25 = {
						add_trait = pagan_branch_4
					}
				}
			}
		}
		set_character_flag = invited_soldier
		save_event_target_as = invited_character
	}
}

spawn_fantastic_scholar_effect = {

	if = {
		limit = { has_religion_feature = religion_matriarchal }
		create_random_priest = {
			random_traits = yes
			dynasty = actually_culture
			female = yes
			attributes = {
				diplomacy = 4
				learning = 12
				stewardship = 4
				intrigue = 4
				martial = 4
			}
		}
	}
	if = {
		limit = { has_religion_feature = religion_patriarchal }
		create_random_priest = {
			random_traits = yes
			dynasty = actually_culture
			female = no
			attributes = {
				diplomacy = 4
				learning = 12
				stewardship = 4
				intrigue = 4
				martial = 4
			}
		}
	}
	if = {
		limit = {
			AND = {
				NOT = { has_religion_feature = religion_matriarchal }
				NOT = { has_religion_feature = religion_patriarchal }
			}
		}
		create_random_priest = {
			random_traits = yes
			dynasty = actually_culture
			female = 50
			attributes = {
				diplomacy = 4
				learning = 12
				stewardship = 4
				intrigue = 4
				martial = 4
			}
		}
	}
	new_character = {
		remove_trait = weak
		remove_trait = slow
		remove_trait = imbecile
		remove_trait = dull
		remove_trait = dwarf
		remove_trait = giant
		remove_trait = hunchback
		remove_trait = clubfooted
		remove_trait = craven
		remove_trait = paranoid

		remove_trait = mystic
		remove_trait = socializer
		remove_trait = gamer
		remove_trait = hedonist
		remove_trait = duelist
		remove_trait = hunter
		remove_trait = strategist
		remove_trait = administrator
		remove_trait = architect
		remove_trait = gardener
		remove_trait = schemer
		remove_trait = impaler
		remove_trait = seducer
		remove_trait = seductress
		remove_trait = theologian
		remove_trait = scholar

		remove_trait = detached_priest
		remove_trait = martial_cleric
		remove_trait = scholarly_theologian

		add_trait = mastermind_theologian

		random_list = {
			27 = {
				add_trait = shrewd
			}
			3 = {
				add_trait = quick
			}
			70 = {
				change_diplomacy = 1
			}
		}
		random_list = { # Class assignment
			60 = {
				# No class
			}
			5 = {
				add_trait = trained_wizard
			}
			5 = {
				add_trait = journeyman_wizard
			}
			5 = {
				add_trait = trained_warlock
			}
			5 = {
				add_trait = journeyman_warlock
			}
			5 = {
				add_trait = trained_cleric
			}
			5 = {
				add_trait = journeyman_cleric
			}
			5 = {
				add_trait = trained_bard
			}
			5 = {
				add_trait = journeyman_bard
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					has_religion_feature = religion_no_leader
				}
				random_list = {
					5 = {
						add_trait = pagan_branch_1
					}
					25 = {
						add_trait = pagan_branch_2
					}
					25 = {
						add_trait = pagan_branch_3
					}
					25 = {
						add_trait = pagan_branch_4
					}
				}
			}
		}
		set_character_flag = invited_soldier
		save_event_target_as = invited_character
	}
}

spawn_elder_effect = {

	if = {
		limit = { has_religion_feature = religion_matriarchal }
		create_random_priest = {
			random_traits = yes
			dynasty = actually_culture
			female = yes
			age = 50
			attributes = {
				diplomacy = 4
				learning = 10
				stewardship = 6
				intrigue = 4
				martial = 4
			}
		}
	}
	if = {
		limit = { NOR = { has_religion_feature = religion_matriarchal has_religion_feature = religion_patriarchal } }
		random_list = {
			50 = {
				create_random_priest = {
					random_traits = yes
					dynasty = actually_culture
					female = no
					age = 50
					attributes = {
						diplomacy = 4
						learning = 10
						stewardship = 6
						intrigue = 4
						martial = 4
					}
				}
			}
			50 = {
				create_random_priest = {
					random_traits = yes
					dynasty = actually_culture
					female = yes
					age = 50
					attributes = {
						diplomacy = 4
						learning = 10
						stewardship = 6
						intrigue = 4
						martial = 4
					}
				}
			}
		}
	}
	if = {
		limit = { has_religion_feature = religion_patriarchal }
		create_random_priest = {
			random_traits = yes
			dynasty = actually_culture
			female = no
			age = 50
			attributes = {
				diplomacy = 4
				learning = 10
				stewardship = 6
				intrigue = 4
				martial = 4
			}
		}
	}
	new_character = {

		remove_trait = weak
		remove_trait = slow
		remove_trait = imbecile
		remove_trait = dull
		remove_trait = dwarf
		remove_trait = giant
		remove_trait = hunchback
		remove_trait = clubfooted
		remove_trait = craven
		remove_trait = paranoid

		remove_trait = mystic
		remove_trait = socializer
		remove_trait = gamer
		remove_trait = hedonist
		remove_trait = duelist
		remove_trait = hunter
		remove_trait = strategist
		remove_trait = administrator
		remove_trait = architect
		remove_trait = gardener
		remove_trait = schemer
		remove_trait = impaler
		remove_trait = seducer
		remove_trait = seductress
		remove_trait = theologian
		remove_trait = scholar

		remove_trait = detached_priest
		remove_trait = martial_cleric
		remove_trait = scholarly_theologian
		remove_trait = mastermind_theologian

		add_character_modifier = { name = elder_long_life_modifier years = 100 }
		give_nickname = nick_the_elder

		random_list = {
			50 = {
				add_trait = martial_cleric
			}
			25 = {
				add_trait = scholarly_theologian
			}
			10 = {
				add_trait = mastermind_theologian
			}
		}
		random_list = {
			5 = {
				add_trait = stubborn
			}
			1 = {
				add_trait = mystic
			}
			1 = {
				add_trait = hunchback
			}
			1 = {
				add_trait = ugly
			}
			10 = {
				add_scarred_tiered_effect = yes
			}
			70 = {
				change_stewardship = 1
			}
		}
		random_list = { # Class assignment
			60 = {
				# No class
			}
			5 = {
				add_trait = trained_sorcerer
			}
			5 = {
				add_trait = sorcerer
			}
			5 = {
				add_trait = trained_druid
			}
			5 = {
				add_trait = druid
			}
			5 = {
				add_trait = trained_shadow
			}
			5 = {
				add_trait = shadow
			}
			5 = {
				add_trait = trained_monk
			}
			5 = {
				add_trait = class_monk
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					has_religion_feature = religion_no_leader
				}
				random_list = {
					5 = {
						add_trait = pagan_branch_1
					}
					25 = {
						add_trait = pagan_branch_2
					}
					25 = {
						add_trait = pagan_branch_3
					}
					25 = {
						add_trait = pagan_branch_4
					}
				}
			}

			if = { # Assign African face paint
				limit = {
					OR = {
						# religion = west_african_pagan
						# religion = west_african_pagan_reformed
						has_religion_feature = religion_animistic
						has_religion_feature = religion_feature_orc_good
					}
				}
				# random_list = {
				# 	25 = { #Nothing
				# 	}
				# 	15 = {
				# 		add_trait = african_tattoo_1
				# 	}
				# 	15 = {
				# 		add_trait = african_tattoo_2
				# 	}
				# 	15 = {
				# 		add_trait = african_tattoo_3
				# 	}
				# 	15 = {
				# 		add_trait = african_tattoo_4
				# 	}
				# 	5 = {
				# 		add_trait = african_tattoo_5
				# 	}
				# 	4 = {
				# 		add_trait = african_tattoo_6
				# 	}
				# 	3 = {
				# 		add_trait = african_tattoo_7
				# 	}
				# 	2 = {
				# 		add_trait = african_tattoo_8
				# 	}
				# 	10 = {
				# 		add_trait = african_tattoo_9
				# 	}
				# 	10 = {
				# 		add_trait = african_tattoo_10
				# 	}
				# 	10 = {
				# 		add_trait = african_tattoo_11
				# 	}
				# 	10 = {
				# 		add_trait = african_tattoo_12
				# 	}
				# }
				if = {
					limit = { NOT = { age = 23 } }
					random_list = { #Modifier, if young enough.
						10 = { #Nothing
						}
						25 = {
							# trigger = {
							# 	OR = {
							# 		trait = african_tattoo_12
							# 		trait = african_tattoo_8
							# 		trait = african_tattoo_2
							# 	}
							# }
							add_character_modifier = {
								name = african_adulthood_rites_1
								years = 6
							}
						}
						25 = {
							# trigger = {
							# 	OR = {
							# 		trait = african_tattoo_10
							# 		trait = african_tattoo_7
							# 		trait = african_tattoo_1
							# 	}
							# }
							add_character_modifier = {
								name = african_adulthood_rites_2
								years = 6
							}
						}
						25 = {
							# trigger = {
							# 	OR = {
							# 		trait = african_tattoo_9
							# 		trait = african_tattoo_6
							# 		trait = african_tattoo_3
							# 	}
							# }
							add_character_modifier = {
								name = african_adulthood_rites_3
								years = 6
							}
						}
						25 = {
							# trigger = {
							# 	OR = {
							# 		trait = african_tattoo_11
							# 		trait = african_tattoo_5
							# 		trait = african_tattoo_4
							# 	}
							# }
							add_character_modifier = {
								name = african_adulthood_rites_4
								years = 6
							}
						}
					}
				}
			}
		}
		set_character_flag = invited_elder
		save_event_target_as = invited_character
		character_event = { id = character_trait.1 } #assigns creature trait
	}
}

select_random_hermetic_ingredient_herb_effect = { # If run once, this will set a flag on ONE herbal ingredient. If run twice, it will set a second flag on another herbal ingredient...
	if = {
		limit = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
			}
			NOT = {
				any_artifact = {
					has_artifact_flag = selected_ingredient_2
				}
			}
		}
		random_artifact = {
			limit = {
				is_ingredient_herb_trigger = yes
				NOT = { has_artifact_flag = selected_ingredient_1 }
				NOT = { has_artifact_flag = selected_ingredient_2 }
			}
			set_artifact_flag = selected_ingredient_2
		}
	}
	if = {
		limit = {
			NOT = {
				any_artifact = {
					has_artifact_flag = selected_ingredient_1
				}
			}
		}
		random_artifact = {
			limit = {
				is_ingredient_herb_trigger = yes
				NOT = { has_artifact_flag = selected_ingredient_1 }
				NOT = { has_artifact_flag = selected_ingredient_2 }
			}
			set_artifact_flag = selected_ingredient_1
		}
	}
}

select_random_hermetic_ingredient_animal_part_effect = {
	if = {
		limit = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
			}
			NOT = {
				any_artifact = {
					has_artifact_flag = selected_ingredient_2
				}
			}
		}
		random_artifact = {
			limit = {
				is_ingredient_animal_part_trigger = yes
				NOT = { has_artifact_flag = selected_ingredient_1 }
				NOT = { has_artifact_flag = selected_ingredient_2 }
			}
			set_artifact_flag = selected_ingredient_2
		}
	}
	if = {
		limit = {
			NOT = {
				any_artifact = {
					has_artifact_flag = selected_ingredient_1
				}
			}
		}
		random_artifact = {
			limit = {
				is_ingredient_animal_part_trigger = yes
				NOT = { has_artifact_flag = selected_ingredient_1 }
				NOT = { has_artifact_flag = selected_ingredient_2 }
			}
			set_artifact_flag = selected_ingredient_1
		}
	}
}

select_random_hermetic_ingredient_powder_effect = {
	if = {
		limit = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
			}
			NOT = {
				any_artifact = {
					has_artifact_flag = selected_ingredient_2
				}
			}
		}
		random_artifact = {
			limit = {
				is_ingredient_powder_trigger = yes
				NOT = { has_artifact_flag = selected_ingredient_1 }
				NOT = { has_artifact_flag = selected_ingredient_2 }
			}
			set_artifact_flag = selected_ingredient_2
		}
	}
	if = {
		limit = {
			NOT = {
				any_artifact = {
					has_artifact_flag = selected_ingredient_1
				}
			}
		}
		random_artifact = {
			limit = {
				is_ingredient_powder_trigger = yes
				NOT = { has_artifact_flag = selected_ingredient_1 }
				NOT = { has_artifact_flag = selected_ingredient_2 }
			}
			set_artifact_flag = selected_ingredient_1
		}
	}
}

select_random_hermetic_ingredient_liquid_effect = {
	if = {
		limit = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
			}
			NOT = {
				any_artifact = {
					has_artifact_flag = selected_ingredient_2
				}
			}
		}
		random_artifact = {
			limit = {
				is_ingredient_liquid_trigger = yes
				NOT = { has_artifact_flag = selected_ingredient_1 }
				NOT = { has_artifact_flag = selected_ingredient_2 }
			}
			set_artifact_flag = selected_ingredient_2
		}
	}
	if = {
		limit = {
			NOT = {
				any_artifact = {
					has_artifact_flag = selected_ingredient_1
				}
			}
		}
		random_artifact = {
			limit = {
				is_ingredient_liquid_trigger = yes
				NOT = { has_artifact_flag = selected_ingredient_1 }
				NOT = { has_artifact_flag = selected_ingredient_2 }
			}
			set_artifact_flag = selected_ingredient_1
		}
	}
}

select_random_hermetic_ingredient_effect = { #when it doesn't matter if it's a herb/animal part/metal/liquid
	if = {
		limit = {
			has_selected_ingredient_1_trigger = yes
			has_selected_ingredient_2_trigger = no
		}
		random_artifact = {
			limit = {
				NOT = { has_artifact_flag = selected_ingredient_1 }
				NOT = { has_artifact_flag = selected_ingredient_2 }
				has_artifact_flag = ingredient
			}
			set_artifact_flag = selected_ingredient_2
		}
	}
	if = {
		limit = {
			has_selected_ingredient_1_trigger = no
			any_artifact = {
				has_artifact_flag = ingredient
			}
		}
		random_artifact = {
			limit = {
				NOT = { has_artifact_flag = selected_ingredient_1 }
				NOT = { has_artifact_flag = selected_ingredient_2 }
				has_artifact_flag = ingredient
			}
			set_artifact_flag = selected_ingredient_1
		}
	}
}

remove_selection_of_ingredients_effect = { #for clearing selection of ingredients
	hidden_effect = {
		any_artifact = {
			clr_artifact_flag = selected_ingredient_1
			clr_artifact_flag = selected_ingredient_2
		}
	}
}

destroy_selected_ingredient_1_effect = { #for removing the ingredient in question
	custom_tooltip = { text = destroy_selected_ingredient_1_tt }
	hidden_effect = {
		random_artifact = {
			limit = { has_artifact_flag = selected_ingredient_1 }
			destroy_artifact = yes
		}
	}
}

destroy_selected_ingredient_2_effect = { #for removing the ingredient in question
	custom_tooltip = { text = destroy_selected_ingredient_2_tt }
	hidden_effect = {
		random_artifact = {
			limit = { has_artifact_flag = selected_ingredient_2 }
			destroy_artifact = yes
		}
	}
}

destroy_selected_ingredient_1_and_2_effect = { #for removing both selected ingredients
	custom_tooltip = { text = destroy_selected_ingredient_1_and_2_tt }
	hidden_effect = {
		random_artifact = {
			limit = { has_artifact_flag = selected_ingredient_1 }
			destroy_artifact = yes
		}
		random_artifact = {
			limit = { has_artifact_flag = selected_ingredient_2 }
			destroy_artifact = yes
		}
	}
}

destroy_selected_ingredient_1_plus_random_other_ingredient_effect = { #for removing the ingredient in question PLUS a random other one (unnamed in tooltip)
	custom_tooltip = { text = destroy_selected_ingredient_1_plus_random_other_ingredient_tt }
	hidden_effect = {
		random_artifact = {
			limit = { has_artifact_flag = selected_ingredient_1 }
			destroy_artifact = yes
		}
		random_artifact = {
			limit = {
				has_artifact_flag = ingredient
			}
			destroy_artifact = yes
		}
	}
}

destroy_random_herb_ingredient_effect = {
	random_artifact = {
		limit = {
			has_artifact_flag = ingredient
			is_ingredient_herb_trigger = yes
		}
		destroy_artifact = yes
	}
}

destroy_random_animal_part_ingredient_effect = {
	random_artifact = {
		limit = {
			has_artifact_flag = ingredient
			is_ingredient_animal_part_trigger = yes
		}
		destroy_artifact = yes
	}
}

destroy_random_powder_ingredient_effect = {
	random_artifact = {
		limit = {
			has_artifact_flag = ingredient
			is_ingredient_powder_trigger = yes
		}
		destroy_artifact = yes
	}
}

destroy_random_liquid_ingredient_effect = {
	random_artifact = {
		limit = {
			has_artifact_flag = ingredient
			is_ingredient_liquid_trigger = yes
		}
		destroy_artifact = yes
	}
}

destroy_random_herb_or_animal_part_ingredients_effect = {
	hidden_effect = {
		random_list = {
			5 = {
				trigger = { has_a_herb_ingredient_trigger = yes }
				destroy_random_herb_ingredient_effect = yes
			}
			5 = {
				trigger = { has_an_animal_part_ingredient_trigger = yes }
				destroy_random_animal_part_ingredient_effect = yes
			}
			20 = {
				trigger = {
					any_artifact = {
						count = 2
						is_ingredient_herb_trigger = yes
						has_artifact_flag = ingredient
					}
				}
				destroy_random_herb_ingredient_effect = yes
				destroy_random_herb_ingredient_effect = yes
			}
			20 = {
				trigger = {
					any_artifact = {
						count = 2
						is_ingredient_animal_part_trigger = yes
						has_artifact_flag = ingredient
					}
				}
				destroy_random_animal_part_ingredient_effect = yes
				destroy_random_animal_part_ingredient_effect = yes
			}
			20 = {
				trigger = {
					has_a_herb_ingredient_trigger = yes
					has_an_animal_part_ingredient_trigger = yes
				}
				destroy_random_herb_ingredient_effect = yes
				destroy_random_animal_part_ingredient_effect = yes
			}
			20 = {
				trigger = {
					any_artifact = {
						count = 3
						is_ingredient_herb_trigger = yes
						has_artifact_flag = ingredient
					}
				}
				destroy_random_herb_ingredient_effect = yes
				destroy_random_herb_ingredient_effect = yes
				destroy_random_herb_ingredient_effect = yes
			}
			20 = {
				trigger = {
					any_artifact = {
						count = 3
						is_ingredient_animal_part_trigger = yes
						has_artifact_flag = ingredient
					}
				}
				destroy_random_animal_part_ingredient_effect = yes
				destroy_random_animal_part_ingredient_effect = yes
				destroy_random_animal_part_ingredient_effect = yes
			}
			50 = {
				trigger = {
					any_artifact = {
						count = 2
						is_ingredient_herb_trigger = yes
						has_artifact_flag = ingredient
					}
					has_an_animal_part_ingredient_trigger = yes
				}
				destroy_random_herb_ingredient_effect = yes
				destroy_random_herb_ingredient_effect = yes
				destroy_random_animal_part_ingredient_effect = yes
			}
			50 = {
				trigger = {
					any_artifact = {
						count = 2
						is_ingredient_animal_part_trigger = yes
						has_artifact_flag = ingredient
					}
					has_a_herb_ingredient_trigger = yes
				}
				destroy_random_herb_ingredient_effect = yes
				destroy_random_animal_part_ingredient_effect = yes
				destroy_random_animal_part_ingredient_effect = yes
			}
		}
	}
}

destroy_random_ingredients_effect = {
	custom_tooltip = { text = random_ingredients_are_destroyed_tt }
	hidden_effect = {
		random_list = {
			5 = {
				random_artifact = {
					limit = { has_artifact_flag = ingredient }
					destroy_artifact = yes
				}
			}
			50 = {
				trigger = {
					any_artifact = {
						count = 2
						has_artifact_flag = ingredient
					}
				}
				random_artifact = {
					limit = { has_artifact_flag = ingredient }
					destroy_artifact = yes
				}
				random_artifact = {
					limit = { has_artifact_flag = ingredient }
					destroy_artifact = yes
				}
			}
			100 = {
				trigger = {
					any_artifact = {
						count = 3
						has_artifact_flag = ingredient
					}
				}
				random_artifact = {
					limit = { has_artifact_flag = ingredient }
					destroy_artifact = yes
				}
				random_artifact = {
					limit = { has_artifact_flag = ingredient }
					destroy_artifact = yes
				}
				random_artifact = {
					limit = { has_artifact_flag = ingredient }
					destroy_artifact = yes
				}
			}
			150 = {
				trigger = {
					any_artifact = {
						count = 4
						has_artifact_flag = ingredient
					}
				}
				random_artifact = {
					limit = { has_artifact_flag = ingredient }
					destroy_artifact = yes
				}
				random_artifact = {
					limit = { has_artifact_flag = ingredient }
					destroy_artifact = yes
				}
				random_artifact = {
					limit = { has_artifact_flag = ingredient }
					destroy_artifact = yes
				}
				random_artifact = {
					limit = { has_artifact_flag = ingredient }
					destroy_artifact = yes
				}
			}
		}
	}
}

destroy_all_ingredients_effect = {
	custom_tooltip = { text = destroy_all_ingredients_tt }
	hidden_effect = {
		if = {
			limit = {
				any_artifact = {
					has_artifact_flag = ingredient
				}
			}
			any_artifact = {
				limit = { has_artifact_flag = ingredient }
				destroy_artifact = yes
			}
		}
	}
}


calculate_health_level_of_ingredient_1_effect = {
	hidden_effect = {
		set_variable = { # Reset potion quality
			which = current_potion_quality
			value = 0
		}
		if = {
			limit = {
				any_artifact = { has_artifact_flag = selected_ingredient_1 }
				ingredient_is_perceived_healthy_trigger = yes
			}
 			ROOT = {
				change_variable = {
					which = current_potion_quality
					value = 1
				}
			}
		}
		if = {
			limit = {
				any_artifact = { has_artifact_flag = selected_ingredient_1 }
				ingredient_is_unhealthy_trigger = yes
			}
 			ROOT = {
				change_variable = {
					which = current_potion_quality
					value = -1
				}
			}
		}
	}
}

calculate_health_level_of_ingredient_2_effect = {
	hidden_effect = {
		set_variable = { # Reset potion quality
			which = current_potion_quality
			value = 0
		}
		if = {
			limit = {
				any_artifact = { has_artifact_flag = selected_ingredient_2 }
				ingredient_is_perceived_healthy_trigger = yes
			}
 			ROOT = {
				change_variable = {
					which = current_potion_quality
					value = 1
				}
			}
		}
		if = {
			limit = {
				any_artifact = { has_artifact_flag = selected_ingredient_2 }
				ingredient_is_unhealthy_trigger = yes
			}
 			ROOT = {
				change_variable = {
					which = current_potion_quality
					value = -1
				}
			}
		}
	}
}

calculate_health_level_of_ingredient_1_and_2_effect = {
	hidden_effect = {
		set_variable = { # Reset potion quality
			which = current_potion_quality
			value = 0
		}
		while = {
			limit = {
				any_artifact = {
					OR = {
						has_artifact_flag = selected_ingredient_1
						has_artifact_flag = selected_ingredient_2
					}
					NOT = { has_artifact_flag = ingredient_counted }
				}
			}
			random_artifact = {
				limit = {
					OR = {
						has_artifact_flag = selected_ingredient_1
						has_artifact_flag = selected_ingredient_2
					}
					NOT = { has_artifact_flag = ingredient_counted }
				}
				set_artifact_flag = ingredient_counted
				if = {
					limit = {
						ingredient_is_perceived_healthy_trigger = yes
					}
					ROOT = {
						change_variable = {
							which = current_potion_quality
							value = 1
						}
					}
				}
				if = {
					limit = {
						ingredient_is_unhealthy_trigger = yes
					}
					ROOT = {
						change_variable = {
							which = current_potion_quality
							value = -1
						}
					}
				}
			}
		}
		any_artifact = {
			clr_artifact_flag = ingredient_counted
		}
	}
}

calculate_health_level_of_all_ingredients_effect = {
	hidden_effect = {
		while = {
			limit = {
				any_artifact = {
					has_artifact_flag = ingredient
					NOT = { has_artifact_flag = ingredient_counted }
				}
			}
			random_artifact = {
				limit = {
					has_artifact_flag = ingredient
					NOT = { has_artifact_flag = ingredient_counted }
				}
				set_artifact_flag = ingredient_counted
				if = {
					limit = {
						ingredient_is_perceived_healthy_trigger = yes
					}
					ROOT = {
						change_variable = {
							which = current_potion_quality
							value = 1
						}
					}
				}
				if = {
					limit = {
						ingredient_is_unhealthy_trigger = yes
					}
					ROOT = {
						change_variable = {
							which = current_potion_quality
							value = -1
						}
					}
				}
			}
		}
		any_artifact = {
			clr_artifact_flag = ingredient_counted
		}
	}
}


#Raiding adventurer war declaration effect
raiding_adventurer_war_declaration_effect = {
	custom_tooltip = { text = raiding_adventurer_war_declaration_tooltip }

	event_target:selling_province = {
		event_target:raiding_adventurer = {
			unsafe_war = {
				target = PREVPREV
				casus_belli = duchy_adventure
				thirdparty_title = PREV
				tier = DUKE
			}
			any_army = {
				set_can_toggle_looting = yes
				set_looting = no
			}
		}
	}

	clr_character_flag = adventurer_unsafe_duchy_war
	clr_character_flag = adventurer_safe_duchy_war
	clr_character_flag = negotiating_with_adventurer

	hidden_effect = {
		event_target:raiding_adventurer = {
			clr_character_flag = raiding_adventurer
		}
	}
}

send_final_book_outcome_event_effect = {
	#character_event = { id = JD.10070 days = 5 random = 10 } #Testing values...
	if = {
		limit = {
			society_rank = {
				rank >= 3
				society = heralds
			}
		}
		character_event = { id = JD.10070 days = 565 random = 1825 }
	}
	else = {
		character_event = { id = JD.10070 days = 565 random = 3650 }
	}
}

root_secret_religion_provinces_convert_effect = {
	ROOT = {
		trigger_switch = {
			on_trigger = society_member_of
			# secret_religious_society_catholic = {
				# PREV = {
					# any_demesne_province = {
						# limit = {
							# has_province_modifier = secret_catholic_community
						# }
						# religion = catholic
						# remove_province_modifier = secret_catholic_community
					# }
				# }
			# }
		}
	}
}

# random_coronation_events_effect - removed

troubled_pregnancy_chance_low_effect = {
random_list = {
	70 = { custom_tooltip = { text = tooltip_pregnancy_stable } }
	30 = { custom_tooltip = { text = tooltip_pregnancy_gets_worse }
		modifier = {
			factor = 0.85
			has_character_modifier = mother_dark_rest
		}
		modifier = {
			factor = 0.95
			has_character_modifier = mother_chatting
		}
		modifier = {
			factor = 0.85
			has_character_modifier = mother_fertility_festival_1
		}
		modifier = {
			factor = 0.75
			has_character_modifier = mother_fertility_festival_2
		}
		modifier = {
			factor = 0.75
			has_character_modifier = mother_festival_blessing
		}
		modifier = {
			factor = 0.75
			has_character_modifier = mother_praying_health
		}
		modifier = {
			factor = 0.5
			has_character_modifier = mother_resting_health
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_partying_health
		}
		modifier = {
			factor = 0.75
			has_character_modifier = mother_minor_rest
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_good_omen
		}
		modifier = {
			factor = 1.2
			has_character_modifier = mother_bad_omen
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_vow_chastity
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_vow_humility
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_vow_charity
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_vow_temperance
		}
		modifier = {
			factor = 1.75
			has_character_modifier = mother_exposed_to_elements
		}
		modifier = {
			factor = 0.8
			has_character_modifier = mother_comforted
		}
		modifier = {
			factor = 1.5
			NOT = { age = 19 } #Too young
		}
		modifier = {
			factor = 1.25
			age = 27 #Too old
		}
		modifier = {
			factor = 1.25
			age = 30 #Too old
		}
		modifier = {
			factor = 1.25
			age = 35 #Too old
		}
		modifier = {
			factor = 1.5
			age = 40 #Too old
		}
		modifier = {
			factor = 1.5
			age = 45 #Too old
		}
		modifier = {
			factor = 1.75
			age = 50 #Too old
		}
		modifier = {
			factor = 1.25
			num_of_children = 2
		}
		modifier = {
			factor = 1.25
			num_of_children = 3 #Womb is worn out
		}
		modifier = {
			factor = 1.5
			num_of_children = 4 #Womb is worn out
		}
		modifier = {
			factor = 2
			num_of_children = 5 #Womb is worn out
		}
		modifier = {
			factor = 4
			has_character_flag = survivor_mom		#Should have stopped after last time.
		}
		modifier = {
			factor = 1.25
			NOR = {
				trait = misguided_warrior
				trait = tough_soldier
				trait = skilled_tactician
				trait = brilliant_strategist
			}
		}
		modifier = {
			factor = 0.95
			trait = misguided_warrior
		}
		modifier = {
			factor = 0.85
			trait = tough_soldier
		}
		modifier = {
			factor = 0.75
			trait = skilled_tactician
		}
		modifier = {
			factor = 0.65
			trait = brilliant_strategist
		}
		modifier = {
			factor = 1.5
			trait = stressed
		}
		modifier = {
			factor = 1.75
			trait = depressed
		}
		modifier = {
			factor = 1.5
			trait = lunatic
		}
		modifier = {
			factor = 1.5
			trait = possessed
		}
		modifier = {
			factor = 1.35
			trait = wounded
		}
		modifier = {
			factor = 1.75
			trait = maimed
		}
		modifier = {
			factor = 1.5
			trait = infirm
		}
		modifier = {
			factor = 5
			trait = incapable #Probably going to die.
		}
		modifier = {
			factor = 1.25
			trait = drunkard
		}
		modifier = {
			factor = 1.15
			trait = scarred
		}
		modifier = {
			factor = 1.5
			trait = ill
		}
		modifier = {
			factor = 1.65
			trait = pneumonic
		}
		modifier = {
			factor = 1.5
			trait = syphilitic
		}
		modifier = {
			factor = 3
			trait = leper
		}
		modifier = {
			factor = 1.85
			trait = has_tuberculosis
		}
		modifier = {
			factor = 1.65
			trait = has_typhoid_fever
		}
		modifier = {
			factor = 1.5
			trait = has_typhus
		}
		modifier = {
			factor = 5
			trait = has_bubonic_plague
		}
		modifier = {
			factor = 1.75
			trait = has_measles
		}
		modifier = {
			factor = 1.45
			trait = has_small_pox
		}
		modifier = {
			factor = 1.65
			trait = has_aztec_disease
		}
		modifier = {
			factor = 1.25
			trait = flu
		}
		modifier = {
			factor = 1.75
			trait = dysentery
		}
		modifier = {
			factor = 1.35
			trait = gout
		}
		modifier = {
			factor = 1.75
			trait = food_poisoning
		}
		modifier = {
			factor = 1.5
			trait = rabies
		}
		modifier = {
			factor = 3
			trait = cancer
		}
		modifier = {
			factor = 4
			trait = dancing_plague
		}
		modifier = {
			factor = 1.25
			trait = scurvy
		}
		modifier = {
			factor = 2
			trait = mangled
		}
		modifier = {
			factor = 3
			trait = severely_injured
		}
		modifier = {
			factor = 0.75
			trait = strong
		}
		modifier = {
			factor = 1.45
			trait = hunchback
		}
		modifier = {
			factor = 1.5
			trait = dwarf
		}
		modifier = {
			factor = 5
			trait = inbred
		}
		modifier = {
			factor = 1.5
			trait = weak
		}
		modifier = {
			factor = 0.5
			trait = robust
		}
		modifier = {
			factor = 2
			trait = feeble
		}
		modifier = {
			factor = 1.35
			trait = hedonist
		}
		modifier = {
			factor = 0.85
			trait = mystic
		}
		modifier = {
			factor = 0.85
			trait = gardener
		}
		modifier = {
			factor = 0.85
			trait = duelist
		}
		modifier = {
			factor = 0.75
			trait = hunter
		}
		modifier = {
			factor = 0.75
			trait = falconer
		}
		modifier = {
			factor = 1.35
			trait = gluttonous
		}
		modifier = {
			factor = 1.45
			trait = wroth
		}
		modifier = {
			factor = 1.45
			trait = slothful
		}
		modifier = {
			factor = 0.85
			trait = temperate
		}
		modifier = {
			factor = 1.5
			trait = blinded
		}
		modifier = {
			factor = 1.5
			trait = berserker
		}
		modifier = {
			factor = 1.25
			trait = lovers_pox
		}
		modifier = {
			factor = 1.5
			NOT = { health = 1 }
		}
		modifier = {
			factor = 1.5
			NOT = { health = 2 }
		}
		modifier = {
			factor = 1.5
			NOT = { health = 3 }
		}
		modifier = {
			factor = 0.75
			health = 5
		}
		character_event = { id = HFP.20500  days = 35 random = 75 } #Critical failure: troubled pregnancy begins.
		}
	}
}

troubled_pregnancy_chance_medium_effect = {
random_list = {
	50 = { custom_tooltip = { text = tooltip_pregnancy_stable } }
	50 = { custom_tooltip = { text = tooltip_pregnancy_gets_worse }
		modifier = {
			factor = 0.85
			has_character_modifier = mother_dark_rest
		}
		modifier = {
			factor = 0.95
			has_character_modifier = mother_chatting
		}
		modifier = {
			factor = 0.85
			has_character_modifier = mother_fertility_festival_1
		}
		modifier = {
			factor = 0.75
			has_character_modifier = mother_fertility_festival_2
		}
		modifier = {
			factor = 0.75
			has_character_modifier = mother_festival_blessing
		}
		modifier = {
			factor = 0.75
			has_character_modifier = mother_praying_health
		}
		modifier = {
			factor = 0.5
			has_character_modifier = mother_resting_health
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_partying_health
		}
		modifier = {
			factor = 0.75
			has_character_modifier = mother_minor_rest
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_good_omen
		}
		modifier = {
			factor = 1.2
			has_character_modifier = mother_bad_omen
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_vow_chastity
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_vow_humility
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_vow_charity
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_vow_temperance
		}
		modifier = {
			factor = 1.75
			has_character_modifier = mother_exposed_to_elements
		}
		modifier = {
			factor = 0.8
			has_character_modifier = mother_comforted
		}
		modifier = {
			factor = 1.5
			NOT = { age = 19 } #Too young
		}
		modifier = {
			factor = 1.25
			age = 27 #Too old
		}
		modifier = {
			factor = 1.25
			age = 30 #Too old
		}
		modifier = {
			factor = 1.25
			age = 35 #Too old
		}
		modifier = {
			factor = 1.5
			age = 40 #Too old
		}
		modifier = {
			factor = 1.5
			age = 45 #Too old
		}
		modifier = {
			factor = 1.75
			age = 50 #Too old
		}
		modifier = {
			factor = 1.25
			num_of_children = 2
		}
		modifier = {
			factor = 1.25
			num_of_children = 3 #Womb is worn out
		}
		modifier = {
			factor = 1.5
			num_of_children = 4 #Womb is worn out
		}
		modifier = {
			factor = 2
			num_of_children = 5 #Womb is worn out
		}
		modifier = {
			factor = 4
			has_character_flag = survivor_mom		#Should have stopped after last time.
		}
		modifier = {
			factor = 1.25
			NOR = {
				trait = misguided_warrior
				trait = tough_soldier
				trait = skilled_tactician
				trait = brilliant_strategist
			}
		}
		modifier = {
			factor = 0.95
			trait = misguided_warrior
		}
		modifier = {
			factor = 0.85
			trait = tough_soldier
		}
		modifier = {
			factor = 0.75
			trait = skilled_tactician
		}
		modifier = {
			factor = 0.65
			trait = brilliant_strategist
		}
		modifier = {
			factor = 1.5
			trait = stressed
		}
		modifier = {
			factor = 1.75
			trait = depressed
		}
		modifier = {
			factor = 1.5
			trait = lunatic
		}
		modifier = {
			factor = 1.5
			trait = possessed
		}
		modifier = {
			factor = 1.35
			trait = wounded
		}
		modifier = {
			factor = 1.75
			trait = maimed
		}
		modifier = {
			factor = 1.5
			trait = infirm
		}
		modifier = {
			factor = 5
			trait = incapable #Probably going to die.
		}
		modifier = {
			factor = 1.25
			trait = drunkard
		}
		modifier = {
			factor = 1.15
			trait = scarred
		}
		modifier = {
			factor = 1.5
			trait = ill
		}
		modifier = {
			factor = 1.65
			trait = pneumonic
		}
		modifier = {
			factor = 1.5
			trait = syphilitic
		}
		modifier = {
			factor = 3
			trait = leper
		}
		modifier = {
			factor = 1.85
			trait = has_tuberculosis
		}
		modifier = {
			factor = 1.65
			trait = has_typhoid_fever
		}
		modifier = {
			factor = 1.5
			trait = has_typhus
		}
		modifier = {
			factor = 5
			trait = has_bubonic_plague
		}
		modifier = {
			factor = 1.75
			trait = has_measles
		}
		modifier = {
			factor = 1.45
			trait = has_small_pox
		}
		modifier = {
			factor = 1.65
			trait = has_aztec_disease
		}
		modifier = {
			factor = 1.25
			trait = flu
		}
		modifier = {
			factor = 1.75
			trait = dysentery
		}
		modifier = {
			factor = 1.35
			trait = gout
		}
		modifier = {
			factor = 1.75
			trait = food_poisoning
		}
		modifier = {
			factor = 1.5
			trait = rabies
		}
		modifier = {
			factor = 3
			trait = cancer
		}
		modifier = {
			factor = 4
			trait = dancing_plague
		}
		modifier = {
			factor = 1.25
			trait = scurvy
		}
		modifier = {
			factor = 2
			trait = mangled
		}
		modifier = {
			factor = 3
			trait = severely_injured
		}
		modifier = {
			factor = 0.75
			trait = strong
		}
		modifier = {
			factor = 1.45
			trait = hunchback
		}
		modifier = {
			factor = 1.5
			trait = dwarf
		}
		modifier = {
			factor = 5
			trait = inbred
		}
		modifier = {
			factor = 1.5
			trait = weak
		}
		modifier = {
			factor = 0.5
			trait = robust
		}
		modifier = {
			factor = 2
			trait = feeble
		}
		modifier = {
			factor = 1.35
			trait = hedonist
		}
		modifier = {
			factor = 0.85
			trait = mystic
		}
		modifier = {
			factor = 0.85
			trait = gardener
		}
		modifier = {
			factor = 0.85
			trait = duelist
		}
		modifier = {
			factor = 0.75
			trait = hunter
		}
		modifier = {
			factor = 0.75
			trait = falconer
		}
		modifier = {
			factor = 1.35
			trait = gluttonous
		}
		modifier = {
			factor = 1.45
			trait = wroth
		}
		modifier = {
			factor = 1.45
			trait = slothful
		}
		modifier = {
			factor = 0.85
			trait = temperate
		}
		modifier = {
			factor = 1.5
			trait = blinded
		}
		modifier = {
			factor = 1.5
			trait = berserker
		}
		modifier = {
			factor = 1.25
			trait = lovers_pox
		}
		modifier = {
			factor = 1.5
			NOT = { health = 1 }
		}
		modifier = {
			factor = 1.5
			NOT = { health = 2 }
		}
		modifier = {
			factor = 1.5
			NOT = { health = 3 }
		}
		modifier = {
			factor = 0.75
			health = 5
		}
		character_event = { id = HFP.20500  days = 35 random = 75 } #Critical failure: troubled pregnancy begins.
		}
	}
}

troubled_pregnancy_variable_easy_effect = {
	random_list = {
		60 = {
		modifier = {
			factor = 1.25
			has_character_modifier = mother_dark_rest
		}
		modifier = {
			factor = 1.05
			has_character_modifier = mother_chatting
		}
		modifier = {
			factor = 1.25
			has_character_modifier = mother_fertility_festival_1
		}
		modifier = {
			factor = 1.5
			has_character_modifier = mother_fertility_festival_2
		}
		modifier = {
			factor = 1.5
			has_character_modifier = mother_festival_blessing
		}
		modifier = {
			factor = 0.7
			NOT = { health = 1 }
		}
		modifier = {
			factor = 0.8
			NOT = { health = 2 }
		}
		modifier = {
			factor = 0.9
			NOT = { health = 3 }
		}
		modifier = {
			factor = 0.8
			trait = wounded
		}
		modifier = {
			factor = 0.8
			trait = maimed
		}
		modifier = {
			factor = 0.9
			trait = cough
		}
		modifier = {
			factor = 0.8
			trait = fever
		}
		modifier = {
			factor = 0.9
			trait = diarrhea
		}
		modifier = {
			factor = 0.9
			trait = vomiting
		}
		modifier = {
			factor = 0.7
			trait = chest_pain
		}
		modifier = {
			factor = 0.8
			trait = cramps
		}
		modifier = {
			factor = 0.9
			trait = rash
		}
		modifier = {
			factor = 0.9
			trait = headache
		}
		modifier = {
			factor = 0.7
			trait = abdominal_pain
		}
		modifier = {
			factor = 0.9
			trait = fatigue
		}
		modifier = {
			factor = 0.9
			trait = malaise
		}
		modifier = {
			factor = 0.8
			trait = infection
		}
		modifier = {
			factor = 1.1
			has_character_flag = pregnancy_priest_comfort
		}
		modifier = {
			factor = 1.2
			has_character_flag = pregnancy_shaman_comfort
		}
		modifier = {
			factor = 1.3
			has_character_flag = pregnancy_spouse_comfort
		}
		modifier = {
			factor = 1.4
			has_character_flag = pregnancy_healer_help
		}
		modifier = {
			factor = 0.7
			persistent_event_target:pregnancy_mother_physician_per = { NOT = { learning = 5 } }
		}
		modifier = {
			factor = 0.8
			persistent_event_target:pregnancy_mother_physician_per = { NOT = { learning = 10 } }
		}
		modifier = {
			factor = 0.9
			persistent_event_target:pregnancy_mother_physician_per = { trait = slow }
		}
		modifier = {
			factor = 0.8
			persistent_event_target:pregnancy_mother_physician_per = { trait = imbecile }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_mother_physician_per = { trait = scholar }
		}
		modifier = {
			factor = 1.5
			persistent_event_target:pregnancy_mother_physician_per = { trait = physician }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_mother_physician_per = { trait = quick }
		}
		modifier = {
			factor = 1.5
			persistent_event_target:pregnancy_mother_physician_per = { trait = genius }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_mother_physician_per = { learning = 10 }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_mother_physician_per = { learning = 15 }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_mother_physician_per = { learning = 20 }
		}
		modifier = {
			factor = 1.5
			persistent_event_target:pregnancy_mother_physician_per = { learning = 25 }
		}
		modifier = {
			factor = 0.7
			persistent_event_target:pregnancy_spouse_physician_per = { NOT = { learning = 5 } }
		}
		modifier = {
			factor = 0.8
			persistent_event_target:pregnancy_spouse_physician_per = { NOT = { learning = 10 } }
		}
		modifier = {
			factor = 0.9
			persistent_event_target:pregnancy_spouse_physician_per = { trait = slow }
		}
		modifier = {
			factor = 0.8
			persistent_event_target:pregnancy_spouse_physician_per = { trait = imbecile }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_spouse_physician_per = { trait = scholar }
		}
		modifier = {
			factor = 1.5
			persistent_event_target:pregnancy_spouse_physician_per = { trait = physician }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_spouse_physician_per = { trait = quick }
		}
		modifier = {
			factor = 1.5
			persistent_event_target:pregnancy_spouse_physician_per = { trait = genius }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_spouse_physician_per = { learning = 10 }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_spouse_physician_per = { learning = 15 }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_spouse_physician_per = { learning = 20 }
		}
		modifier = {
			factor = 1.5
			persistent_event_target:pregnancy_spouse_physician_per = { learning = 25 }
		}
		modifier = {
			factor = 0.7
			persistent_event_target:pregnancy_regent_physician_per = { NOT = { learning = 5 } }
		}
		modifier = {
			factor = 0.8
			persistent_event_target:pregnancy_regent_physician_per = { NOT = { learning = 10 } }
		}
		modifier = {
			factor = 0.9
			persistent_event_target:pregnancy_regent_physician_per = { trait = slow }
		}
		modifier = {
			factor = 0.8
			persistent_event_target:pregnancy_regent_physician_per = { trait = imbecile }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_regent_physician_per = { trait = scholar }
		}
		modifier = {
			factor = 1.5
			persistent_event_target:pregnancy_regent_physician_per = { trait = physician }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_regent_physician_per = { trait = quick }
		}
		modifier = {
			factor = 1.5
			persistent_event_target:pregnancy_regent_physician_per = { trait = genius }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_regent_physician_per = { learning = 10 }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_regent_physician_per = { learning = 15 }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_regent_physician_per = { learning = 20 }
		}
		modifier = {
			factor = 1.5
			persistent_event_target:pregnancy_regent_physician_per = { learning = 25 }
		}
		change_variable =  { which = troubled_pregnancy_variable value = -2 }
	}
	40 = {
		modifier = {
			factor = 0.75
			has_character_modifier = mother_praying_health
		}
		modifier = {
			factor = 0.5
			has_character_modifier = mother_resting_health
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_partying_health
		}
		modifier = {
			factor = 0.75
			has_character_modifier = mother_minor_rest
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_good_omen
		}
		modifier = {
			factor = 1.2
			has_character_modifier = mother_bad_omen
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_vow_chastity
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_vow_humility
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_vow_charity
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_vow_temperance
		}
		modifier = {
			factor = 1.75
			has_character_modifier = mother_exposed_to_elements
		}
		modifier = {
			factor = 0.8
			has_character_modifier = mother_comforted
		}
		change_variable =  { which = troubled_pregnancy_variable value = 2 }
	}
	}
}

troubled_pregnancy_variable_hard_effect = {
	random_list = {
		30 = {
		modifier = {
			factor = 1.25
			has_character_modifier = mother_dark_rest
		}
		modifier = {
			factor = 1.05
			has_character_modifier = mother_chatting
		}
		modifier = {
			factor = 1.25
			has_character_modifier = mother_fertility_festival_1
		}
		modifier = {
			factor = 1.5
			has_character_modifier = mother_fertility_festival_2
		}
		modifier = {
			factor = 1.5
			has_character_modifier = mother_festival_blessing
		}
		modifier = {
			factor = 0.7
			NOT = { health = 1 }
		}
		modifier = {
			factor = 0.8
			NOT = { health = 2 }
		}
		modifier = {
			factor = 0.9
			NOT = { health = 3 }
		}
		modifier = {
			factor = 0.8
			trait = wounded
		}
		modifier = {
			factor = 0.8
			trait = maimed
		}
		modifier = {
			factor = 0.9
			trait = cough
		}
		modifier = {
			factor = 0.8
			trait = fever
		}
		modifier = {
			factor = 0.9
			trait = diarrhea
		}
		modifier = {
			factor = 0.9
			trait = vomiting
		}
		modifier = {
			factor = 0.7
			trait = chest_pain
		}
		modifier = {
			factor = 0.8
			trait = cramps
		}
		modifier = {
			factor = 0.9
			trait = rash
		}
		modifier = {
			factor = 0.9
			trait = headache
		}
		modifier = {
			factor = 0.7
			trait = abdominal_pain
		}
		modifier = {
			factor = 0.9
			trait = fatigue
		}
		modifier = {
			factor = 0.9
			trait = malaise
		}
		modifier = {
			factor = 0.8
			trait = infection
		}
		modifier = {
			factor = 1.1
			has_character_flag = pregnancy_priest_comfort
		}
		modifier = {
			factor = 1.2
			has_character_flag = pregnancy_shaman_comfort
		}
		modifier = {
			factor = 1.3
			has_character_flag = pregnancy_spouse_comfort
		}
		modifier = {
			factor = 1.4
			has_character_flag = pregnancy_healer_help
		}
		modifier = {
			factor = 0.7
			persistent_event_target:pregnancy_mother_physician_per = { NOT = { learning = 5 } }
		}
		modifier = {
			factor = 0.8
			persistent_event_target:pregnancy_mother_physician_per = { NOT = { learning = 10 } }
		}
		modifier = {
			factor = 0.9
			persistent_event_target:pregnancy_mother_physician_per = { trait = slow }
		}
		modifier = {
			factor = 0.8
			persistent_event_target:pregnancy_mother_physician_per = { trait = imbecile }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_mother_physician_per = { trait = scholar }
		}
		modifier = {
			factor = 1.5
			persistent_event_target:pregnancy_mother_physician_per = { trait = physician }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_mother_physician_per = { trait = quick }
		}
		modifier = {
			factor = 1.5
			persistent_event_target:pregnancy_mother_physician_per = { trait = genius }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_mother_physician_per = { learning = 10 }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_mother_physician_per = { learning = 15 }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_mother_physician_per = { learning = 20 }
		}
		modifier = {
			factor = 1.5
			persistent_event_target:pregnancy_mother_physician_per = { learning = 25 }
		}
		modifier = {
			factor = 0.7
			persistent_event_target:pregnancy_spouse_physician_per = { NOT = { learning = 5 } }
		}
		modifier = {
			factor = 0.8
			persistent_event_target:pregnancy_spouse_physician_per = { NOT = { learning = 10 } }
		}
		modifier = {
			factor = 0.9
			persistent_event_target:pregnancy_spouse_physician_per = { trait = slow }
		}
		modifier = {
			factor = 0.8
			persistent_event_target:pregnancy_spouse_physician_per = { trait = imbecile }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_spouse_physician_per = { trait = scholar }
		}
		modifier = {
			factor = 1.5
			persistent_event_target:pregnancy_spouse_physician_per = { trait = physician }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_spouse_physician_per = { trait = quick }
		}
		modifier = {
			factor = 1.5
			persistent_event_target:pregnancy_spouse_physician_per = { trait = genius }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_spouse_physician_per = { learning = 10 }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_spouse_physician_per = { learning = 15 }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_spouse_physician_per = { learning = 20 }
		}
		modifier = {
			factor = 1.5
			persistent_event_target:pregnancy_spouse_physician_per = { learning = 25 }
		}
		modifier = {
			factor = 0.7
			persistent_event_target:pregnancy_regent_physician_per = { NOT = { learning = 5 } }
		}
		modifier = {
			factor = 0.8
			persistent_event_target:pregnancy_regent_physician_per = { NOT = { learning = 10 } }
		}
		modifier = {
			factor = 0.9
			persistent_event_target:pregnancy_regent_physician_per = { trait = slow }
		}
		modifier = {
			factor = 0.8
			persistent_event_target:pregnancy_regent_physician_per = { trait = imbecile }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_regent_physician_per = { trait = scholar }
		}
		modifier = {
			factor = 1.5
			persistent_event_target:pregnancy_regent_physician_per = { trait = physician }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_regent_physician_per = { trait = quick }
		}
		modifier = {
			factor = 1.5
			persistent_event_target:pregnancy_regent_physician_per = { trait = genius }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_regent_physician_per = { learning = 10 }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_regent_physician_per = { learning = 15 }
		}
		modifier = {
			factor = 1.25
			persistent_event_target:pregnancy_regent_physician_per = { learning = 20 }
		}
		modifier = {
			factor = 1.5
			persistent_event_target:pregnancy_regent_physician_per = { learning = 25 }
		}
		change_variable =  { which = troubled_pregnancy_variable value = -3 }
	}
	70 = {
		modifier = {
			factor = 0.75
			has_character_modifier = mother_praying_health
		}
		modifier = {
			factor = 0.5
			has_character_modifier = mother_resting_health
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_partying_health
		}
		modifier = {
			factor = 0.75
			has_character_modifier = mother_minor_rest
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_good_omen
		}
		modifier = {
			factor = 1.2
			has_character_modifier = mother_bad_omen
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_vow_chastity
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_vow_humility
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_vow_charity
		}
		modifier = {
			factor = 0.9
			has_character_modifier = mother_vow_temperance
		}
		modifier = {
			factor = 1.75
			has_character_modifier = mother_exposed_to_elements
		}
		modifier = {
			factor = 0.8
			has_character_modifier = mother_comforted
		}
		change_variable =  { which = troubled_pregnancy_variable value = 3 }
	}
	}
}

tiered_prestige_reward_effect = {
	if = {
		limit = {
			AND = {
				is_ruler = no
				spouse = { is_ruler = no }
				father_even_if_dead = { is_ruler = no }
				mother_even_if_dead = { is_ruler = no }
			}
		}
		prestige = 5
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = BARON
					NOR = {
						father_even_if_dead = { higher_tier_than = BARON }
						mother_even_if_dead = { higher_tier_than = BARON }
					}
				}
				AND = {
					is_ruler = no
					spouse = { tier = BARON }
				}
				AND = {
					is_ruler = no
					father_even_if_dead = { tier = BARON }
				}
				AND = {
					is_ruler = no
					mother_even_if_dead = { tier = BARON }
				}
			}
			NOR = {
				AND = {
					tier = COUNT
					NOR = {
						father_even_if_dead = { higher_tier_than = COUNT }
						mother_even_if_dead = { higher_tier_than = COUNT }
					}
				}
				AND = {
					lower_tier_than = COUNT
					spouse = { tier = COUNT }
				}
				AND = {
					lower_tier_than = COUNT
					father_even_if_dead = { tier = COUNT }
				}
				AND = {
					lower_tier_than = COUNT
					mother_even_if_dead = { tier = COUNT }
				}
			}
		}
		prestige = 10
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = COUNT
					NOR = {
						father_even_if_dead = { higher_tier_than = COUNT }
						mother_even_if_dead = { higher_tier_than = COUNT }
					}
				}
				AND = {
					lower_tier_than = COUNT
					spouse = { tier = COUNT }
				}
				AND = {
					lower_tier_than = COUNT
					father_even_if_dead = { tier = COUNT }
				}
				AND = {
					lower_tier_than = COUNT
					mother_even_if_dead = { tier = COUNT }
				}
			}
			NOR = {
				AND = {
					tier = DUKE
					NOR = {
						father_even_if_dead = { higher_tier_than = DUKE }
						mother_even_if_dead = { higher_tier_than = DUKE }
					}
				}
				AND = {
					lower_tier_than = DUKE
					spouse = { tier = DUKE }
				}
				AND = {
					lower_tier_than = DUKE
					father_even_if_dead = { tier = DUKE }
				}
				AND = {
					lower_tier_than = DUKE
					mother_even_if_dead = { tier = DUKE }
				}
			}
		}
		prestige = 25
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = DUKE
					NOR = {
						father_even_if_dead = { higher_tier_than = DUKE }
						mother_even_if_dead = { higher_tier_than = DUKE }
					}
				}
				AND = {
					lower_tier_than = DUKE
					spouse = { tier = DUKE }
				}
				AND = {
					lower_tier_than = DUKE
					father_even_if_dead = { tier = DUKE }
				}
				AND = {
					lower_tier_than = DUKE
					mother_even_if_dead = { tier = DUKE }
				}
			}
			NOR = {
				AND = {
					tier = KING
					NOR = {
						father_even_if_dead = { higher_tier_than = KING }
						mother_even_if_dead = { higher_tier_than = KING }
					}
				}
				AND = {
					lower_tier_than = KING
					spouse = { tier = KING }
				}
				AND = {
					lower_tier_than = KING
					father_even_if_dead = { tier = KING }
				}
				AND = {
					lower_tier_than = KING
					mother_even_if_dead = { tier = KING }
				}
			}
		}
		prestige = 50
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = KING
					NOR = {
						father_even_if_dead = { higher_tier_than = KING }
						mother_even_if_dead = { higher_tier_than = KING }
					}
				}
				AND = {
					lower_tier_than = KING
					spouse = { tier = KING }
				}
				AND = {
					lower_tier_than = KING
					father_even_if_dead = { tier = KING }
				}
				AND = {
					lower_tier_than = KING
					mother_even_if_dead = { tier = KING }
				}
			}
			NOR = {
				AND = {
					tier = EMPEROR
					NOR = {
						father_even_if_dead = { higher_tier_than = EMPEROR }
						mother_even_if_dead = { higher_tier_than = EMPEROR }
					}
				}
				AND = {
					lower_tier_than = EMPEROR
					spouse = { tier = EMPEROR }
				}
				AND = {
					lower_tier_than = EMPEROR
					father_even_if_dead = { tier = EMPEROR }
				}
				AND = {
					lower_tier_than = EMPEROR
					mother_even_if_dead = { tier = EMPEROR }
				}
			}
		}
		prestige = 75
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = EMPEROR
					NOR = {
						father_even_if_dead = { higher_tier_than = EMPEROR }
						mother_even_if_dead = { higher_tier_than = EMPEROR }
					}
				}
				AND = {
					lower_tier_than = EMPEROR
					spouse = { tier = EMPEROR }
				}
				AND = {
					lower_tier_than = EMPEROR
					father_even_if_dead = { tier = EMPEROR }
				}
				AND = {
					lower_tier_than = EMPEROR
					mother_even_if_dead = { tier = EMPEROR }
				}
			}
		}
		prestige = 100
	}
}

tiered_piety_reward_effect = {
	if = {
		limit = {
			AND = {
				is_ruler = no
				spouse = { is_ruler = no }
				father_even_if_dead = { is_ruler = no }
				mother_even_if_dead = { is_ruler = no }
			}
		}
		piety = 5
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = BARON
					NOR = {
						father_even_if_dead = { higher_tier_than = BARON }
						mother_even_if_dead = { higher_tier_than = BARON }
					}
				}
				AND = {
					is_ruler = no
					spouse = { tier = BARON }
				}
				AND = {
					is_ruler = no
					father_even_if_dead = { tier = BARON }
				}
				AND = {
					is_ruler = no
					mother_even_if_dead = { tier = BARON }
				}
			}
			NOR = {
				AND = {
					tier = COUNT
					NOR = {
						father_even_if_dead = { higher_tier_than = COUNT }
						mother_even_if_dead = { higher_tier_than = COUNT }
					}
				}
				AND = {
					lower_tier_than = COUNT
					spouse = { tier = COUNT }
				}
				AND = {
					lower_tier_than = COUNT
					father_even_if_dead = { tier = COUNT }
				}
				AND = {
					lower_tier_than = COUNT
					mother_even_if_dead = { tier = COUNT }
				}
			}
		}
		piety = 10
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = COUNT
					NOR = {
						father_even_if_dead = { higher_tier_than = COUNT }
						mother_even_if_dead = { higher_tier_than = COUNT }
					}
				}
				AND = {
					lower_tier_than = COUNT
					spouse = { tier = COUNT }
				}
				AND = {
					lower_tier_than = COUNT
					father_even_if_dead = { tier = COUNT }
				}
				AND = {
					lower_tier_than = COUNT
					mother_even_if_dead = { tier = COUNT }
				}
			}
			NOR = {
				AND = {
					tier = DUKE
					NOR = {
						father_even_if_dead = { higher_tier_than = DUKE }
						mother_even_if_dead = { higher_tier_than = DUKE }
					}
				}
				AND = {
					lower_tier_than = DUKE
					spouse = { tier = DUKE }
				}
				AND = {
					lower_tier_than = DUKE
					father_even_if_dead = { tier = DUKE }
				}
				AND = {
					lower_tier_than = DUKE
					mother_even_if_dead = { tier = DUKE }
				}
			}
		}
		piety = 15
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = DUKE
					NOR = {
						father_even_if_dead = { higher_tier_than = DUKE }
						mother_even_if_dead = { higher_tier_than = DUKE }
					}
				}
				AND = {
					lower_tier_than = DUKE
					spouse = { tier = DUKE }
				}
				AND = {
					lower_tier_than = DUKE
					father_even_if_dead = { tier = DUKE }
				}
				AND = {
					lower_tier_than = DUKE
					mother_even_if_dead = { tier = DUKE }
				}
			}
			NOR = {
				AND = {
					tier = KING
					NOR = {
						father_even_if_dead = { higher_tier_than = KING }
						mother_even_if_dead = { higher_tier_than = KING }
					}
				}
				AND = {
					lower_tier_than = KING
					spouse = { tier = KING }
				}
				AND = {
					lower_tier_than = KING
					father_even_if_dead = { tier = KING }
				}
				AND = {
					lower_tier_than = KING
					mother_even_if_dead = { tier = KING }
				}
			}
		}
		piety = 20
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = KING
					NOR = {
						father_even_if_dead = { higher_tier_than = KING }
						mother_even_if_dead = { higher_tier_than = KING }
					}
				}
				AND = {
					lower_tier_than = KING
					spouse = { tier = KING }
				}
				AND = {
					lower_tier_than = KING
					father_even_if_dead = { tier = KING }
				}
				AND = {
					lower_tier_than = KING
					mother_even_if_dead = { tier = KING }
				}
			}
			NOR = {
				AND = {
					tier = EMPEROR
					NOR = {
						father_even_if_dead = { higher_tier_than = EMPEROR }
						mother_even_if_dead = { higher_tier_than = EMPEROR }
					}
				}
				AND = {
					lower_tier_than = EMPEROR
					spouse = { tier = EMPEROR }
				}
				AND = {
					lower_tier_than = EMPEROR
					father_even_if_dead = { tier = EMPEROR }
				}
				AND = {
					lower_tier_than = EMPEROR
					mother_even_if_dead = { tier = EMPEROR }
				}
			}
		}
		piety = 25
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = EMPEROR
					NOR = {
						father_even_if_dead = { higher_tier_than = EMPEROR }
						mother_even_if_dead = { higher_tier_than = EMPEROR }
					}
				}
				AND = {
					lower_tier_than = EMPEROR
					spouse = { tier = EMPEROR }
				}
				AND = {
					lower_tier_than = EMPEROR
					father_even_if_dead = { tier = EMPEROR }
				}
				AND = {
					lower_tier_than = EMPEROR
					mother_even_if_dead = { tier = EMPEROR }
				}
			}
		}
		piety = 30
	}
}

tiered_prestige_negative_effect = {
	if = {
		limit = {
			AND = {
				is_ruler = no
				spouse = { is_ruler = no }
				mother_even_if_dead = { is_ruler = no }
				father_even_if_dead = { is_ruler = no }
			}
		}
		prestige = -5
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = BARON
					NOR = {
						father_even_if_dead = { higher_tier_than = BARON }
						mother_even_if_dead = { higher_tier_than = BARON }
					}
				}
				AND = {
					is_ruler = no
					spouse = { tier = BARON }
				}
				AND = {
					is_ruler = no
					father_even_if_dead = { tier = BARON }
				}
				AND = {
					is_ruler = no
					mother_even_if_dead = { tier = BARON }
				}
			}
			NOR = {
				AND = {
					tier = COUNT
					NOR = {
						father_even_if_dead = { higher_tier_than = COUNT }
						mother_even_if_dead = { higher_tier_than = COUNT }
					}
				}
				AND = {
					lower_tier_than = COUNT
					spouse = { tier = COUNT }
				}
				AND = {
					lower_tier_than = COUNT
					father_even_if_dead = { tier = COUNT }
				}
				AND = {
					lower_tier_than = COUNT
					mother_even_if_dead = { tier = COUNT }
				}
			}
		}
		prestige = -10
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = COUNT
					NOR = {
						father_even_if_dead = { higher_tier_than = COUNT }
						mother_even_if_dead = { higher_tier_than = COUNT }
					}
				}
				AND = {
					lower_tier_than = COUNT
					spouse = { tier = COUNT }
				}
				AND = {
					lower_tier_than = COUNT
					father_even_if_dead = { tier = COUNT }
				}
				AND = {
					lower_tier_than = COUNT
					mother_even_if_dead = { tier = COUNT }
				}
			}
			NOR = {
				AND = {
					tier = DUKE
					NOR = {
						father_even_if_dead = { higher_tier_than = DUKE }
						mother_even_if_dead = { higher_tier_than = DUKE }
					}
				}
				AND = {
					lower_tier_than = DUKE
					spouse = { tier = DUKE }
				}
				AND = {
					lower_tier_than = DUKE
					father_even_if_dead = { tier = DUKE }
				}
				AND = {
					lower_tier_than = DUKE
					mother_even_if_dead = { tier = DUKE }
				}
			}
		}
		prestige = -25
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = DUKE
					NOR = {
						father_even_if_dead = { higher_tier_than = DUKE }
						mother_even_if_dead = { higher_tier_than = DUKE }
					}
				}
				AND = {
					lower_tier_than = DUKE
					spouse = { tier = DUKE }
				}
				AND = {
					lower_tier_than = DUKE
					father_even_if_dead = { tier = DUKE }
				}
				AND = {
					lower_tier_than = DUKE
					mother_even_if_dead = { tier = DUKE }
				}
			}
			NOR = {
				AND = {
					tier = KING
					NOR = {
						father_even_if_dead = { higher_tier_than = KING }
						mother_even_if_dead = { higher_tier_than = KING }
					}
				}
				AND = {
					lower_tier_than = KING
					spouse = { tier = KING }
				}
				AND = {
					lower_tier_than = KING
					father_even_if_dead = { tier = KING }
				}
				AND = {
					lower_tier_than = KING
					mother_even_if_dead = { tier = KING }
				}
			}
		}
		prestige = -50
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = KING
					NOR = {
						father_even_if_dead = { higher_tier_than = KING }
						mother_even_if_dead = { higher_tier_than = KING }
					}
				}
				AND = {
					lower_tier_than = KING
					spouse = { tier = KING }
				}
				AND = {
					lower_tier_than = KING
					father_even_if_dead = { tier = KING }
				}
				AND = {
					lower_tier_than = KING
					mother_even_if_dead = { tier = KING }
				}
			}
			NOR = {
				AND = {
					tier = EMPEROR
					NOR = {
						father_even_if_dead = { higher_tier_than = EMPEROR }
						mother_even_if_dead = { higher_tier_than = EMPEROR }
					}
				}
				AND = {
					lower_tier_than = EMPEROR
					spouse = { tier = EMPEROR }
				}
				AND = {
					lower_tier_than = EMPEROR
					father_even_if_dead = { tier = EMPEROR }
				}
				AND = {
					lower_tier_than = EMPEROR
					mother_even_if_dead = { tier = EMPEROR }
				}
			}
		}
		prestige = -75
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = EMPEROR
					NOR = {
						father_even_if_dead = { higher_tier_than = EMPEROR }
						mother_even_if_dead = { higher_tier_than = EMPEROR }
					}
				}
				AND = {
					lower_tier_than = EMPEROR
					spouse = { tier = EMPEROR }
				}
				AND = {
					lower_tier_than = EMPEROR
					father_even_if_dead = { tier = EMPEROR }
				}
				AND = {
					lower_tier_than = EMPEROR
					mother_even_if_dead = { tier = EMPEROR }
				}
			}
		}
		prestige = -100
	}
}

tiered_piety_negative_effect = {
	if = {
		limit = {
			AND = {
				is_ruler = no
				spouse = { is_ruler = no }
				father_even_if_dead = { is_ruler = no }
				mother_even_if_dead = { is_ruler = no }
			}
		}
		piety = -5
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = BARON
					NOR = {
						father_even_if_dead = { higher_tier_than = BARON }
						mother_even_if_dead = { higher_tier_than = BARON }
					}
				}
				AND = {
					is_ruler = no
					spouse = { tier = BARON }
				}
				AND = {
					is_ruler = no
					father_even_if_dead = { tier = BARON }
				}
				AND = {
					is_ruler = no
					mother_even_if_dead = { tier = BARON }
				}
			}
			NOR = {
				AND = {
					tier = COUNT
					NOR = {
						father_even_if_dead = { higher_tier_than = COUNT }
						mother_even_if_dead = { higher_tier_than = COUNT }
					}
				}
				AND = {
					lower_tier_than = COUNT
					spouse = { tier = COUNT }
				}
				AND = {
					lower_tier_than = COUNT
					father_even_if_dead = { tier = COUNT }
				}
				AND = {
					lower_tier_than = COUNT
					mother_even_if_dead = { tier = COUNT }
				}
			}
		}
		piety = -10
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = COUNT
					NOR = {
						father_even_if_dead = { higher_tier_than = COUNT }
						mother_even_if_dead = { higher_tier_than = COUNT }
					}
				}
				AND = {
					lower_tier_than = COUNT
					spouse = { tier = COUNT }
				}
				AND = {
					lower_tier_than = COUNT
					father_even_if_dead = { tier = COUNT }
				}
				AND = {
					lower_tier_than = COUNT
					mother_even_if_dead = { tier = COUNT }
				}
			}
			NOR = {
				AND = {
					tier = DUKE
					NOR = {
						father_even_if_dead = { higher_tier_than = DUKE }
						mother_even_if_dead = { higher_tier_than = DUKE }
					}
				}
				AND = {
					lower_tier_than = DUKE
					spouse = { tier = DUKE }
				}
				AND = {
					lower_tier_than = DUKE
					father_even_if_dead = { tier = DUKE }
				}
				AND = {
					lower_tier_than = DUKE
					mother_even_if_dead = { tier = DUKE }
				}
			}
		}
		piety = -15
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = DUKE
					NOR = {
						father_even_if_dead = { higher_tier_than = DUKE }
						mother_even_if_dead = { higher_tier_than = DUKE }
					}
				}
				AND = {
					lower_tier_than = DUKE
					spouse = { tier = DUKE }
				}
				AND = {
					lower_tier_than = DUKE
					father_even_if_dead = { tier = DUKE }
				}
				AND = {
					lower_tier_than = DUKE
					mother_even_if_dead = { tier = DUKE }
				}
			}
			NOR = {
				AND = {
					tier = KING
					NOR = {
						father_even_if_dead = { higher_tier_than = KING }
						mother_even_if_dead = { higher_tier_than = KING }
					}
				}
				AND = {
					lower_tier_than = KING
					spouse = { tier = KING }
				}
				AND = {
					lower_tier_than = KING
					father_even_if_dead = { tier = KING }
				}
				AND = {
					lower_tier_than = KING
					mother_even_if_dead = { tier = KING }
				}
			}
		}
		piety = -20
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = KING
					NOR = {
						father_even_if_dead = { higher_tier_than = KING }
						mother_even_if_dead = { higher_tier_than = KING }
					}
				}
				AND = {
					lower_tier_than = KING
					spouse = { tier = KING }
				}
				AND = {
					lower_tier_than = KING
					father_even_if_dead = { tier = KING }
				}
				AND = {
					lower_tier_than = KING
					mother_even_if_dead = { tier = KING }
				}
			}
			NOR = {
				AND = {
					tier = EMPEROR
					NOR = {
						father_even_if_dead = { higher_tier_than = EMPEROR }
						mother_even_if_dead = { higher_tier_than = EMPEROR }
					}
				}
				AND = {
					lower_tier_than = EMPEROR
					spouse = { tier = EMPEROR }
				}
				AND = {
					lower_tier_than = EMPEROR
					father_even_if_dead = { tier = EMPEROR }
				}
				AND = {
					lower_tier_than = EMPEROR
					mother_even_if_dead = { tier = EMPEROR }
				}
			}
		}
		piety = -25
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = EMPEROR
					NOR = {
						father_even_if_dead = { higher_tier_than = EMPEROR }
						mother_even_if_dead = { higher_tier_than = EMPEROR }
					}
				}
				AND = {
					lower_tier_than = EMPEROR
					spouse = { tier = EMPEROR }
				}
				AND = {
					lower_tier_than = EMPEROR
					father_even_if_dead = { tier = EMPEROR }
				}
				AND = {
					lower_tier_than = EMPEROR
					mother_even_if_dead = { tier = EMPEROR }
				}
			}
		}
		piety = -30
	}
}

tiered_high_piety_negative_effect = {
	if = {
		limit = {
			AND = {
				is_ruler = no
				spouse = { is_ruler = no }
				father_even_if_dead = { is_ruler = no }
				mother_even_if_dead = { is_ruler = no }
			}
		}
		piety = -25
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = BARON
					NOR = {
						father_even_if_dead = { higher_tier_than = BARON }
						mother_even_if_dead = { higher_tier_than = BARON }
					}
				}
				AND = {
					is_ruler = no
					spouse = { tier = BARON }
				}
				AND = {
					is_ruler = no
					father_even_if_dead = { tier = BARON }
				}
				AND = {
					is_ruler = no
					mother_even_if_dead = { tier = BARON }
				}
			}
			NOR = {
				AND = {
					tier = COUNT
					NOR = {
						father_even_if_dead = { higher_tier_than = COUNT }
						mother_even_if_dead = { higher_tier_than = COUNT }
					}
				}
				AND = {
					lower_tier_than = COUNT
					spouse = { tier = COUNT }
				}
				AND = {
					lower_tier_than = COUNT
					father_even_if_dead = { tier = COUNT }
				}
				AND = {
					lower_tier_than = COUNT
					mother_even_if_dead = { tier = COUNT }
				}
			}
		}
		piety = -40
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = COUNT
					NOR = {
						father_even_if_dead = { higher_tier_than = COUNT }
						mother_even_if_dead = { higher_tier_than = COUNT }
					}
				}
				AND = {
					lower_tier_than = COUNT
					spouse = { tier = COUNT }
				}
				AND = {
					lower_tier_than = COUNT
					father_even_if_dead = { tier = COUNT }
				}
				AND = {
					lower_tier_than = COUNT
					mother_even_if_dead = { tier = COUNT }
				}
			}
			NOR = {
				AND = {
					tier = DUKE
					NOR = {
						father_even_if_dead = { higher_tier_than = DUKE }
						mother_even_if_dead = { higher_tier_than = DUKE }
					}
				}
				AND = {
					lower_tier_than = DUKE
					spouse = { tier = DUKE }
				}
				AND = {
					lower_tier_than = DUKE
					father_even_if_dead = { tier = DUKE }
				}
				AND = {
					lower_tier_than = DUKE
					mother_even_if_dead = { tier = DUKE }
				}
			}
		}
		piety = -70
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = DUKE
					NOR = {
						father_even_if_dead = { higher_tier_than = DUKE }
						mother_even_if_dead = { higher_tier_than = DUKE }
					}
				}
				AND = {
					lower_tier_than = DUKE
					spouse = { tier = DUKE }
				}
				AND = {
					lower_tier_than = DUKE
					father_even_if_dead = { tier = DUKE }
				}
				AND = {
					lower_tier_than = DUKE
					mother_even_if_dead = { tier = DUKE }
				}
			}
			NOR = {
				AND = {
					tier = KING
					NOR = {
						father_even_if_dead = { higher_tier_than = KING }
						mother_even_if_dead = { higher_tier_than = KING }
					}
				}
				AND = {
					lower_tier_than = KING
					spouse = { tier = KING }
				}
				AND = {
					lower_tier_than = KING
					father_even_if_dead = { tier = KING }
				}
				AND = {
					lower_tier_than = KING
					mother_even_if_dead = { tier = KING }
				}
			}
		}
		piety = -100
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = KING
					NOR = {
						father_even_if_dead = { higher_tier_than = KING }
						mother_even_if_dead = { higher_tier_than = KING }
					}
				}
				AND = {
					lower_tier_than = KING
					spouse = { tier = KING }
				}
				AND = {
					lower_tier_than = KING
					father_even_if_dead = { tier = KING }
				}
				AND = {
					lower_tier_than = KING
					mother_even_if_dead = { tier = KING }
				}
			}
			NOR = {
				AND = {
					tier = EMPEROR
					NOR = {
						father_even_if_dead = { higher_tier_than = EMPEROR }
						mother_even_if_dead = { higher_tier_than = EMPEROR }
					}
				}
				AND = {
					lower_tier_than = EMPEROR
					spouse = { tier = EMPEROR }
				}
				AND = {
					lower_tier_than = EMPEROR
					father_even_if_dead = { tier = EMPEROR }
				}
				AND = {
					lower_tier_than = EMPEROR
					mother_even_if_dead = { tier = EMPEROR }
				}
			}
		}
		piety = -150
	}
	if = {
		limit = {
			OR = {
				AND = {
					tier = EMPEROR
					NOR = {
						father_even_if_dead = { higher_tier_than = EMPEROR }
						mother_even_if_dead = { higher_tier_than = EMPEROR }
					}
				}
				AND = {
					lower_tier_than = EMPEROR
					spouse = { tier = EMPEROR }
				}
				AND = {
					lower_tier_than = EMPEROR
					father_even_if_dead = { tier = EMPEROR }
				}
				AND = {
					lower_tier_than = EMPEROR
					mother_even_if_dead = { tier = EMPEROR }
				}
			}
		}
		piety = -350
	}
}
#Used for gluttonous and hedonistic actions.
gain_weight_small_effect = {
	custom_tooltip = {
		hidden_tooltip = {
		change_variable = { which = physique_variable value = 5 }
		}
	}
}
gain_weight_medium_effect = {
	custom_tooltip = {
		hidden_tooltip = {
		change_variable = { which = physique_variable value = 10 }
		}
	}
}
gain_weight_large_effect = {
	custom_tooltip = {
		hidden_tooltip = {
		change_variable = { which = physique_variable value = 15 }
		}
	}
}

#Used for training and balanced lifestyle.
balance_weight_small_effect =  {
	custom_tooltip = {
		hidden_tooltip = {
			#If variable is above 1, reduce it. If it's below 1 increase it.
			if = {
				limit = {
					check_variable = { which = physique_variable value = 1 }
				}
				change_variable = { which = physique_variable value = -2 }
			}
			if = {
				limit = {
					NOT = { check_variable = { which = physique_variable value = -1 } }
				}
				change_variable = { which = physique_variable value = 2 }
			}
		}
	}
}
balance_weight_medium_effect = {
	custom_tooltip = {
		hidden_tooltip = {
			#If variable is above 1, reduce it. If it's below 1 increase it.
			if = {
				limit = {
					check_variable = { which = physique_variable value = 1 }
				}
				change_variable = { which = physique_variable value = -5 }
			}
			if = {
				limit = {
					NOT = { check_variable = { which = physique_variable value = -1 } }
				}
				change_variable = { which = physique_variable value = 5 }
			}
		}
	}
}

balance_weight_large_effect = { #Should be used rarely.
	custom_tooltip = {
		hidden_tooltip = {
			#If variable is above 1, reduce it. If it's below 1 increase it.
			if = {
				limit = {
					check_variable = { which = physique_variable value = 1 }
				}
				change_variable = { which = physique_variable value = -10 }
			}
			if = {
				limit = {
					NOT = { check_variable = { which = physique_variable value = -1 } }
				}
				change_variable = { which = physique_variable value = 10 }
			}
		}
	}
}

#Used for seclusions, fasting, dungeon starvation, etc.
lose_weight_small_effect = {
	custom_tooltip = {
		hidden_tooltip = {
		change_variable = { which = physique_variable value = -6 } #Because of the way trigger works, checks if you are below -5/-10/-15
		}
	}
}
lose_weight_medium_effect = {
	custom_tooltip = {
		hidden_tooltip = {
	change_variable = { which = physique_variable value = -11 }
		}
	}
}
lose_weight_large_effect = {
	custom_tooltip = {
		hidden_tooltip = {
	change_variable = { which = physique_variable value = -16 }
		}
	}
}

#Doesn't change the variable, only checks if the character has the correct trait assigned.
weight_trait_check_effect = {

	#Debilitating effects are gained by special events, usually later in life (40s), but they can be cleared up if the character's variable goes back towards 0 again.
	if = {
		limit = {
			NOT = { check_variable = { which = physique_variable value = 30 } }
			has_character_modifier = obese_modifier
		}
		remove_character_modifier = obese_modifier
	}
	if = {
		limit = {
			check_variable = { which = physique_variable value = -30 }
			has_character_modifier = severely_underweight_modifier
		}
		remove_character_modifier = severely_underweight_modifier
	}

	if = {
		limit = {
			trait = is_fat
			NOT = { check_variable = { which = physique_variable value = 15 } }
			check_variable = { which = physique_variable value = -15 }
		}
		remove_trait = is_fat
		hidden_tooltip = {
			remove_weight_modifier_effect = yes
			character_event = { id = HFP.20601 } #Notification
		}
	}
	if = {
		limit = {
			trait = is_fat
			NOT = { check_variable = { which = physique_variable value = -15 } }
		}
		remove_trait = is_fat
		add_trait = is_malnourished
		hidden_tooltip = {
			remove_weight_modifier_effect = yes
			character_event = { id = HFP.20602 } #Notification
		}
	}
	if = {
		limit = {
			trait = is_malnourished
			NOT = { check_variable = { which = physique_variable value = 15 } }
			check_variable = { which = physique_variable value = -15 }
		}
		remove_trait = is_malnourished
		hidden_tooltip = {
			remove_weight_modifier_effect = yes
			character_event = { id = HFP.20603 } #Notification
		}
	}
	if = {
		limit = {
			trait = is_malnourished
			check_variable = { which = physique_variable value = 15 }
		}
		remove_trait = is_malnourished
		add_trait = is_fat
		hidden_tooltip = {
			remove_weight_modifier_effect = yes
			character_event = { id = HFP.20600 } #Notification
		}
	}
	if = {
		limit = {
			NOR = {
				trait = is_malnourished
				trait = is_fat
			}
			check_variable = { which = physique_variable value = 15 }
		}
		#First time try to fire a special event if character meets any of the conditions, otherwise simply notify.
		weight_flavor_conditions_effect = yes
		add_trait = is_fat
		hidden_tooltip = { character_event = { id = HFP.20600 } } #Notification
	}
	if = {
		limit = {
			NOR = {
				trait = is_malnourished
				trait = is_fat
			}
			NOT = { check_variable = { which = physique_variable value = -15 } }
		}
		#First time try to fire a special event if character meets any of the conditions, otherwise simply notify.
		weight_flavor_conditions_effect = yes
		add_trait = is_malnourished
		hidden_tooltip = { character_event = { id = HFP.20602 } } #Notification
	}

}
apply_weight_modifier_effect = {
	if = {
		limit = {
			OR = {
				has_character_flag = flag_fat_for_gluttony
				has_character_flag = flag_fat_for_boredom
			}
		}
		add_character_modifier = {
			name = coping_glutton
			duration = 5000
		}
	}
	if = {
		limit = {
			OR = {
				has_character_flag = flag_fat_for_sloth
				has_character_flag = flag_malnourished_for_sloth
				has_character_flag = flag_fat_for_stress
				has_character_flag = flag_malnourished_for_stress
				has_character_flag = flag_fat_for_lust
				has_character_flag = flag_fat_for_wroth
				has_character_flag = flag_malnourished_for_craven
			}
		}
		add_character_modifier = {
			name = stress_relief
			duration = 5000
		}
	}
	if = {
		limit = {
			OR = {
				has_character_flag = flag_fat_for_depression
				has_character_flag = flag_malnourished_for_depression
			}
		}
		add_character_modifier = {
			name = anti_depression
			duration = 5000
		}
	}
	if = {
		limit = {
			OR = {
				has_character_flag = flag_fat_for_hedonism
				has_character_flag = flag_fat_for_carousing
				has_character_flag = flag_fat_for_drunkard
			}
		}
		add_character_modifier = {
			name = munificent_modifier
			duration = 5000
		}
	}
	if = {
		limit = {
			OR = {
				has_character_flag = flag_fat_for_family
				has_character_flag = flag_fat_for_content
			}
			is_female = yes
		}
		add_character_modifier = {
			name = jolly_matron_modifier
			duration = 5000
		}
	}
	if = {
		limit = {
			OR = {
				has_character_flag = flag_fat_for_family
				has_character_flag = flag_fat_for_content
			}
			is_female = no
		}
		add_character_modifier = {
			name = jolly_patriarch_modifier
			duration = 5000
		}
	}
	if = {
		limit = {
			OR = {
				has_character_flag = flag_malnourished_for_temperance
				has_character_flag = flag_malnourished_for_boredom
			}
		}
		add_character_modifier = {
			name = extremely_temperate
			duration = 5000
		}
	}
	if = {
		limit = {
			has_character_flag = flag_malnourished_for_study
		}
		add_character_modifier = {
			name = restless_study
			duration = 5000
		}
	}
	if = {
		limit = {
			has_character_flag = flag_malnourished_for_faith
		}
		add_character_modifier = {
			name = restless_prayer
			duration = 5000
		}
	}
	if = {
		limit = {
			has_character_flag = flag_malnourished_for_paranoia
		}
		add_character_modifier = {
			name = malnourished_paranoia
			duration = 5000
		}
	}
	if = {
		limit = {
			has_character_flag = flag_malnourished_for_diligence
		}
		add_character_modifier = {
			name = tireless_worker
			duration = 5000
		}
	}
	if = {
		limit = {
			has_character_flag = flag_malnourished_for_cannibal
		}
		add_character_modifier = {
			name = refined_palate
			duration = 5000
		}
	}
}
remove_weight_modifier_effect = {
	if = {
		limit = {
			has_character_modifier = coping_glutton
		}
		remove_character_modifier = coping_glutton
	}
	if = {
		limit = {
			has_character_modifier = stress_relief
		}
		remove_character_modifier = stress_relief
	}
	if = {
		limit = {
			has_character_modifier = anti_depression
		}
		remove_character_modifier = anti_depression
	}
	if = {
		limit = {
			has_character_modifier = munificent_modifier
		}
		remove_character_modifier = munificent_modifier
	}
	if = {
		limit = {
			has_character_modifier = jolly_matron_modifier
		}
		remove_character_modifier = jolly_matron_modifier
	}
	if = {
		limit = {
			has_character_modifier = jolly_patriarch_modifier
		}
		remove_character_modifier = jolly_patriarch_modifier
	}
	if = {
		limit = {
			has_character_modifier = extremely_temperate
		}
		remove_character_modifier = extremely_temperate
	}
	if = {
		limit = {
			has_character_modifier = restless_study
		}
		remove_character_modifier = restless_study
	}
	if = {
		limit = {
			has_character_modifier = restless_prayer
		}
		remove_character_modifier = restless_prayer
	}
	if = {
		limit = {
			has_character_modifier = malnourished_paranoia
		}
		remove_character_modifier = malnourished_paranoia
	}
	if = {
		limit = {
			has_character_modifier = tireless_worker
		}
		remove_character_modifier = tireless_worker
	}
}
clear_fat_flags_effect = {
	clr_character_flag = flag_fat_for_gluttony
	clr_character_flag = flag_fat_for_stress
	clr_character_flag = flag_fat_for_depression
	clr_character_flag = flag_fat_for_sloth
	clr_character_flag = flag_fat_for_hedonism
	clr_character_flag = flag_fat_for_carousing
	clr_character_flag = flag_fat_for_family
	clr_character_flag = flag_fat_for_content
	clr_character_flag = flag_fat_for_lust
	clr_character_flag = flag_fat_for_wroth
	clr_character_flag = flag_fat_for_drunkard
	clr_character_flag = flag_fat_for_boredom
}
clear_malnourished_flags_effect = {
	clr_character_flag = flag_malnourished_for_temperance
	clr_character_flag = flag_malnourished_for_stress
	clr_character_flag = flag_malnourished_for_depression
	clr_character_flag = flag_malnourished_for_sloth
	clr_character_flag = flag_malnourished_for_study
	clr_character_flag = flag_malnourished_for_faith
	clr_character_flag = flag_malnourished_for_paranoia
	clr_character_flag = flag_malnourished_for_diligence
	clr_character_flag = flag_malnourished_for_cannibal
	clr_character_flag = flag_malnourished_for_craven
	clr_character_flag = flag_malnourished_for_boredom
}
weight_flavor_conditions_effect = {

	if = { #If already about to become fat and fulfilling one of the special conditions, fire the specific event to give more flavor.
		limit = {
			check_variable = { which = physique_variable value = 12 }
			NOT = { trait = is_fat }
			NOT = { has_character_flag = flag_primed_physique }
			#NOT = { trait = temperate }
			NOT = { trait = incapable }
			age = 20
			prisoner = no
			is_inaccessible_trigger = no
			NOT = { #Can happen only once
				has_fat_for_flag_trigger = yes
			}
			OR = { 				#Possible reasons
				trait = gluttonous
				trait = stressed
				trait = depressed
				trait = slothful
				trait = hedonist
				trait = wroth
				trait = drunkard
				has_focus = focus_carousing
				AND = { #Happy mom
					OR = {
						trait = kind
						trait = content
						has_focus = focus_family
						trait = patient
					}
					NOR = {
						trait = cruel
						trait = envious
					}
					is_female = yes
					any_child = {
						is_alive = yes
						is_adult = no
					}
				}
				AND = { #Content husband
					OR = {
						trait = kind
						trait = content
						has_focus = focus_family
						trait = patient
					}
					NOR = {
						trait = cruel
						trait = envious
					}
					is_female = no
					is_married = yes
					OR = {
						num_of_consorts = 2
						num_of_children = 2
						num_of_spouses = 2
					}
				}
				AND = { #Frustrated lustful survivor mom
					has_character_flag = survivor_mom
					trait = celibate
					trait = lustful
				}
				AND = { #Frustrated eunuch
					trait = eunuch
					trait = lustful
				}
				AND = { #Generic fallback
					NOT = { trait = temperate }
					check_variable = { which = physique_variable value = 15 }
				}
			}
		}
		if = {
			limit = { NOT = { check_variable = { which = physique_variable value = 15 } } }
			gain_weight_small_effect = yes
		}
		set_character_flag = flag_primed_physique
		character_event = { id = HFP.20605 days = 10 }
	}
	if = { #If already about to become malnourished and fulfilling one of the special conditions, fire the specific event to give more flavor.
		limit = {
			NOT = { check_variable = { which = physique_variable value = -12 } }
			NOT = { trait = is_malnourished }
			#NOT = { trait = gluttonous }
			NOT = { trait = incapable }
			NOT = { has_character_flag = flag_primed_physique }
			age = 20
			prisoner = no
			is_inaccessible_trigger = no
			NOT = { #Can happen only once
				has_malnourished_for_flag_trigger = yes
			}
			OR = { 				#Possible reasons
				trait = temperate
				trait = stressed
				trait = depressed
				trait = slothful
				trait = scholar
				trait = cannibal_trait
				trait = craven
				has_focus = focus_scholarship
				has_focus = focus_theology
				trait = paranoid
				trait = diligent
				AND = { #Generic fallback
					NOT = { trait = gluttonous }
					NOT = { check_variable = { which = physique_variable value = -15 } }
				}
			}
		}
		if = {
			limit = { check_variable = { which = physique_variable value = -15 } }
			lose_weight_small_effect = yes
		}
		set_character_flag = flag_primed_physique
		character_event = { id = HFP.20628 days = 10 }
	}
}

#Copied to facilitate use elsewhere.
this_post_weight_gain_flavor_effect = {
	random_list = {
		25 = { }
		5 = {
			trigger = {
				trait = stressed
			}
			character_event = { id = HFP.20607 days = 50 random = 50 } #Lose stressed
		}
		5 = {
			trigger = {
				trait = depressed
			}
			character_event = { id = HFP.20608 days = 50 random = 50 } #Lose depressed
		}
		2 = {
			modifier = {
				factor = 0.5
				check_variable = { which = physique_variable value = 20 }
			}
			modifier = {
				factor = 0.5
				NOT = { trait = feeble }
			}
			character_event = { id = HFP.20609 days = 50 random = 50 } #Gain health
		}
		2 = {
			modifier = {
				factor = 1.5
				check_variable = { which = physique_variable value = 20 }
			}
			modifier = {
				factor = 1.75
				trait = sturdy
			}
			character_event = { id = HFP.20610 days = 50 random = 50 } #Lose health
		}
		3 = {
			modifier = {
				factor = 0.5
				trait = greedy
			}
			character_event = { id = HFP.20611 days = 50 random = 50 } #become charitable, vassal opinion.
		}
		5 = {
			trigger = {
				is_ruler = yes
				NOR = {
					trait = stressed
					trait = depressed
					trait = wroth
				}
			}
			character_event = { id = HFP.20663 days = 50 random = 50 } #Become proud.
		}
		5 = {
			trigger = {
				NOT = {
					trait = wroth
				}
			}
			character_event = { id = HFP.20664 days = 50 random = 50 } #Become patient.
		}
		1 = {
			trigger = {
				NOR = {
					trait = stressed
					trait = depressed
					trait = wroth
				}
			}
			character_event = { id = HFP.20665 days = 50 random = 50 } #Become content.
		}
	}
}

this_post_weight_loss_flavor_effect = {
	random_list = {
		25 = { }
		5 = {
			trigger = {
				trait = stressed
			}
			character_event = { id = HFP.20607 days = 50 random = 50 } #Lose stressed
		}
		5 = {
			trigger = {
				trait = depressed
			}
			character_event = { id = HFP.20608 days = 50 random = 50 } #Lose depressed
		}
		2 = {
			modifier = {
				factor = 0.5
				check_variable = { which = physique_variable value = 20 }
			}
			modifier = {
				factor = 0.5
				NOT = { trait = feeble }
			}
			character_event = { id = HFP.20609 days = 50 random = 50 } #Gain health
		}
		2 = {
			modifier = {
				factor = 1.5
				check_variable = { which = physique_variable value = 20 }
			}
			modifier = {
				factor = 1.75
				trait = sturdy
			}
			character_event = { id = HFP.20610 days = 50 random = 50 } #Lose health
		}
		3 = {
			modifier = {
				factor = 0.5
				trait = greedy
			}
			character_event = { id = HFP.20611 days = 50 random = 50 } #become charitable, vassal opinion.
		}
		5 = {
			trigger = {
				is_ruler = yes
				NOR = {
					trait = stressed
					trait = depressed
					trait = wroth
				}
			}
			character_event = { id = HFP.20663 days = 50 random = 50 } #Become proud.
		}
		5 = {
			trigger = {
				NOT = {
					trait = wroth
				}
			}
			character_event = { id = HFP.20664 days = 50 random = 50 } #Become patient.
		}
		1 = {
			trigger = {
				NOR = {
					trait = stressed
					trait = depressed
					trait = wroth
				}
			}
			character_event = { id = HFP.20665 days = 50 random = 50 } #Become content.
		}
	}
}

# Referenced by Alternate Start religion feature generation
reset_religion_features_effect = {
	set_peace_piety_gain = 0
	set_pacifist = no
	set_convert_other_groups = 2
	set_convert_same_group = 2
	set_peace_prestige_loss = 0
	set_ai_aggression = 1
	set_unit_modifier = {}
	set_unit_home_modifier = {}
	set_hard_to_convert = no
	set_raised_vassal_opinion_loss = yes
	set_piety_loss_for_attacking_same_religion = no
	set_max_wives = 1
	set_max_consorts = 0
	set_feminist = no
	set_heir_designation = no
	set_short_reign_opinion_year_mult = -1000
	set_jizya_tax = no
	set_can_retire_to_monastery = no
	set_can_excommunicate = no
	set_can_grant_divorce = no
	set_can_grant_invasion_cb = no
	set_can_grant_claim = no
	set_can_call_crusade = no
	set_pc_marriage = no
	set_bs_marriage = no
	set_psc_marriage = yes
	set_cousin_marriage = yes
	set_seafaring = no
	set_allow_looting = no
	set_allow_rivermovement = no
	set_autocephaly = no
	set_pentarchy = no
	set_divine_blood = no
	set_uses_decadence = no
	set_can_have_antipopes = no
	set_priests_can_marry = no
	set_priests_can_inherit = yes
	set_ignores_defensive_attrition = no
	set_defensive_attrition = no
	clear_intermarry = no
	set_character_modifier = {}
	clear_intermarry = yes
	set_allows_matrilineal_marriage = yes
}

random_antagonizer_slander_roll_effect = {
	random_list = {
		75 = { #Nothing
			modifier = {
				factor = 0.75
				FROM = {
					attribute_diff = { character = ROOT attribute = intrigue  value = 4 }
				}
			}
			modifier = {
				factor = 0.75
				FROM = {
					attribute_diff = { character = ROOT attribute = intrigue  value = 6 }
				}
			}
			modifier = {
				factor = 0.5
				FROM = {
					attribute_diff = { character = ROOT attribute = intrigue  value = 8 }
				}
			}
			modifier = {
				factor = 0.5
				FROM = {
					attribute_diff = { character = ROOT attribute = intrigue  value = 10 }
				}
			}
		}
		25 = { #Bonus event
			modifier = {
				factor = 0.5
				NOR = {
					trait = stressed
					trait = depressed
				}
				opinion = { who = FROM value = 20 }
			}
			modifier = {
				factor = 0.1
				FROM = {
					has_character_flag = flag_antagonize_slander_generic
				}
			}
			modifier = {
				factor = 1.5
				FROM = {
					intrigue = 15
				}
			}
			modifier = {
				factor = 1.5
				FROM = {
					intrigue = 18
				}
			}
			modifier = {
				factor = 1.5
				FROM = {
					intrigue = 21
				}
			}
			modifier = {
				factor = 1.5
				FROM = {
					intrigue = 25
				}
			}
			modifier = {
				factor = 1.75
				FROM = {
					intrigue = 30
				}
			}
			random_antagonizer_slander_effect = yes
		}
	}
}
random_antagonizer_slander_effect = { #Chance of this effect firing is tied to the Antagonizer's intrigue.
	#Gain rival.
	#Rival of target becomes friend.
	#Prestige from antagonizing a higher tier ruler.
	#Appeased's Claimant moves to court.
	#Prestige loss.
	#Piety loss.
	#Sanity loss.
	#Evil Antagonized losing depressed.
	#Evil Antagonized losing Stressed.
	#Evil Antagonized gaining Diplomacy modifier (happy disposition).
	#Evil Antagonized gaining Intrigue.
	#Evil Antagonized gaining Deceitful.
	#Evil Antagonized gaining Patient.





	random_list = {
		35 = {
			trigger = {
				NOT = {
					persistent_event_target:antagonize_target = {
						opinion = {
							who = FROM
							value = 10
						}
					}
				}
			}
			modifier = {
				factor = 0
				FROM = {
					persistent_event_target:antagonize_target = {
						is_rival = FROM
					}
				}
			}
			modifier = {
				factor = 1.25
				FROM = {
					persistent_event_target:antagonize_target = {
						NOT = {
							opinion = {
								who = FROM
								value = -10
							}
						}
					}
				}
			}
			modifier = {
				factor = 1.5
				FROM = {
					persistent_event_target:antagonize_target = {
						NOT = {
							opinion = {
								who = FROM
								value = -30
							}
						}
					}
				}
			}
			modifier = {
				factor = 1.5
				FROM = {
					persistent_event_target:antagonize_target = {
						NOT = {
							opinion = {
								who = FROM
								value = -50
							}
						}
					}
				}
			}
			modifier = {
				factor = 1.75
				FROM = {
					persistent_event_target:antagonize_target = {
						NOT = {
							opinion = {
								who = FROM
								value = -70
							}
						}
					}
				}
			}
			FROM = { persistent_event_target:antagonize_target = { character_event = { id = HF.22030 days = 15 } } } #Antagonized gets the event.
		}
		25 = {
			modifier = {
				factor = 0
				NOT = {
					FROM = {
						persistent_event_target:antagonize_target = {
							any_realm_character = {
								age = 14
								NOR = {
									trait = incapable
									is_rival = PREVPREV
								}
								NOT = {
									opinion = {
										who = PREV
										value = -20
									}
								}
							}
						}
					}
				}
			}
			FROM = {
				persistent_event_target:antagonize_target = {
					random_realm_character = {
						limit = {
							age = 14
							NOR = {
								trait = incapable
								is_rival = PREVPREV
							}
							NOT = {
								opinion = {
									who = PREV
									value = -20
								}
							}
						}
						character_event = { id = HF.22032 days = 15 } #Third party notified.
					}
				}
			}
		}
		25 = {
			modifier = {
				factor = 0
				FROM = {
					persistent_event_target:antagonize_target = {
						lower_tier_than = FROM
					}
				}
			}
			modifier = {
				factor = 1.75
				FROM = {
					lower_tier_than = KING
					persistent_event_target:antagonize_target = {
						higher_tier_than = DUKE
					}
				}
			}
			FROM = { character_event = { id = HF.22035 days = 15 } } #Antagonizer gets the event.
		}
		5 = {
			FROM = { character_event = { id = HF.22042 days = 15 } } #Antagonizer gets the event. - Prestige loss for Antagonized.
		}
		5 = {
			FROM = { character_event = { id = HF.22044 days = 15 } } #Antagonizer gets the event. - Piety loss for Antagonized.
		}
		5 = {
			FROM = { character_event = { id = HF.22046 days = 15 } } #Antagonizer gets the event. - Opinion loss for Antagonized.
		}
		1 = {
			modifier = {
				factor = 0
				persistent_event_target:antagonize_target = {
					NOT = { trait = depressed }
				}
			}
			FROM = { character_event = { id =  HF.22048 days = 15 } } #Antagonizer gets the event. - Sanity loss for Depressed Antagonized.
		}
		25 = {
			modifier = {
				factor = 0
				NOT = {
					age = 14
					is_ruler = no
					any_claim = { holder_scope = { character = ROOT } }
					NOR = {
						any_spouse = { is_ruler = yes }
						host = { character = FROM }
						is_rival = FROM
						trait = incapable
						persistent_event_target:antagonize_target = { current_heir = { character = PREVPREV } }
					}
					NOT = {
						opinion = {
							who = ROOT
							value = -20
						}
					}
					opinion = {
						who = FROM
						value = 10
					}
				}
			}
			random_character = {
				limit = {
					age = 14
					is_ruler = no
					any_claim = { holder_scope = { character = ROOT } }
					NOR = {
						any_spouse = { is_ruler = yes }
						host = { character = FROM }
						is_rival = FROM
						trait = incapable
						persistent_event_target:antagonize_target = { current_heir = { character = PREVPREV } }
					}
					NOT = {
						opinion = {
							who = ROOT
							value = -20
						}
					}
					opinion = {
						who = FROM
						value = 10
					}
				}
				character_event = { id = HF.22036 days = 15 } #Claimant notified.
			}
		}
		5 = {
			trigger = {

				FROM = {
					OR = {
						trait = impaler
						trait = cruel
						trait = arbitrary
						trait = deceitful
						trait = envious
					}
				}
				FROM = { trait = depressed }
			}
			FROM = { character_event = { id = HF.22113 days = 15 } } #Evil Antagonized loses depressed.
		}
		5 = {
			trigger = {

				FROM = {
					OR = {
						trait = impaler
						trait = cruel
						trait = arbitrary
						trait = deceitful
						trait = envious
					}
				}
				FROM = { trait = stressed }
			}
			FROM = { character_event = { id = HF.22114 days = 15 } } #Evil Antagonized loses stressed.
		}
		5 = {
			trigger = {

				FROM = {
					OR = {
						trait = impaler
						trait = cruel
						trait = arbitrary
						trait = deceitful
						trait = envious
					}
					NOR = {
						trait = stressed
						trait = depressed
					}
				}
				FROM = { NOT = { has_character_modifier = antagonizer_good_mood } }
			}
			FROM = { character_event = { id = HF.22115 days = 15 } } #Evil Antagonized gains Diplomacy modifier.
		}
		1 = {
			trigger = {
				FROM = {
					OR = {
						trait = impaler
						trait = cruel
						trait = arbitrary
						trait = deceitful
						trait = envious
					}
				}
			}
			FROM = { character_event = { id = HF.22116 days = 15 } } #Evil Antagonized gains Intrigue.
		}
		3 = {
			trigger = {
				FROM = {
					OR = {
						trait = impaler
						trait = cruel
						trait = arbitrary
						trait = envious
					}
					NOT = {
						trait = deceitful
					}
				}
			}
			FROM = { character_event = { id = HF.22117 days = 15 } } #Evil Antagonized gains Deceitful/loses Honest.
		}
		5 = {
			trigger = {
				FROM = {
					OR = {
						trait = impaler
						trait = cruel
						trait = arbitrary
						trait = deceitful
						trait = envious
					}
					NOT = {
						trait = patient
					}
				}
				NOR = {
					trait = patient
					diplomacy = 12
				}
			}
			FROM = { character_event = { id = HF.22118 days = 15 } } #Evil Antagonized gains Patient/loses Wroth.
		}
	#	5 = {
	#		modifier = {
	#			factor = 0
	#			FROM = {
	#				any_claim = {
	#					holder_scope = {
	#						character = ROOT
	#					}
	#				}
	#			}
	#		}
	#		modifier = { #Only against dangerous Antagonize targets.
	#			factor = 0
	#			persistent_event_target:antagonize_target = {
	#				lower_tier_than = FROM
	#			}
	#		}
	#		modifier = { #Only against dangerous Antagonize targets.
	#			factor = 0.25
	#			persistent_event_target:antagonize_target = {
	#				prestige = 500
	#			}
	#		}
	#		modifier = { #Needs to be hated already. The Antagonizer should receive the claim only if the Antagonized is already mad at him and is a more powerful ruler.
	#			factor = 0
	#			persistent_event_target:antagonize_target = {
	#				opinion = {
	#					who = FROM
	#					value = 10
	#				}
	#			}
	#		}
	#		FROM = { character_event = { id = HF.22038 days = 15 } } #Antagonizer gets the claim.
	#	}
	}
}

select_and_save_fellow_society_member_effect = { #[Runs for ROOT]
	### Scripted triggers involved:
	# block_general_event_trigger	- NOTE, if you want to reuse this and allow children be selected, this blocks it

	# root_has_terrible_opinion_modifier_of_this_trigger	- To not select folks that have HATRED between them...
	# this_has_terrible_opinion_modifier_of_root_trigger

	# root_potentially_platonically_interested_in_this_trigger	- In the best case, selects characters that have shared POSITIVE experiences...
	# potentially_platonically_interested_in_root_trigger
	# current_scope_and_root_make_sense_as_friendlies_trigger

	random_society_member = { #Worst case scenario...
		limit = {
			same_society_as = ROOT
			NOT = { character = ROOT }
			prisoner = no
		}
		save_event_target_as = fellow_member
	}
	random_society_member = { #Second worst, etc...
		limit = {
			same_society_as = ROOT
			NOT = { character = ROOT }
			prisoner = no
		}
		save_event_target_as = fellow_member
	}
	random_society_member = {
		limit = {
			same_society_as = ROOT
			NOT = { character = ROOT }
			block_general_event_trigger = no
			root_has_terrible_opinion_modifier_of_this_trigger = no
		}
		save_event_target_as = fellow_member
	}
	random_society_member = {
		limit = {
			same_society_as = ROOT
			NOT = { character = ROOT }
			block_general_event_trigger = no
			this_has_terrible_opinion_modifier_of_root_trigger = no
		}
		save_event_target_as = fellow_member
	}
	random_society_member = {
		limit = {
			same_society_as = ROOT
			NOT = { character = ROOT }
			block_general_event_trigger = no
			root_has_terrible_opinion_modifier_of_this_trigger = no
			this_has_terrible_opinion_modifier_of_root_trigger = no
		}
		save_event_target_as = fellow_member
	}
	random_society_member = {
		limit = {
			same_society_as = ROOT
			NOT = { character = ROOT }
			block_general_event_trigger = no
			root_potentially_platonically_interested_in_this_trigger = yes
		}
		save_event_target_as = fellow_member
	}
	random_society_member = {
		limit = {
			same_society_as = ROOT
			NOT = { character = ROOT }
			block_general_event_trigger = no
			potentially_platonically_interested_in_root_trigger = yes
		}
		save_event_target_as = fellow_member
	}
	random_society_member = { #Best case scenario...
		limit = {
			same_society_as = ROOT
			NOT = { character = ROOT }
			block_general_event_trigger = no
			current_scope_and_root_make_sense_as_friendlies_trigger = yes
		}
		save_event_target_as = fellow_member
	}
}

fire_haruspicy_event_effect = {
	hidden_tooltip = { #Divination.
		if = {
			limit = {
				attacker = {
					has_religion_feature = religion_haruspicy
				}
			}
			attacker = {
				character_event = { id = HF.23005 }
			}
		}
		if = {
			limit = {
				defender = {
					has_religion_feature = religion_haruspicy
				}
			}
			defender = {
				character_event = { id = HF.23005 }
			}
		}
	}
}

remove_opinions_with_prison_reason_effect = {
	#Removes the specified opinion about "who" (PREV), from current scope
	#NOTE: If you add a new opinion with "prison_reason" to the game, add it here, too!
	remove_opinion = { modifier = opinion_dishonorable who = PREV }
	remove_opinion = { modifier = opinion_traitor who = PREV }
	remove_opinion = { modifier = opinion_rebel_traitor who = PREV }
	remove_opinion = { modifier = opinion_regicide_traitor who = PREV }
	remove_opinion = { modifier = attempted_murder_of_spouse who = PREV }
	remove_opinion = { modifier = attempted_murder_of_child who = PREV }
	remove_opinion = { modifier = attempted_murder_of_parent who = PREV }
	remove_opinion = { modifier = attempted_murder_of_sibling who = PREV }
	remove_opinion = { modifier = attempted_murder_of_vassal who = PREV }
	remove_opinion = { modifier = attempted_murder_of_spouse_vassal who = PREV }
	remove_opinion = { modifier = attempted_murder who = PREV }
	remove_opinion = { modifier = opinion_spouse_slayer who = PREV }
	remove_opinion = { modifier = opinion_murder_attempt who = PREV }
	remove_opinion = { modifier = opinion_killed_close_kin who = PREV }
	remove_opinion = { modifier = opinion_killed_father who = PREV }
	remove_opinion = { modifier = opinion_hajj_attempt_murder who = PREV }
	remove_opinion = { modifier = opinion_fatwa_target who = PREV }
	remove_opinion = { modifier = opinion_refused_order who = PREV }
	remove_opinion = { modifier = opinion_castrated_me who = PREV }
	remove_opinion = { modifier = opinion_blinded_me who = PREV }
	remove_opinion = { modifier = opinion_castrated_family who = PREV }
	remove_opinion = { modifier = opinion_castrated_close_kin who = PREV }
	remove_opinion = { modifier = opinion_blinded_family who = PREV }
	remove_opinion = { modifier = opinion_blinded_close_kin who = PREV }
	remove_opinion = { modifier = opinion_witch who = PREV }
	remove_opinion = { modifier = opinion_takfir who = PREV }
	remove_opinion = { modifier = opinion_attempted_abduction who = PREV }
	remove_opinion = { modifier = opinion_unfaithful_wife who = PREV }
	remove_opinion = { modifier = opinion_unfaithful_husband_crime who = PREV }
	remove_opinion = { modifier = opinion_cuckolded who = PREV }
	remove_opinion = { modifier = opinion_killed_lover who = PREV }
	remove_opinion = { modifier = opinion_charge_heresiarch who = PREV }
	remove_opinion = { modifier = opinion_charge_infidel who = PREV }
	remove_opinion = { modifier = opinion_charge_deviant who = PREV }
	remove_opinion = { modifier = opinion_charge_illegitimate who = PREV }
	remove_opinion = { modifier = opinion_charge_cultist who = PREV }
	remove_opinion = { modifier = opinion_charge_dw who = PREV }
	remove_opinion = { modifier = opinion_charge_traitor who = PREV }
	remove_opinion = { modifier = opinion_charge_slanderer who = PREV }
	remove_opinion = { modifier = abuse_of_office who = PREV }
	remove_opinion = { modifier = opinion_tortured_me who = PREV }
	remove_opinion = { modifier = opinion_tortured_family who = PREV }
	remove_opinion = { modifier = opinion_tortured_close_kin who = PREV }
	remove_opinion = { modifier = opinion_mutilated_me who = PREV }
	remove_opinion = { modifier = opinion_mutilated_family who = PREV }
	remove_opinion = { modifier = opinion_mutilated_close_kin who = PREV }
	remove_opinion = { modifier = opinion_thief who = PREV }
	remove_opinion = { modifier = opinion_outlawed_society who = PREV }
	remove_opinion = { modifier = opinion_accused_apostate who = PREV }
}



randomize_ABC_desc_flag_effect = {
	# Actually, this is not needed, but won't remove for fear of breaking something.
	# Instead, to randomize descs, simply define (in the event), multiple descs.

	# Example below:
	# desc = text_1
	# desc = text_2
	# desc = text_3

	clr_ABC_desc_flag_effect = yes
	random_list = {
		10 = { set_character_flag = desc_A }
		10 = { set_character_flag = desc_B }
		10 = { set_character_flag = desc_C }
	}
}
clr_ABC_desc_flag_effect = {
	clr_character_flag = desc_A
	clr_character_flag = desc_B
	clr_character_flag = desc_C
}

#Find someone to reference... (event_target:my_beloved)
# NOTE: might be platonic, children, etc
save_beloved_character_effect = {
	if = {
		limit = { #In case you have a spouse outside of your realm...
			is_married = yes
			any_spouse = {
				ROOT_possibly_romantically_interested_trigger = yes
				root_has_terrible_opinion_modifier_of_this_trigger = no
				is_landed = yes
			}
		}
		random_spouse = {
			limit = {
				ROOT_possibly_romantically_interested_trigger = yes
				root_has_terrible_opinion_modifier_of_this_trigger = no
				is_landed = yes
			}
			save_event_target_as = my_beloved
		}
	}
	else = { #In case you do not...
		any_courtier_or_vassal = {
			limit = {
				NOT = { character = event_target:enemy_commander }
				NOT = { character = event_target:enemy_liege }
			}
			score_value = { #Prioritizes selecting some kind of loved person...
				value = 1
				beloved_target_selection_score = yes
			}
			#Effect:
			save_event_target_as = my_beloved
		}
	}
}

child_of_destiny_journey_start_effect = {
	if = {
		limit = {
			has_global_flag = cod_test_values
		}
		character_event = { id = HF.210 days = 1 } # The journey begins... Test Value
	}
	else = {
		character_event = { id = HF.210 days = 200 random = 200 } # The journey begins...
	}
}

child_of_destiny_journey_resume_effect = {
	if = {
		limit = {
			has_global_flag = cod_test_values
		}
		character_event = { id = HF.210 days = 1 }  # Back to the journey tombola! Test Value
	}
	else = {
		character_event = { id = HF.210 days = 365 random = 500 } # Back to the journey tombola!
	}
}

pacifists_lose_piety_effect = {
	if = {
		limit = {
			pacifist = yes
		}
		piety = -20
		custom_tooltip = { text = pacifist_alt_tooltip }
	}
}

reset_flag_lifestyle_sway_event_effect = {
	clr_character_flag = lifestyle_event_successful
	clr_character_flag = lifestyle_event_unsuccessful
	clr_character_flag = sway_hunting
	clr_character_flag = sway_dueling
	clr_character_flag = sway_game
	clr_character_flag = sway_social
	clr_character_flag = sway_scholar
	clr_character_flag = sway_steward
	clr_character_flag = sway_torture
}

apply_cosmopolian_on_start_effect = {
	religion_authority = {
		modifier = cosmopolitan_religion
		years = 1000
	}
	any_playable_ruler = {
		limit = { NOT = { distance_from_realm = { who = ROOT value = 200 } } }
		add_intermarry = ROOT
		ROOT = { add_intermarry = PREV }
	}
	any_neighbor_independent_ruler = {
		add_intermarry = ROOT
		ROOT = { add_intermarry = PREV }
	}
}
apply_dogmatic_on_start_effect = {
	religion_authority = {
		modifier = dogmatic_religion
		years = 1000
	}
	remove_intermarry = triadic
	remove_intermarry = arcane
	remove_intermarry = rasallesian
	remove_intermarry = chessic
	remove_intermarry = mercantile
	remove_intermarry = inventive
	remove_intermarry = joyful
	remove_intermarry = lapal_faith
	remove_intermarry = calishite_faith
	remove_intermarry = chauntean_faith
	remove_intermarry = mulhorandi_faith
	remove_intermarry = untheric_faith
	remove_intermarry = halfling_pantheon
	remove_intermarry = solar
	remove_intermarry = deities_of_fury
	remove_intermarry = natural
	remove_intermarry = kossuth
	remove_intermarry = geomancy
	remove_intermarry = primordial
	remove_intermarry = tuigan_shamanism
	remove_intermarry = martial_faith
	remove_intermarry = uthgardt_faith
	remove_intermarry = dead_three
	remove_intermarry = shadow_gods
	remove_intermarry = ghaunadaur
	remove_intermarry = church_of_cyric
	remove_intermarry = abyssal_cult
	remove_intermarry = loviatar
	remove_intermarry = infernal
	remove_intermarry = scale_cult
	remove_intermarry = loviatar
	remove_intermarry = thasmudyanic
	remove_intermarry = ten_thousand_gods
	remove_intermarry = qisma
	remove_intermarry = pantheist_league
	remove_intermarry = adama
	remove_intermarry = muhjari
	remove_intermarry = kahin
	remove_intermarry = padhran
	remove_intermarry = the_path
	remove_intermarry = chung_tao
	remove_intermarry = nine_travelers
	remove_intermarry = elven_pantheon
	remove_intermarry = asathalfinare
	remove_intermarry = sylvan
	remove_intermarry = eilistraee
	remove_intermarry = lolth_cult
	remove_intermarry = vhaeraun
	remove_intermarry = kiaransalee
	remove_intermarry = dwarven_pantheon
	remove_intermarry = laduguer
	remove_intermarry = gnome_pantheon
	remove_intermarry = urdlen
	remove_intermarry = giant_pantheon
	remove_intermarry = vaprak
	remove_intermarry = goblin_pantheon
	remove_intermarry = orc_pantheon
	remove_intermarry = monster_pantheon
	remove_intermarry = faceless_god
	remove_intermarry = draconic_pantheon
	remove_intermarry = tiamat
	remove_intermarry = bahamut
	remove_intermarry = pagan
	# remove_intermarry = ubtao_reformed
	remove_intermarry = ubtao_worship
	remove_intermarry = ulutiuan_reformed
	remove_intermarry = ulutiuan
	remove_intermarry = earthmother_reformed
	remove_intermarry = earthmother
	remove_intermarry = nogari_reformed
	remove_intermarry = nogari
	remove_intermarry = toteteohuan_reformed
	remove_intermarry = toteteohuan
	remove_intermarry = yuir_reformed
	remove_intermarry = yuir
	remove_intermarry = jaziri_reformed
	remove_intermarry = jaziri
	remove_intermarry = faithless
	remove_intermarry = entropy
	remove_intermarry = blue_flame
	remove_intermarry = beholder_pantheon
	remove_intermarry = illithid_pantheon

	remove_intermarry = humanoid_group
	remove_intermarry = good_human_pantheon_group
	remove_intermarry = evil_human_pantheon_group
	remove_intermarry = qismaite_group
	remove_intermarry = karaturan_group
	remove_intermarry = elven_pantheon_group
	remove_intermarry = drow_pantheon
	remove_intermarry = dwarven_pantheon_group
	remove_intermarry = giant_pantheon_group
	remove_intermarry = monster_group
	remove_intermarry = draconic_group
	remove_intermarry = atheist_group
	remove_intermarry = aberration_group
}

spawn_debutante_effect = {
	if = {
		limit = { has_religion_feature = religion_matriarchal }
		create_character = {
			random_traits = yes
			dynasty = actually_culture
			culture = ROOT
			female = no
			age = 17
		}
	}
	if = {
		limit = { NOT = { has_religion_feature = religion_matriarchal } }
		create_character = {
			random_traits = yes
			dynasty = actually_culture
			culture = ROOT
			female = yes
			age = 17
		}
	}
	new_character = {
		hidden_tooltip = {
			random_list = { # Class assignment
				70 = {
					# No class
				}
				2 = {
					add_trait = rogue
				}
				2 = {
					add_trait = shadow
				}
				6 = {
					add_trait = fighter
				}
				2 = {
					add_trait = ranger
				}
				2 = {
					add_trait = class_monk
				}
				2 = {
					add_trait = barbarian
				}
				2 = {
					add_trait = cleric
				}
				2 = {
					add_trait = paladin
				}
				2 = {
					add_trait = druid
				}
				2 = {
					add_trait = wizard
				}
				2 = {
					add_trait = bard
				}
				2 = {
					add_trait = sorcerer
				}
				2 = {
					add_trait = warlock
				}
			}
			if = {
				limit = {
					has_religion_feature = religion_no_leader
				}
				random_list = {
					5 = {
						add_trait = pagan_branch_1
					}
					25 = {
						add_trait = pagan_branch_2
					}
					25 = {
						add_trait = pagan_branch_3
					}
					25 = {
						add_trait = pagan_branch_4
					}
				}
			}
		}
		set_character_flag = debutante
		save_event_target_as = invited_character
	}
}

transfer_crown_on_abdication_effect = {
	#if = {
		#limit = {
			#has_landed_title = e_hre
			#any_artifact = { artifact_type = crown_hre }
		#}
			#current_heir = { save_event_target_as = crown_hre_heir }
			#any_artifact = {
				#limit = { artifact_type = crown_hre }
				#transfer_artifact = {
					#from = PREV
					#to = event_target:crown_hre_heir
				#}
			#}
	#}
	#Now transfer all other remaining artifacts to the player_heir, who may or may not be the current_heir.
	player_heir = { save_event_target_as = scoped_player_heir }
	any_artifact = {
		#limit = {
			#NOR = {
				#artifact_type = crown_hre
			#}
		#}
		transfer_artifact = {
			from = PREV
			to = event_target:scoped_player_heir
		}
	}
}

# Referenced by the "button_rename" button in the character view
rename_character_effect = {
	prompt_name = {
		player = FROM
		type = RENAME_CHARACTER_MESSAGE
	}
}

warrior_lodge_pay_dice_debt_effect = {
	if = {
		limit = { has_character_flag = flag_betting_money_1000 }
		wealth = -1000
		if = {
			limit = { event_target:random_society_winner = { is_alive = yes } }
			event_target:random_society_winner = { wealth = 1000 }
		}
	}
	if = {
		limit = { has_character_flag = flag_betting_money_500 }
		wealth = -500
		if = {
			limit = { event_target:random_society_winner = { is_alive = yes } }
			event_target:random_society_winner = { wealth = 500 }
		}
	}
	if = {
		limit = { has_character_flag = flag_betting_money_250 }
		wealth = -250
		if = {
			limit = { event_target:random_society_winner = { is_alive = yes } }
			event_target:random_society_winner = { wealth = 250 }
		}
	}
	if = {
		limit = { has_character_flag = flag_betting_money_200 }
		wealth = -200
		if = {
			limit = { event_target:random_society_winner = { is_alive = yes } }
			event_target:random_society_winner = { wealth = 200 }
		}
	}
	if = {
		limit = { has_character_flag = flag_betting_money_100 }
		wealth = -100
		if = {
			limit = { event_target:random_society_winner = { is_alive = yes } }
			event_target:random_society_winner = { wealth = 100 }
		}
	}
	if = {
		limit = { has_character_flag = flag_betting_money_50 }
		wealth = -50
		if = {
			limit = { event_target:random_society_winner = { is_alive = yes } }
			event_target:random_society_winner = { wealth = 50 }
		}
	}
	if = {
		limit = { has_character_flag = flag_betting_money_25 }
		wealth = -25
		if = {
			limit = { event_target:random_society_winner = { is_alive = yes } }
			event_target:random_society_winner = { wealth = 25 }
		}
	}
	if = {
		limit = { has_character_flag = flag_betting_money_20 }
		wealth = -20
		if = {
			limit = { event_target:random_society_winner = { is_alive = yes } }
			event_target:random_society_winner = { wealth = 20 }
		}
	}
	if = {
		limit = { has_character_flag = flag_betting_money_10 }
		wealth = -10
		if = {
			limit = { event_target:random_society_winner = { is_alive = yes } }
			event_target:random_society_winner = { wealth = 10 }
		}
	}
}

warrior_lodge_get_dice_bet_effect = {
	if = {
		limit = { has_character_flag = flag_betting_money_1000 }
		wealth = 1000
	}
	if = {
		limit = { has_character_flag = flag_betting_money_500 }
		wealth = 500
	}
	if = {
		limit = { has_character_flag = flag_betting_money_250 }
		wealth = 250
	}
	if = {
		limit = { has_character_flag = flag_betting_money_200 }
		wealth = 200
	}
	if = {
		limit = { has_character_flag = flag_betting_money_100 }
		wealth = 100
	}
	if = {
		limit = { has_character_flag = flag_betting_money_50 }
		wealth = 50
	}
	if = {
		limit = { has_character_flag = flag_betting_money_25 }
		wealth = 25
	}
	if = {
		limit = { has_character_flag = flag_betting_money_20 }
		wealth = 20
	}
	if = {
		limit = { has_character_flag = flag_betting_money_10 }
		wealth = 10
	}
}

warrior_lodge_double_dice_bet_effect = {
	if = {
		limit = { has_character_flag = flag_betting_money_500 }
		clr_character_flag = flag_betting_money_500
		set_character_flag = flag_betting_money_1000
		custom_tooltip = { text = tooltip_betting_1000_gold }
	}
	else_if = {
		limit = { has_character_flag = flag_betting_money_250 }
		clr_character_flag = flag_betting_money_250
		set_character_flag = flag_betting_money_500
		custom_tooltip = { text = tooltip_betting_500_gold }
	}
	else_if = {
		limit = { has_character_flag = flag_betting_money_100 }
		clr_character_flag = flag_betting_money_100
		set_character_flag = flag_betting_money_200
		custom_tooltip = { text = tooltip_betting_200_gold }
	}
	else_if = {
		limit = { has_character_flag = flag_betting_money_50 }
		clr_character_flag = flag_betting_money_50
		set_character_flag = flag_betting_money_100
		custom_tooltip = { text = tooltip_betting_100_gold }
	}
	else_if = {
		limit = { has_character_flag = flag_betting_money_25 }
		clr_character_flag = flag_betting_money_25
		set_character_flag = flag_betting_money_50
		custom_tooltip = { text = tooltip_betting_50_gold }
	}
	else_if = {
		limit = { has_character_flag = flag_betting_money_10 }
		clr_character_flag = flag_betting_money_10
		set_character_flag = flag_betting_money_20
		custom_tooltip = { text = tooltip_betting_20_gold }
	}
}
warrior_lodge_dice_game_cleanup_effect = {
	clr_character_flag = cheat_fake_die
	clr_character_flag = cheat_bump_table
	clr_character_flag = won_die_roll
	# clr_character_flag = flag_betting_money_1000
	# clr_character_flag = flag_betting_money_500
	# clr_character_flag = flag_betting_money_250
	# clr_character_flag = flag_betting_money_200
	# clr_character_flag = flag_betting_money_100
	# clr_character_flag = flag_betting_money_50
	# clr_character_flag = flag_betting_money_25
	# clr_character_flag = flag_betting_money_20
	# clr_character_flag = flag_betting_money_10
	clr_character_flag = flag_betting_on_krita
	clr_character_flag = flag_betting_on_treta
	clr_character_flag = flag_betting_on_dwapara
	clr_character_flag = flag_betting_on_kali
	clr_character_flag = flag_warrior_lodge_die_is_krita
	clr_character_flag = flag_warrior_lodge_die_is_treta
	clr_character_flag = flag_warrior_lodge_die_is_dwapara
	clr_character_flag = flag_warrior_lodge_die_is_kali
}

this_is_becoming_grand_mistress_effect = {
	custom_tooltip = {
		text = tooltip_becoming_grand_mistress
		hidden_tooltip = { change_variable = { which = becoming_grand_mistress value = 2 } }
	}
}
this_is_becoming_iron_matron_effect = {
	custom_tooltip = {
		text = tooltip_becoming_iron_matron
		hidden_tooltip = { change_variable = { which = becoming_iron_matron value = 2 } }
	}
}
this_is_becoming_virago_effect = {
	custom_tooltip = {
		text = tooltip_becoming_virago
		hidden_tooltip = { change_variable = { which = becoming_virago value = 2 } }
	}
}

this_is_becoming_atoner_effect = {
	custom_tooltip = {
		text = tooltip_becoming_atoner
		hidden_tooltip = { change_variable = { which = becoming_atoner value = 2 } }
	}
}
this_is_becoming_manservant_effect = {
	custom_tooltip = {
		text = tooltip_becoming_manservant
		hidden_tooltip = { change_variable = { which = becoming_manservant value = 2 } }
	}
}
this_is_becoming_stud_effect = {
	custom_tooltip = {
		text = tooltip_becoming_stud
		hidden_tooltip = { change_variable = { which = becoming_stud value = 2 } }
	}
}

this_is_becoming_grand_paramour_effect = {
	custom_tooltip = {
		text = tooltip_becoming_grand_paramour
		hidden_tooltip = { change_variable = { which = becoming_grand_paramour value = 2 } }
	}
}
this_is_becoming_judicator_effect = {
	custom_tooltip = {
		text = tooltip_becoming_judicator
		hidden_tooltip = { change_variable = { which = becoming_judicator value = 2 } }
	}
}
this_is_becoming_subjugator_effect = {
	custom_tooltip = {
		text = tooltip_becoming_subjugator
		hidden_tooltip = { change_variable = { which = becoming_subjugator value = 2 } }
	}
}

this_is_becoming_prim_effect = {
	custom_tooltip = {
		text = tooltip_becoming_prim
		hidden_tooltip = { change_variable = { which = becoming_prim value = 2 } }
	}
}
this_is_becoming_doll_effect = {
	custom_tooltip = {
		text = tooltip_becoming_doll
		hidden_tooltip = { change_variable = { which = becoming_doll value = 2 } }
	}
}
this_is_becoming_breeder_effect = {
	custom_tooltip = {
		text = tooltip_becoming_breeder
		hidden_tooltip = { change_variable = { which = becoming_breeder value = 2 } }
	}
}
add_lots_thralls_capital_effect = { #MUST be used in a province scope.
	if = {
		limit = {
			NOR = {
				has_province_modifier = capital_thrall_workers_01
				has_province_modifier = capital_thrall_workers_02
				has_province_modifier = capital_thrall_workers_03
				has_province_modifier = capital_thrall_workers_04
				has_province_modifier = capital_thrall_workers_05
				has_province_modifier = capital_thrall_workers_06
			}
		}
		hidden_tooltip = {
			remove_province_modifier = capital_thrall_workers_01
			remove_province_modifier = capital_thrall_workers_02
			remove_province_modifier = capital_thrall_workers_03
			remove_province_modifier = capital_thrall_workers_04
			remove_province_modifier = capital_thrall_workers_05
			remove_province_modifier = capital_thrall_workers_06
		}
		add_province_modifier = { modifier = capital_thrall_workers_03 years = 5 }
	}
	else_if = {
		limit = {
			has_province_modifier = capital_thrall_workers_01
		}
		hidden_tooltip = {
			remove_province_modifier = capital_thrall_workers_01
			remove_province_modifier = capital_thrall_workers_02
			remove_province_modifier = capital_thrall_workers_03
			remove_province_modifier = capital_thrall_workers_04
			remove_province_modifier = capital_thrall_workers_05
			remove_province_modifier = capital_thrall_workers_06
		}
		add_province_modifier = { modifier = capital_thrall_workers_04 years = 5 }
	}
	else_if = {
		limit = {
			has_province_modifier = capital_thrall_workers_02
		}
		hidden_tooltip = {
			remove_province_modifier = capital_thrall_workers_01
			remove_province_modifier = capital_thrall_workers_02
			remove_province_modifier = capital_thrall_workers_03
			remove_province_modifier = capital_thrall_workers_04
			remove_province_modifier = capital_thrall_workers_05
			remove_province_modifier = capital_thrall_workers_06
		}
		add_province_modifier = { modifier = capital_thrall_workers_05 years = 5 }
	}
	else_if = {
		limit = {
			OR = {
				has_province_modifier = capital_thrall_workers_03
				has_province_modifier = capital_thrall_workers_04
				has_province_modifier = capital_thrall_workers_05
				has_province_modifier = capital_thrall_workers_06
			}
		}
		hidden_tooltip = {
			remove_province_modifier = capital_thrall_workers_01
			remove_province_modifier = capital_thrall_workers_02
			remove_province_modifier = capital_thrall_workers_03
			remove_province_modifier = capital_thrall_workers_04
			remove_province_modifier = capital_thrall_workers_05
			remove_province_modifier = capital_thrall_workers_06
		}
		add_province_modifier = { modifier = capital_thrall_workers_06 years = 5 }
	}
}

add_some_thralls_capital_effect = { #MUST be used in a province scope.
	if = {
		limit = {
			NOR = {
				has_province_modifier = capital_thrall_workers_01
				has_province_modifier = capital_thrall_workers_02
				has_province_modifier = capital_thrall_workers_03
				has_province_modifier = capital_thrall_workers_04
				has_province_modifier = capital_thrall_workers_05
				has_province_modifier = capital_thrall_workers_06
			}
		}
		hidden_tooltip = {
			remove_province_modifier = capital_thrall_workers_01
			remove_province_modifier = capital_thrall_workers_02
			remove_province_modifier = capital_thrall_workers_03
			remove_province_modifier = capital_thrall_workers_04
			remove_province_modifier = capital_thrall_workers_05
			remove_province_modifier = capital_thrall_workers_06
		}
		add_province_modifier = { modifier = capital_thrall_workers_02 years = 5 }
	}
	else_if = {
		limit = {
			has_province_modifier = capital_thrall_workers_01
		}
		hidden_tooltip = {
			remove_province_modifier = capital_thrall_workers_01
			remove_province_modifier = capital_thrall_workers_02
			remove_province_modifier = capital_thrall_workers_03
			remove_province_modifier = capital_thrall_workers_04
			remove_province_modifier = capital_thrall_workers_05
			remove_province_modifier = capital_thrall_workers_06
		}
		add_province_modifier = { modifier = capital_thrall_workers_03 years = 5 }
	}
	else_if = {
		limit = {
			has_province_modifier = capital_thrall_workers_02
		}
		hidden_tooltip = {
			remove_province_modifier = capital_thrall_workers_01
			remove_province_modifier = capital_thrall_workers_02
			remove_province_modifier = capital_thrall_workers_03
			remove_province_modifier = capital_thrall_workers_04
			remove_province_modifier = capital_thrall_workers_05
			remove_province_modifier = capital_thrall_workers_06
		}
		add_province_modifier = { modifier = capital_thrall_workers_04 years = 5 }
	}
	else_if = {
		limit = {
			has_province_modifier = capital_thrall_workers_03
		}
		hidden_tooltip = {
			remove_province_modifier = capital_thrall_workers_01
			remove_province_modifier = capital_thrall_workers_02
			remove_province_modifier = capital_thrall_workers_03
			remove_province_modifier = capital_thrall_workers_04
			remove_province_modifier = capital_thrall_workers_05
			remove_province_modifier = capital_thrall_workers_06
		}
		add_province_modifier = { modifier = capital_thrall_workers_05 years = 5 }
	}
	else_if = {
		limit = {
			OR = {
				has_province_modifier = capital_thrall_workers_04
				has_province_modifier = capital_thrall_workers_05
				has_province_modifier = capital_thrall_workers_06
			}
		}
		hidden_tooltip = {
			remove_province_modifier = capital_thrall_workers_01
			remove_province_modifier = capital_thrall_workers_02
			remove_province_modifier = capital_thrall_workers_03
			remove_province_modifier = capital_thrall_workers_04
			remove_province_modifier = capital_thrall_workers_05
			remove_province_modifier = capital_thrall_workers_06
		}
		add_province_modifier = { modifier = capital_thrall_workers_06 years = 5 }
	}
}

add_few_thralls_capital_effect = { #MUST be used in a province scope.
	if = {
		limit = {
			NOR = {
				has_province_modifier = capital_thrall_workers_01
				has_province_modifier = capital_thrall_workers_02
				has_province_modifier = capital_thrall_workers_03
				has_province_modifier = capital_thrall_workers_04
				has_province_modifier = capital_thrall_workers_05
				has_province_modifier = capital_thrall_workers_06
			}
		}
		hidden_tooltip = {
			remove_province_modifier = capital_thrall_workers_01
			remove_province_modifier = capital_thrall_workers_02
			remove_province_modifier = capital_thrall_workers_03
			remove_province_modifier = capital_thrall_workers_04
			remove_province_modifier = capital_thrall_workers_05
			remove_province_modifier = capital_thrall_workers_06
		}
		add_province_modifier = { modifier = capital_thrall_workers_01 years = 5 }
	}
	else_if = {
		limit = {
			has_province_modifier = capital_thrall_workers_01
		}
		hidden_tooltip = {
			remove_province_modifier = capital_thrall_workers_01
			remove_province_modifier = capital_thrall_workers_02
			remove_province_modifier = capital_thrall_workers_03
			remove_province_modifier = capital_thrall_workers_04
			remove_province_modifier = capital_thrall_workers_05
			remove_province_modifier = capital_thrall_workers_06
		}
		add_province_modifier = { modifier = capital_thrall_workers_02 years = 5 }
	}
	else_if = {
		limit = {
			has_province_modifier = capital_thrall_workers_02
		}
		hidden_tooltip = {
			remove_province_modifier = capital_thrall_workers_01
			remove_province_modifier = capital_thrall_workers_02
			remove_province_modifier = capital_thrall_workers_03
			remove_province_modifier = capital_thrall_workers_04
			remove_province_modifier = capital_thrall_workers_05
			remove_province_modifier = capital_thrall_workers_06
		}
		add_province_modifier = { modifier = capital_thrall_workers_03 years = 5 }
	}
	else_if = {
		limit = {
			has_province_modifier = capital_thrall_workers_03
		}
		hidden_tooltip = {
			remove_province_modifier = capital_thrall_workers_01
			remove_province_modifier = capital_thrall_workers_02
			remove_province_modifier = capital_thrall_workers_03
			remove_province_modifier = capital_thrall_workers_04
			remove_province_modifier = capital_thrall_workers_05
			remove_province_modifier = capital_thrall_workers_06
		}
		add_province_modifier = { modifier = capital_thrall_workers_04 years = 5 }
	}
	else_if = {
		limit = {
			has_province_modifier = capital_thrall_workers_04
		}
		hidden_tooltip = {
			remove_province_modifier = capital_thrall_workers_01
			remove_province_modifier = capital_thrall_workers_02
			remove_province_modifier = capital_thrall_workers_03
			remove_province_modifier = capital_thrall_workers_04
			remove_province_modifier = capital_thrall_workers_05
			remove_province_modifier = capital_thrall_workers_06
		}
		add_province_modifier = { modifier = capital_thrall_workers_05 years = 5 }
	}
	else_if = {
		limit = {
			has_province_modifier = capital_thrall_workers_05
		}
		hidden_tooltip = {
			remove_province_modifier = capital_thrall_workers_01
			remove_province_modifier = capital_thrall_workers_02
			remove_province_modifier = capital_thrall_workers_03
			remove_province_modifier = capital_thrall_workers_04
			remove_province_modifier = capital_thrall_workers_05
			remove_province_modifier = capital_thrall_workers_06
		}
		add_province_modifier = { modifier = capital_thrall_workers_06 years = 5 }
	}
	else_if = {
		limit = {
			has_province_modifier = capital_thrall_workers_06
		}
		hidden_tooltip = {
			remove_province_modifier = capital_thrall_workers_01
			remove_province_modifier = capital_thrall_workers_02
			remove_province_modifier = capital_thrall_workers_03
			remove_province_modifier = capital_thrall_workers_04
			remove_province_modifier = capital_thrall_workers_05
			remove_province_modifier = capital_thrall_workers_06
		}
		add_province_modifier = { modifier = capital_thrall_workers_06 years = 5 }
	}
}


WL_ritual_hunt_cleanup_effect = {
	clr_character_flag = do_not_disturb
	hidden_tooltip = { set_variable = { which = wl_ritual_hunting value = 0 } }

	clr_character_flag = flag_hunting_wolf_norse
	clr_character_flag = flag_hunting_wolf_baltic
	clr_character_flag = flag_hunting_wolf_hellenic

	clr_character_flag = flag_hunting_eagle_slavic
	clr_character_flag = flag_hunting_eagle_tengri
	clr_character_flag = flag_hunting_eagle_bon

	clr_character_flag = flag_hunting_bear_finnish

	clr_character_flag = flag_hunting_lion_west_african
	clr_character_flag = flag_hunting_lion_zun
}

WL_ritual_hunt_flavor_events_effect = {
	hidden_tooltip = {
		#Flavor events: (increasing/decreasing hunt variable)
		## Character is about to fall/drown/random. (might result in Friendship/Rivalry/Love)
		## Co-hunter is about to fall/drown/random. (might result in Friendship/Rivalry/Love)
		## Characters looking for tracks. (intrigue) - paranoid
		## Characters need to examine carcass killed by target. (martial) - cruel
		## Characters reflect upon their target. (learning) - scholar
		## Characters find hermit, ask info on target. (diplomacy) - charitable
		## Characters need to interpret old map and pathways. (stewardship) - administrator

		## Characters see a bad omen. (low piety triggers) - theologian
		## Characters see a good omen. (high piety triggers) - theologian

		## Lunatic/Possessed character goes on a Wild Hunt and kills partner.

		random_list = {
			15 = { #Character is in trouble.
				trigger = { event_target:scoped_WL_co_hunter = { is_alive = yes } }
				modifier = {
					factor = 1.5
					trait = craven
				}
				modifier = {
					factor = 1.5
					trait = dull
				}
				modifier = {
					factor = 1.5
					trait = slow
				}
				modifier = {
					factor = 1.5
					trait = imbecile
				}
				modifier = {
					factor = 1.5
					trait = inbred
				}
				modifier = {
					factor = 1.5
					trait = slothful
				}
				character_event = { id = HF.25603 days = 10 random = 5 }
			}
			15 = { #Co-hunter is in trouble.
				trigger = { event_target:scoped_WL_co_hunter = { is_alive = yes } }
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { trait = craven }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { trait = dull }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { trait = slow }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { trait = imbecile }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { trait = inbred }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { trait = slothful }
				}
				character_event = { id = HF.25606 days = 10 random = 5 }
			}
			25 = { #Characters looking for tracks.
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { intrigue = 10 }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { intrigue = 14 }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { intrigue = 18 }
				}
				character_event = { id = HF.25608 days = 10 random = 5 }
			}
			25 = { #Characters need to examine carcass.
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { martial = 10 }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { martial = 14 }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { martial = 18 }
				}
				character_event = { id = HF.25609 days = 10 random = 5 }

			}
			25 = { #Characters reflect upon target.
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { learning = 10 }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { learning = 14 }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { learning = 18 }
				}
				character_event = { id = HF.25610 days = 10 random = 5 }

			}
			25 = { #Characters persuade hermit for directions.
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { diplomacy = 10 }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { diplomacy = 14 }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { diplomacy = 18 }
				}
				character_event = { id = HF.25611 days = 10 random = 5 }

			}
			25 = { #Characters need to interpret old map.
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { stewardship = 10 }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { stewardship = 14 }
				}
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { stewardship = 18 }
				}
				modifier = {
					factor = 1.5
					has_character_flag = flag_picked_ritual_co_hunter_smart
				}
				character_event = { id = HF.25612 days = 10 random = 5 }

			}
			25 = { #Characters see bad omen.
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { learning = 10 }
				}
				modifier = {
					factor = 1.5
					NOT = { piety = 50 }
				}
				modifier = {
					factor = 1.5
					NOT = { piety = 100 }
				}
				modifier = {
					factor = 1.5
					NOT = { piety = 150 }
				}
				character_event = { id = HF.25613 days = 10 random = 5 }
			}
			5 = { #Characters see good omen.
				modifier = {
					factor = 1.5
					event_target:scoped_WL_co_hunter = { learning = 10 }
				}
				modifier = {
					factor = 1.5
					piety = 250
				}
				modifier = {
					factor = 1.5
					piety = 350
				}
				modifier = {
					factor = 1.5
					piety = 450
				}
				modifier = {
					factor = 1.5
					piety = 550
				}
				character_event = { id = HF.25614 days = 10 random = 5 }

			}

			100 = {  #Lunatic/Possessed ruler starts a Wild Hunt.
				trigger = {
					OR = {
						trait = possessed
						trait = lunatic
						AND = {
							has_character_modifier = lycanthropy
							OR = {
								has_character_flag = flag_hunting_wolf_norse
								has_character_flag = flag_hunting_wolf_baltic
								has_character_flag = flag_hunting_wolf_hellenic
							}
						}
					}
					event_target:scoped_WL_co_hunter = { is_alive = yes }
				}
				character_event = { id = HF.25615 days = 10 random = 5 }
			}
		}
	}
}

stable_attribute_improvement_effect = {
	hidden_tooltip = { #Chance of Education trait improvement or burnout case.
		if = {
			limit = {
				event_target:scoped_improvement_target = {
					has_character_flag = flag_training_diplomacy_attribute
				}
			}
			event_target:scoped_improvement_target = {
				random_list = {
					20 = { #Education improvement.
						trigger = { #Education Improvement only unlocked by synergy.
							OR = {
								has_religion_feature = religion_meritocratic
								has_religion_feature = religion_matriarchal
								has_religion_feature = religion_patriarchal
								has_religion_feature = religion_feature_ulutiuan
								has_religion_feature = religion_feature_goblin_good
							}
							OR = {
								trait = naive_appeaser
								trait = underhanded_rogue
								trait = charismatic_negotiator
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								NOT = { character = event_target:scoped_improvement_target }
								attribute_diff = { attribute = diplomacy character = event_target:scoped_improvement_target value = 3 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								NOT = { character = event_target:scoped_improvement_target }
								attribute_diff = { attribute = diplomacy character = event_target:scoped_improvement_target value = 6 }
							}
						}
						modifier = {
							factor = 1.75
							event_target:scoped_improvement_ruler = {
								NOT = { character = event_target:scoped_improvement_target }
								attribute_diff = { attribute = diplomacy character = event_target:scoped_improvement_target value = 9 }
							}
						}
						character_event = { id = HF.23761 days = 15 random = 15 }
					}
					20 = { #Burnout
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 1 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 2 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 3 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 4 }
							}
						}
						modifier = {
							factor = 1.75
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 5 }
							}
						}
						modifier = {
							factor = 2
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 8 }
							}
						}
						modifier = {
							factor = 2
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 12 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								trait = slothful
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								trait = stressed
							}
						}
						modifier = {
							factor = 1.75
							event_target:scoped_improvement_ruler = {
								trait = depressed
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								is_ill = yes
							}
						}
						modifier = {
							factor = 0.75
							event_target:scoped_improvement_ruler = {
								trait = diligent
							}
						}
						character_event = { id = HF.23762 days = 15 random = 15 }
					}
					80 = { #Nothing.
					}
				}
			}
		}
		if = {
			limit = {
				event_target:scoped_improvement_target = {
					OR = {
						has_character_flag = flag_training_martial_attribute
						has_character_flag = flag_training_combat_rating
					}
				}
			}
			event_target:scoped_improvement_target = {
				random_list = {
					20 = { #Education improvement.
						trigger = { #Education Improvement only unlocked by synergy.
							OR = {
								has_religion_feature = religion_meritocratic
								has_religion_feature = religion_matriarchal
								has_religion_feature = religion_patriarchal
								has_religion_feature = religion_feature_ulutiuan
								has_religion_feature = religion_feature_goblin_good
							}
							OR = {
								trait = misguided_warrior
								trait = tough_soldier
								trait = skilled_tactician
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								NOT = { character = event_target:scoped_improvement_target }
								attribute_diff = { attribute = martial character = event_target:scoped_improvement_target value = 3 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								NOT = { character = event_target:scoped_improvement_target }
								attribute_diff = { attribute = martial character = event_target:scoped_improvement_target value = 6 }
							}
						}
						modifier = {
							factor = 1.75
							event_target:scoped_improvement_ruler = {
								NOT = { character = event_target:scoped_improvement_target }
								attribute_diff = { attribute = martial character = event_target:scoped_improvement_target value = 9 }
							}
						}
						character_event = { id = HF.23761 days = 15 random = 15 }
					}
					20 = { #Burnout
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 1 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 2 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 3 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 4 }
							}
						}
						modifier = {
							factor = 1.75
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 5 }
							}
						}
						modifier = {
							factor = 2
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 8 }
							}
						}
						modifier = {
							factor = 2
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 12 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								trait = slothful
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								trait = stressed
							}
						}
						modifier = {
							factor = 1.75
							event_target:scoped_improvement_ruler = {
								trait = depressed
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								is_ill = yes
							}
						}
						modifier = {
							factor = 0.75
							event_target:scoped_improvement_ruler = {
								trait = diligent
							}
						}
						modifier = {
							factor = 1.25
							event_target:scoped_improvement_ruler = {
								age = 30
							}
						}
						modifier = {
							factor = 1.25
							event_target:scoped_improvement_ruler = {
								age = 35
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								age = 40
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								age = 45
							}
						}
						modifier = {
							factor = 1.75
							event_target:scoped_improvement_ruler = {
								age = 50
							}
						}
						modifier = {
							factor = 1.25
							event_target:scoped_improvement_ruler = {
								trait = slow
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								trait = imbecile
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								trait = inbred
							}
						}
						modifier = {
							factor = 1.25
							event_target:scoped_improvement_ruler = {
								trait = dull
							}
						}
						modifier = {
							factor = 0.85
							event_target:scoped_improvement_ruler = {
								trait = shrewd
							}
						}
						modifier = {
							factor = 0.85
							event_target:scoped_improvement_ruler = {
								trait = quick
							}
						}
						modifier = {
							factor = 0.75
							event_target:scoped_improvement_ruler = {
								trait = genius
							}
						}
						character_event = { id = HF.23762 days = 15 random = 15 }
					}
					80 = { #Nothing.
					}
				}
			}
		}
		if = {
			limit = {
				event_target:scoped_improvement_target = {
					has_character_flag = flag_training_stewardship_attribute
				}
			}
			event_target:scoped_improvement_target = {
				random_list = {
					20 = { #Education improvement.
						trigger = { #Education Improvement only unlocked by synergy.
							OR = {
								has_religion_feature = religion_meritocratic
								has_religion_feature = religion_matriarchal
								has_religion_feature = religion_patriarchal
								has_religion_feature = religion_feature_ulutiuan
								has_religion_feature = religion_feature_goblin_good
							}
							OR = {
								trait = indulgent_wastrel
								trait = thrifty_clerk
								trait = fortune_builder
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								NOT = { character = event_target:scoped_improvement_target }
								attribute_diff = { attribute = stewardship character = event_target:scoped_improvement_target value = 3 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								NOT = { character = event_target:scoped_improvement_target }
								attribute_diff = { attribute = stewardship character = event_target:scoped_improvement_target value = 6 }
							}
						}
						modifier = {
							factor = 1.75
							event_target:scoped_improvement_ruler = {
								NOT = { character = event_target:scoped_improvement_target }
								attribute_diff = { attribute = stewardship character = event_target:scoped_improvement_target value = 9 }
							}
						}
						character_event = { id = HF.23761 days = 15 random = 15 }
					}
					20 = { #Burnout
						trigger = {
							event_target:scoped_improvement_ruler = { #Never first time.
								check_variable = { which = burnout_count value = 1 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 2 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 3 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 4 }
							}
						}
						modifier = {
							factor = 1.75
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 5 }
							}
						}
						modifier = {
							factor = 2
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 8 }
							}
						}
						modifier = {
							factor = 2
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 12 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								trait = slothful
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								trait = stressed
							}
						}
						modifier = {
							factor = 1.75
							event_target:scoped_improvement_ruler = {
								trait = depressed
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								is_ill = yes
							}
						}
						modifier = {
							factor = 0.75
							event_target:scoped_improvement_ruler = {
								trait = diligent
							}
						}
						modifier = {
							factor = 1.25
							event_target:scoped_improvement_ruler = {
								age = 30
							}
						}
						modifier = {
							factor = 1.25
							event_target:scoped_improvement_ruler = {
								age = 35
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								age = 40
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								age = 45
							}
						}
						modifier = {
							factor = 1.75
							event_target:scoped_improvement_ruler = {
								age = 50
							}
						}
						modifier = {
							factor = 1.25
							event_target:scoped_improvement_ruler = {
								trait = slow
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								trait = imbecile
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								trait = inbred
							}
						}
						modifier = {
							factor = 1.25
							event_target:scoped_improvement_ruler = {
								trait = dull
							}
						}
						modifier = {
							factor = 0.85
							event_target:scoped_improvement_ruler = {
								trait = shrewd
							}
						}
						modifier = {
							factor = 0.85
							event_target:scoped_improvement_ruler = {
								trait = quick
							}
						}
						modifier = {
							factor = 0.75
							event_target:scoped_improvement_ruler = {
								trait = genius
							}
						}
						character_event = { id = HF.23762 days = 15 random = 15 }
					}
					80 = { #Nothing.
					}
				}
			}
		}
		if = {
			limit = {
				event_target:scoped_improvement_target = {
					has_character_flag = flag_training_intrigue_attribute
				}
			}
			event_target:scoped_improvement_target = {
				random_list = {
					20 = { #Education improvement.
						trigger = { #Education Improvement only unlocked by synergy.
							OR = {
								has_religion_feature = religion_meritocratic
								has_religion_feature = religion_matriarchal
								has_religion_feature = religion_patriarchal
								has_religion_feature = religion_feature_ulutiuan
								has_religion_feature = religion_feature_goblin_good
							}
							OR = {
								trait = amateurish_plotter
								trait = flamboyant_schemer
								trait = intricate_webweaver
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								NOT = { character = event_target:scoped_improvement_target }
								attribute_diff = { attribute = intrigue character = event_target:scoped_improvement_target value = 3 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								NOT = { character = event_target:scoped_improvement_target }
								attribute_diff = { attribute = intrigue character = event_target:scoped_improvement_target value = 6 }
							}
						}
						modifier = {
							factor = 1.75
							event_target:scoped_improvement_ruler = {
								NOT = { character = event_target:scoped_improvement_target }
								attribute_diff = { attribute = intrigue character = event_target:scoped_improvement_target value = 9 }
							}
						}
						character_event = { id = HF.23761 days = 15 random = 15 }
					}
					20 = { #Burnout
						trigger = {
							event_target:scoped_improvement_ruler = { #Never first time.
								check_variable = { which = burnout_count value = 1 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 2 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 3 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 4 }
							}
						}
						modifier = {
							factor = 1.75
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 5 }
							}
						}
						modifier = {
							factor = 2
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 8 }
							}
						}
						modifier = {
							factor = 2
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 12 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								trait = slothful
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								trait = stressed
							}
						}
						modifier = {
							factor = 1.75
							event_target:scoped_improvement_ruler = {
								trait = depressed
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								is_ill = yes
							}
						}
						modifier = {
							factor = 0.75
							event_target:scoped_improvement_ruler = {
								trait = diligent
							}
						}
						modifier = {
							factor = 1.25
							event_target:scoped_improvement_ruler = {
								age = 30
							}
						}
						modifier = {
							factor = 1.25
							event_target:scoped_improvement_ruler = {
								age = 35
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								age = 40
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								age = 45
							}
						}
						modifier = {
							factor = 1.75
							event_target:scoped_improvement_ruler = {
								age = 50
							}
						}
						modifier = {
							factor = 1.25
							event_target:scoped_improvement_ruler = {
								trait = slow
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								trait = imbecile
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								trait = inbred
							}
						}
						modifier = {
							factor = 1.25
							event_target:scoped_improvement_ruler = {
								trait = dull
							}
						}
						modifier = {
							factor = 0.85
							event_target:scoped_improvement_ruler = {
								trait = shrewd
							}
						}
						modifier = {
							factor = 0.85
							event_target:scoped_improvement_ruler = {
								trait = quick
							}
						}
						modifier = {
							factor = 0.75
							event_target:scoped_improvement_ruler = {
								trait = genius
							}
						}
						character_event = { id = HF.23762 days = 15 random = 15 }
					}
					80 = { #Nothing.
					}
				}
			}
		}
		if = {
			limit = {
				event_target:scoped_improvement_target = {
					has_character_flag = flag_training_learning_attribute
				}
			}
			event_target:scoped_improvement_target = {
				random_list = {
					20 = { #Education improvement.
						trigger = { #Education Improvement only unlocked by synergy.
							OR = {
								has_religion_feature = religion_meritocratic
								has_religion_feature = religion_matriarchal
								has_religion_feature = religion_patriarchal
								has_religion_feature = religion_feature_ulutiuan
								has_religion_feature = religion_feature_goblin_good
							}
							OR = {
								trait = detached_priest
								trait = martial_cleric
								trait = scholarly_theologian
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								OR = {
									has_religion_feature = religion_meritocratic #More pressure.
									has_religion_feature = religion_feature_ulutiuan
									has_religion_feature = religion_feature_goblin_good
								}
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								NOT = { character = event_target:scoped_improvement_target }
								attribute_diff = { attribute = learning character = event_target:scoped_improvement_target value = 3 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								NOT = { character = event_target:scoped_improvement_target }
								attribute_diff = { attribute = learning character = event_target:scoped_improvement_target value = 6 }
							}
						}
						modifier = {
							factor = 1.75
							event_target:scoped_improvement_ruler = {
								NOT = { character = event_target:scoped_improvement_target }
								attribute_diff = { attribute = learning character = event_target:scoped_improvement_target value = 9 }
							}
						}
						character_event = { id = HF.23761 days = 15 random = 15 }
					}
					20 = { #Burnout
						trigger = {
							event_target:scoped_improvement_ruler = { #Never first time.
								check_variable = { which = burnout_count value = 1 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 2 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 3 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 4 }
							}
						}
						modifier = {
							factor = 1.75
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 5 }
							}
						}
						modifier = {
							factor = 2
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 8 }
							}
						}
						modifier = {
							factor = 2
							event_target:scoped_improvement_ruler = {
								check_variable = { which = burnout_count value = 12 }
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								trait = slothful
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								trait = stressed
							}
						}
						modifier = {
							factor = 1.75
							event_target:scoped_improvement_ruler = {
								trait = depressed
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								is_ill = yes
							}
						}
						modifier = {
							factor = 0.75
							event_target:scoped_improvement_ruler = {
								trait = diligent
							}
						}
						modifier = {
							factor = 1.25
							event_target:scoped_improvement_ruler = {
								age = 30
							}
						}
						modifier = {
							factor = 1.25
							event_target:scoped_improvement_ruler = {
								age = 35
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								age = 40
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								age = 45
							}
						}
						modifier = {
							factor = 1.75
							event_target:scoped_improvement_ruler = {
								age = 50
							}
						}
						modifier = {
							factor = 1.25
							event_target:scoped_improvement_ruler = {
								trait = slow
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								trait = imbecile
							}
						}
						modifier = {
							factor = 1.5
							event_target:scoped_improvement_ruler = {
								trait = inbred
							}
						}
						modifier = {
							factor = 1.25
							event_target:scoped_improvement_ruler = {
								trait = dull
							}
						}
						modifier = {
							factor = 0.85
							event_target:scoped_improvement_ruler = {
								trait = shrewd
							}
						}
						modifier = {
							factor = 0.85
							event_target:scoped_improvement_ruler = {
								trait = quick
							}
						}
						modifier = {
							factor = 0.75
							event_target:scoped_improvement_ruler = {
								trait = genius
							}
						}
						character_event = { id = HF.23762 days = 15 random = 15 }
					}
					80 = { #Nothing.
					}
				}
			}
		}
	}
}

# landless_pope_effect = {
	# if = {
		# limit = {
			# has_landed_title = k_papal_state
			# NOT = {
				# catholic = {
					# is_name_randomized = yes
				# }
			# }
		# }
		# if = {
			# limit = {
				# NOR = {
					# any_demesne_province = {
						# always = yes
					# }
					# any_realm_lord = {
						# any_demesne_province = {
							# always = yes
						# }
					# }
				# }
			# }
			# character_event = { id = HFP.40034 }
			# character_event = { id = HFP.40035 }
		# }
	# }
# }

# Used for rains in African regions...
remove_rain_modifiers_effect = {
	remove_province_modifier = africa_heavy_rain
	remove_province_modifier = africa_light_rain
	remove_province_modifier = africa_drought_risk
	remove_province_modifier = africa_drought
}

set_weather_change_cooldown_effect = {
	add_province_modifier = {
		name = africa_weather_updated
		duration = 300 # Just for safety
		hidden = yes
	}
}

set_rain_flag_heavy_effect = {
	if = {
		limit = { NOT = { has_province_flag = africa_heavy_rain_flag } } #So it's not overwritten and can be checked for time...
		set_province_flag = africa_heavy_rain_flag
		clr_province_flag = africa_light_rain_flag
		clr_province_flag = africa_drought_risk_flag
		clr_province_flag = africa_drought_flag
	}
}
set_rain_flag_light_effect = {
	if = {
		limit = { NOT = { has_province_flag = africa_light_rain_flag } } #So it's not overwritten and can be checked for time...
		clr_province_flag = africa_heavy_rain_flag
		set_province_flag = africa_light_rain_flag
		clr_province_flag = africa_drought_risk_flag
		clr_province_flag = africa_drought_flag
	}
}
set_rain_flag_drought_risk_effect = {
	if = {
		limit = { NOT = { has_province_flag = africa_drought_risk_flag } } #So it's not overwritten and can be checked for time...
		clr_province_flag = africa_heavy_rain_flag
		clr_province_flag = africa_light_rain_flag
		set_province_flag = africa_drought_risk_flag
		clr_province_flag = africa_drought_flag
	}
}
set_rain_flag_drought_effect = {
	if = {
		limit = { NOT = { has_province_flag = africa_drought_flag } } #So it's not overwritten and can be checked for time...
		clr_province_flag = africa_heavy_rain_flag
		clr_province_flag = africa_light_rain_flag
		clr_province_flag = africa_drought_risk_flag
		set_province_flag = africa_drought_flag
	}
}

change_rain_effect = { # Needs a province scope...
	if = {
		limit = { has_province_modifier = africa_heavy_rain }
		random_list = {
			10 = { # Make it worse (risk for drought)...
				modifier = { # There is no nearby light rain...
					factor = 2
					any_neighbor_province_has_light_rain_trigger = no
				}
				modifier = {
					factor = 2 # There is more heavy rain nearby...
					any_neighbor_province_has_heavy_rain_trigger = yes
				}
				modifier = {
					factor = 2 # There is nearby dry weather...
					any_neighbor_province_has_dry_weather_trigger = yes
				}
				remove_rain_modifiers_effect = yes
				if = {
					limit = { has_province_modifier = africa_rain_dance_successful }
					remove_province_modifier = africa_rain_dance_successful
				}
				add_province_modifier = {
					name = africa_drought_risk
					duration = -1
				}
				set_rain_flag_drought_risk_effect = yes
			}
			10 = { # Make it better (light rain)...
				modifier = { #There is no nearby drought...
					factor = 2
					any_neighbor_province_has_dry_weather_trigger = no
				}
				modifier = {
					factor = 2 # There is more heavy rain nearby...
					any_neighbor_province_has_heavy_rain_trigger = yes
				}
				modifier = {
					factor = 2 # There is light rain nearby...
					any_neighbor_province_has_light_rain_trigger = no
				}
				remove_rain_modifiers_effect = yes
				add_province_modifier = {
					name = africa_light_rain
					duration = -1
				}
				set_rain_flag_light_effect = yes
			}
			10 = { # Keep weather (heavy rain)...
				set_rain_flag_heavy_effect = yes
			}
		}
	}
	else_if = {
		limit = {
			has_province_modifier = africa_light_rain
		}
		random_list = {
			10 = { # Make it worse (drought risk)...
				modifier = { #More likely if have enjoyed it long enough...
					factor = 2
					had_province_flag = {
						flag = africa_light_rain_flag
						days = 3600 # almost 10 years...
					}
				}
				modifier = { #More likely if have enjoyed it long enough...
					factor = 2
					had_province_flag = {
						flag = africa_light_rain_flag
						days = 6000 # 16,5 years...
					}
				}
				modifier = { # There is no nearby great weather...
					factor = 2
					any_neighbor_province_has_light_rain_trigger = no
				}
				modifier = {
					factor = 2
					any_neighbor_province_has_heavy_rain_trigger = yes
				}
				modifier = {
					factor = 2
					any_neighbor_province_has_dry_weather_trigger = yes
				}
				remove_rain_modifiers_effect = yes
				if = {
					limit = { has_province_modifier = africa_rain_dance_successful }
					remove_province_modifier = africa_rain_dance_successful
				}
				add_province_modifier = {
					name = africa_drought_risk
					duration = -1
				}
				set_rain_flag_drought_risk_effect = yes
			}
			10 = { # Make it better (heavy rain)...
				modifier = { #There is no nearby drought...
					factor = 3
					any_neighbor_province_has_dry_weather_trigger = no
				}
				modifier = {
					factor = 2
					any_neighbor_province_has_heavy_rain_trigger = yes
				}
				modifier = {
					factor = 2
					any_neighbor_province_has_light_rain_trigger = no
				}
				remove_rain_modifiers_effect = yes
				add_province_modifier = {
					name = africa_heavy_rain
					duration = -1
				}
				set_rain_flag_heavy_effect = yes
			}
			10 = { # Keep weather (light rain)...
				set_rain_flag_light_effect = yes
			}
		}
	}
	else_if = {
		limit = { has_province_modifier = africa_drought_risk }
		random_list = {
			10 = { # Make it worse (actual drought)...
				modifier = { # There is no nearby rain...
					factor = 2
					any_neighbor_province_has_light_rain_trigger = no
				}
				modifier = {
					factor = 2
					any_neighbor_province_has_heavy_rain_trigger = no
				}
				remove_rain_modifiers_effect = yes
				if = {
					limit = { has_province_modifier = africa_rain_dance_successful }
					remove_province_modifier = africa_rain_dance_successful
				}
				add_province_modifier = {
					name = africa_drought_risk
					duration = -1
				}
				set_rain_flag_drought_effect = yes
			}
			10 = { # Make it better (light rain)...
				modifier = { #There is no nearby drought...
					factor = 3
					any_neighbor_province_has_dry_weather_trigger = no
				}
				modifier = {
					factor = 2
					any_neighbor_province_has_heavy_rain_trigger = yes
				}
				modifier = {
					factor = 2
					any_neighbor_province_has_light_rain_trigger = no
				}
				remove_rain_modifiers_effect = yes
				add_province_modifier = {
					name = africa_light_rain
					duration = -1
				}
				set_rain_flag_light_effect = yes
			}
			10 = { # Keep weather (drought risk)...
				set_rain_flag_drought_risk_effect = yes
			}
		}
	}
	else = {
		limit = { has_province_modifier = africa_drought }
		random_list = {
			10 = { # Make it better (heavy rain)...
				modifier = { #More likely if have suffered long enough...
					factor = 2
					had_province_flag = {
						flag = africa_drought_flag
						days = 3600 # almost 10 years...
					}
				}
				modifier = { #More likely if have suffered long enough...
					factor = 2
					had_province_flag = {
						flag = africa_drought_flag
						days = 6000 # 16,5 years...
					}
				}
				modifier = { #There is no nearby drought...
					factor = 3
					any_neighbor_province_has_dry_weather_trigger = no
				}
				modifier = {
					factor = 2
					any_neighbor_province_has_heavy_rain_trigger = yes
				}
				modifier = {
					factor = 2
					any_neighbor_province_has_light_rain_trigger = no
				}
				remove_rain_modifiers_effect = yes
				add_province_modifier = {
					name = africa_heavy_rain
					duration = -1
				}
				set_rain_flag_heavy_effect = yes
			}
			15 = { # Make it better (drought risk)...
				modifier = { #More likely if have suffered long enough...
					factor =2
					had_province_flag = {
						flag = africa_drought_flag
						days = 3600 # almost 10 years...
					}
				}
				modifier = { #More likely if have suffered long enough...
					factor = 2
					had_province_flag = {
						flag = africa_drought_flag
						days = 6000 # 16,5 years...
					}
				}
				modifier = { #There is no nearby drought...
					factor = 3
					any_neighbor_province_has_dry_weather_trigger = no
				}
				modifier = {
					factor = 2
					any_neighbor_province_has_heavy_rain_trigger = yes
				}
				modifier = {
					factor = 2
					any_neighbor_province_has_light_rain_trigger = no
				}
				remove_rain_modifiers_effect = yes
				if = {
					limit = { has_province_modifier = africa_rain_dance_successful }
					remove_province_modifier = africa_rain_dance_successful
				}
				add_province_modifier = {
					name = africa_drought_risk
					duration = -1
				}
				set_rain_flag_drought_risk_effect = yes
			}
			10 = { # Keep weather (actual drought)...
				modifier = { # There is no nearby great weather...
					factor = 2
					any_neighbor_province_has_light_rain_trigger = no
				}
				modifier = {
					factor = 2
					any_neighbor_province_has_heavy_rain_trigger = no
				}
				modifier = {
					factor = 2
					any_neighbor_province_has_dry_weather_trigger = yes
				}
				set_rain_flag_drought_effect = yes
			}
		}
	}
	set_weather_change_cooldown_effect = yes #sets a hidden modifier...
}

clone_weather_to_prev_effect = {
	if = {
		limit = { has_province_modifier = africa_heavy_rain }
		PREV = {
			remove_rain_modifiers_effect = yes
			add_province_modifier = {
				name = africa_heavy_rain
				duration = -1
			}
			set_rain_flag_heavy_effect = yes
		}
	}
	else_if = {
		limit = { has_province_modifier = africa_light_rain }
		PREV = {
			remove_rain_modifiers_effect = yes
			add_province_modifier = {
				name = africa_light_rain
				duration = -1
			}
			set_rain_flag_light_effect = yes
		}
	}
	else_if = {
		limit = { has_province_modifier = africa_drought_risk }
		PREV = {
			remove_rain_modifiers_effect = yes
			add_province_modifier = {
				name = africa_drought_risk
				duration = -1
			}
			set_rain_flag_drought_risk_effect = yes
		}
	}
	else = {
		limit = { has_province_modifier = africa_drought }
		PREV = {
			remove_rain_modifiers_effect = yes
			add_province_modifier = {
				name = africa_drought
				duration = -1
			}
			set_rain_flag_drought_effect = yes
		}
	}
	PREV = { set_weather_change_cooldown_effect = yes } #sets a hidden modifier...
}

calculate_weather_status_in_demesne_effect = {
	### Find out what had the most impact...
	set_variable = {
		which = light_rain_count
		value = 0
	}
	set_variable = {
		which = heavy_rain_count
		value = 0
	}
	set_variable = {
		which = drought_risk_count
		value = 0
	}
	set_variable = {
		which = drought_count
		value = 0
	}
	# Light rain...?
	while = {
		limit = {
			any_demesne_province = {
				has_province_modifier = africa_light_rain
				NOT = { has_province_flag = has_been_counted }
			}
		}
		random_demesne_province = {
			limit = {
				has_province_modifier = africa_light_rain
				NOT = { has_province_flag = has_been_counted }
			}
			PREV = {
				change_variable = {
					which = light_rain_count
					value = 1
				}
			}
			set_province_flag = has_been_counted
		}
	}
	# Heavy rain...?
	while = {
		limit = {
			any_demesne_province = {
				has_province_modifier = africa_heavy_rain
				NOT = { has_province_flag = has_been_counted }
			}
		}
		random_demesne_province = {
			limit = {
				has_province_modifier = africa_heavy_rain
				NOT = { has_province_flag = has_been_counted }
			}
			PREV = {
				change_variable = {
					which = heavy_rain_count
					value = 1
				}
			}
			set_province_flag = has_been_counted
		}
	}
	# Drought risk...?
	while = {
		limit = {
			any_demesne_province = {
				has_province_modifier = africa_drought_risk
				NOT = { has_province_flag = has_been_counted }
			}
		}
		random_demesne_province = {
			limit = {
				has_province_modifier = africa_drought_risk
				NOT = { has_province_flag = has_been_counted }
			}
			PREV = {
				change_variable = {
					which = drought_risk_count
					value = 1
				}
			}
			set_province_flag = has_been_counted
		}
	}
	# Actual drought...?
	while = {
		limit = {
			any_demesne_province = {
				has_province_modifier = africa_drought
				NOT = { has_province_flag = has_been_counted }
			}
		}
		random_demesne_province = {
			limit = {
				has_province_modifier = africa_drought
				NOT = { has_province_flag = has_been_counted }
			}
			PREV = {
				change_variable = {
					which = drought_count
					value = 1
				}
			}
			set_province_flag = has_been_counted
		}
	}

	any_demesne_province = { clr_province_flag = has_been_counted } #clean up

	clr_character_flag = mostly_drought
	clr_character_flag = mostly_drought_risk
	clr_character_flag = mostly_light_rain
	clr_character_flag = mostly_heavy_rain
	clr_character_flag = one_rain_variable_is_higher_than_one_drought_variable
	clr_character_flag = light_rain_variable_is_higher_than_drought_variable
	clr_character_flag = light_rain_variable_is_higher_than_drought_risk_variable
	clr_character_flag = heavy_rain_variable_is_higher_than_drought_variable
	clr_character_flag = heavy_rain_variable_is_higher_than_drought_risk_variable


	if = {
		limit = {
			check_variable = { # if actual drought is more common than the risk of it...
				which = "drought_count"
				which >= "drought_risk_count"
				which = ROOT
			}
			check_variable = { # and more common than heavy rain...
				which = "drought_count"
				which >= "heavy_rain_count"
				which = ROOT
			}
			check_variable = { # and more than light rain...
				which = "drought_count"
				which >= "light_rain_count"
				which = ROOT
			}
		}
		set_character_flag = mostly_drought
	}
	if = {
		limit = {
			check_variable = { # if drought risk is more common than actual drought...
				which = "drought_risk_count"
				which >= "drought_count"
				which = ROOT
			}
			check_variable = { # and more common than heavy rain...
				which = "drought_risk_count"
				which >= "heavy_rain_count"
				which = ROOT
			}
			check_variable = { # and more than light rain...
				which = "drought_risk_count"
				which >= "light_rain_count"
				which = ROOT
			}
		}
		set_character_flag = mostly_drought_risk
	}
	if = {
		limit = {
			check_variable = { # if light rain is more common than drought risk...
				which = "light_rain_count"
				which >= "drought_risk_count"
				which = ROOT
			}
			check_variable = { # and more common than heavy rain...
				which = "light_rain_count"
				which >= "heavy_rain_count"
				which = ROOT
			}
			check_variable = { # and more than drought...
				which = "light_rain_count"
				which >= "drought_count"
				which = ROOT
			}
		}
		set_character_flag = mostly_light_rain
	}
	if = {
		limit = {
			check_variable = { # if heavy rain is more common than drought risk...
				which = "heavy_rain_count"
				which >= "drought_risk_count"
				which = ROOT
			}
			check_variable = { # and more common than heavy rain...
				which = "heavy_rain_count"
				which >= "light_rain_count"
				which = ROOT
			}
			check_variable = { # and more than drought...
				which = "heavy_rain_count"
				which >= "drought_count"
				which = ROOT
			}
		}
		set_character_flag = mostly_heavy_rain
	}

	if = {
		limit = {
			OR = {
				check_variable = {
					which = "light_rain_count"
					which >= "drought_count"
					which = ROOT
				}
				check_variable = {
					which = "light_rain_count"
					which >= "drought_risk_count"
					which = ROOT
				}
				check_variable = {
					which = "heavy_rain_count"
					which >= "drought_count"
					which = ROOT
				}
				check_variable = {
					which = "heavy_rain_count"
					which >= "drought_risk_count"
					which = ROOT
				}
			}
		}
		set_character_flag = one_rain_variable_is_higher_than_one_drought_variable
		if = {
			limit = {
				check_variable = {
					which = "light_rain_count"
					which >= "drought_count"
					which = ROOT
				}
			}
			set_character_flag = light_rain_variable_is_higher_than_drought_variable
		}
		if = {
			limit = {
				check_variable = {
					which = "light_rain_count"
					which >= "drought_risk_count"
					which = ROOT
				}
			}
			set_character_flag = light_rain_variable_is_higher_than_drought_risk_variable
		}
		if = {
			limit = {
				check_variable = {
					which = "heavy_rain_count"
					which >= "drought_count"
					which = ROOT
				}
			}
			set_character_flag = heavy_rain_variable_is_higher_than_drought_variable
		}
		if = {
			limit = {
				check_variable = {
					which = "heavy_rain_count"
					which >= "drought_risk_count"
					which = ROOT
				}
			}
			set_character_flag = heavy_rain_variable_is_higher_than_drought_risk_variable
		}
	}
}

clr_flags_introduce_heir_effect = {
	clr_character_flag = ZE_evt_heir_1
	clr_character_flag = ZE_evt_heir_2
	clr_character_flag = ZE_evt_heir_2B
	clr_character_flag = ZE_evt_heir_3
	clr_character_flag = ZE_evt_heir_3B
	clr_character_flag = ZE_evt_heir_4
	clr_character_flag = ZE_evt_heir_5
	clr_character_flag = ZE_evt_heir_6
	clr_character_flag = ZE_evt_heir_7
	clr_character_flag = ZE_evt_heir_8
}

reformation_god_names_changes_effect = { #Reforming religion with certain Doctrines might result in gods being added/removed/changed.
	ROOT = { #The Reformer scope.
		if = {
			limit = { #Holy Family actually becomes Holy.
				has_dlc = "Holy Fury"
				OR = {
					has_religion_feature = religion_holy_family
					has_religion_feature = religion_feature_nogari
				}
			}
			if = {
				limit = { #Reformer himself, but only if he is not becoming the High God due to synergy.
					NOT = { has_religion_feature = religion_temporal_head }
					OR = {
						AND = {
							is_female = no
							NOT = { has_religion_feature = religion_matriarchal }
						}
						AND = {
							is_female = yes
							NOT = { has_religion_feature = religion_patriarchal }
						}
					}
				}
				add_god_name = string_reformer_god
			}
			if = {
				limit = { #Spouse.
					is_married = yes
					OR = {
						AND = {
							is_female = yes
							NOT = { has_religion_feature = religion_matriarchal }
						}
						AND = {
							is_female = no
							NOT = { has_religion_feature = religion_patriarchal }
						}
					}
				}
				random_spouse = { save_event_target_as = scoped_god_spouse }
				add_god_name = string_reformer_spouse_god
			}
			if = {
				limit = { #Spouse, again.
					is_married = yes
					OR = {
						AND = {
							is_female = yes
							has_religion_feature = religion_matriarchal
						}
						AND = {
							is_female = no
							has_religion_feature = religion_patriarchal
						}
					}
				}
				random_spouse = { save_event_target_as = scoped_god_spouse }
				add_evil_god_name = string_reformer_spouse_god
			}
			if = {
				limit = { #Child.
					any_child = {
						OR = {
							AND = {
								is_female = no
								NOT = { ROOT = { has_religion_feature = religion_matriarchal } }
							}
							AND = {
								is_female = yes
								NOT = { ROOT = { has_religion_feature = religion_matriarchal } }
							}
						}
					}
				}
				random_child = {
					limit = {
						OR = {
							AND = {
								is_female = no
								NOT = { ROOT = { has_religion_feature = religion_matriarchal } }
							}
							AND = {
								is_female = yes
								NOT = { ROOT = { has_religion_feature = religion_matriarchal } }
							}
						}
					}
					preferred_limit = {
						is_primary_heir = ROOT
					}
					save_event_target_as = scoped_god_child
				}
				add_god_name = string_reformer_child_god
			}
			if = {
				limit = { #Sibling.
					any_sibling = {
						OR = {
							AND = {
								is_female = no
								NOT = { ROOT = { has_religion_feature = religion_matriarchal } }
							}
							AND = {
								is_female = yes
								NOT = { ROOT = { has_religion_feature = religion_matriarchal } }
							}
						}
					}
				}
				random_sibling = {
					limit = {
						OR = {
							AND = {
								is_female = no
								NOT = { ROOT = { has_religion_feature = religion_matriarchal } }
							}
							AND = {
								is_female = yes
								NOT = { ROOT = { has_religion_feature = religion_matriarchal } }
							}
						}
					}
					preferred_limit = {
						is_primary_heir = ROOT
					}
					save_event_target_as = scoped_god_sibling
				}
				add_god_name = string_reformer_sibling_god
			}
		}

		if = {
			limit = { #Reformer becomes the High God.
				has_dlc = "Holy Fury"
				OR = {
					has_religion_feature = religion_holy_family
					has_religion_feature = religion_feature_nogari
				}
				has_religion_feature = religion_temporal_head
			}
			set_high_god_name = string_reformer_god
		}
	}
}

murder_bloodline_check_effect = {
	change_variable = { which = bloodline_murdered_people value = 1 }
	if = { #First check for pure Murder Bloodline.
		limit = {
			check_variable = { which = bloodline_murdered_people value = 30 }
			has_ambition = obj_forge_bloodline
		}
		set_character_flag = flag_about_to_murder_bloodline
		character_event = { id = HF.24025 days = 25 random = 25 }
	}
	else_if = { #Then check for Murder War Hybrid.
		limit = {
			check_variable = { which = bloodline_murdered_people value = 20 }
			check_variable = { which = bloodline_won_wars value = 10 }
			has_ambition = obj_forge_bloodline
		}
		set_character_flag = flag_about_to_murder_bloodline
		narrative_event = { id = HF.24045 days = 25 random = 25 }
	}
	else_if = { #Then check for Murder Peace Hybrid.
		limit = {
			check_variable = { which = bloodline_murdered_people value = 20 }
			check_variable = { which = bloodline_peaceful_years value = 15 }
			has_ambition = obj_forge_bloodline
		}
		set_character_flag = flag_about_to_murder_bloodline
		narrative_event = { id = HF.24046 days = 25 random = 25 }
	}
	else_if = { #Then check for Murder Builder Hybrid.
		limit = {
			check_variable = { which = bloodline_murdered_people value = 20 }
			check_variable = { which = bloodline_built_holdings value = 15 }
			has_ambition = obj_forge_bloodline
		}
		set_character_flag = flag_about_to_murder_bloodline
		narrative_event = { id = HF.24048 days = 25 random = 25 }
	}
}

princely_elective_german_elector_setup_effect = {
	e_hre = {
		#County of Koln
		#County of Mainz
		#County of Trier
		#Duchy of Bohemia
		#Duchy of Franconia
		#Duchy of Saxony
		#Duchy of Brandenburg
		save_persistent_event_target = { name = hre_title_1_per scope = c_koln }
		save_persistent_event_target = { name = hre_title_2_per scope = c_mainz }
		save_persistent_event_target = { name = hre_title_3_per scope = c_trier }
		save_persistent_event_target = { name = hre_title_4_per scope = d_bohemia }
		save_persistent_event_target = { name = hre_title_5_per scope = d_franconia }
		save_persistent_event_target = { name = hre_title_6_per scope = d_saxony }
		save_persistent_event_target = { name = hre_title_7_per scope = d_brandenburg }
	}
}

princely_elective_french_elector_setup_effect = {
	e_hre = {
		#County of Amiens
		#County of Reims
		#County of Anjou
		#Duchy of Aquitaine
		#Duchy of Burgundy
		#Duchy of Normandy
		#Duchy of Champagne
		save_persistent_event_target = { name = hre_title_1_per scope = c_amiens }
		save_persistent_event_target = { name = hre_title_2_per scope = c_reims }
		save_persistent_event_target = { name = hre_title_3_per scope = c_anjou }
		save_persistent_event_target = { name = hre_title_4_per scope = d_aquitaine }
		save_persistent_event_target = { name = hre_title_5_per scope = d_burgundy }
		save_persistent_event_target = { name = hre_title_6_per scope = d_normandy }
		save_persistent_event_target = { name = hre_title_7_per scope = d_champagne }
	}
}

princely_elective_italian_elector_setup_effect = {
	e_hre = {
		#County of Rome
		#County of Ravenna
		#County of Genoa
		#Duchy of Latium
		#Duchy of Milan
		#Duchy of Tuscany
		#Duchy of Pisa
		save_persistent_event_target = { name = hre_title_1_per scope = c_roma }
		save_persistent_event_target = { name = hre_title_2_per scope = c_ravenna }
		save_persistent_event_target = { name = hre_title_3_per scope = c_genoa }
		save_persistent_event_target = { name = hre_title_4_per scope = d_latium }
		save_persistent_event_target = { name = hre_title_5_per scope = d_lombardia }
		save_persistent_event_target = { name = hre_title_6_per scope = d_toscana }
		save_persistent_event_target = { name = hre_title_7_per scope = d_pisa }
	}
}

princely_elective_spain_elector_setup_effect = {
	e_hre = {
		#County of Santiago
		#County of Cordoba
		#County of Leon
		#Duchy of Barcelona
		#Duchy of Castille
		#Duchy of Portucale
		#Duchy of Seville
		save_persistent_event_target = { name = hre_title_1_per scope = c_santiago }
		save_persistent_event_target = { name = hre_title_2_per scope = c_leon }
		save_persistent_event_target = { name = hre_title_3_per scope = c_cordoba }
		save_persistent_event_target = { name = hre_title_4_per scope = d_barcelona }
		save_persistent_event_target = { name = hre_title_5_per scope = d_castilla }
		save_persistent_event_target = { name = hre_title_6_per scope = d_porto }
		save_persistent_event_target = { name = hre_title_7_per scope = d_sevilla }
	}
}

princely_elective_britannia_elector_setup_effect = {
	e_hre = {
		#County of Kent
		#County of Worcester
		#County of Durham
		#Duchy of Mercia
		#Duchy of Meath
		#Duchy of Albany
		#Duchy of Gwynedd
		save_persistent_event_target = { name = hre_title_1_per scope = c_kent }
		save_persistent_event_target = { name = hre_title_2_per scope = c_worcester }
		save_persistent_event_target = { name = hre_title_3_per scope = c_durham }
		save_persistent_event_target = { name = hre_title_4_per scope = d_mercia }
		save_persistent_event_target = { name = hre_title_5_per scope = d_meath }
		save_persistent_event_target = { name = hre_title_6_per scope = d_albany }
		save_persistent_event_target = { name = hre_title_7_per scope = d_gwynedd }
	}
}

princely_elective_apply_elector_setup_effect = {
	if = {
		limit = {
			capital_scope = {
				region = world_europe_south_italy
			}
		}
		hidden_tooltip = {
			princely_elective_italian_elector_setup_effect = yes
		}
	}
	else_if = {
		limit = {
			capital_scope = {
				region = world_europe_west_francia
			}
		}
		hidden_tooltip = {
			princely_elective_french_elector_setup_effect = yes
		}
	}
	else_if = {
		limit = {
			capital_scope = {
				region = world_europe_west_germania
			}
		}
		hidden_tooltip = {
			princely_elective_german_elector_setup_effect = yes
		}
	}
	else_if = {
		limit = {
			capital_scope = {
				region = world_europe_west_iberia
			}
		}
		hidden_tooltip = {
			princely_elective_spain_elector_setup_effect = yes
		}
	}
	else_if = {
		limit = {
			capital_scope = {
				region = world_europe_west_brittania
			}
		}
		hidden_tooltip = {
			princely_elective_britannia_elector_setup_effect = yes
		}
	}
	else = { #If outside usual borders, default to Germania.
		hidden_tooltip = {
			princely_elective_german_elector_setup_effect = yes
		}
	}
}

give_random_character_modifier_effect = {
	random_list = {
		100 = {
			trigger = {
				NOT = { has_character_modifier = aspiring_poet }
			}
			modifier = {
				factor = 2
				learning = 12
			}
			add_character_modifier = {
				name = aspiring_poet
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = aspiring_duelist }
			}
			modifier = {
				factor = 2
				martial = 12
			}
			modifier = {
				factor = 2
				OR = {
					duelist_skill_is_medium_group_trigger = yes
					duelist_skill_is_high_group_trigger = yes
				}
			}
			add_character_modifier = {
				name = aspiring_duelist
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = aspiring_hunter }
			}
			add_character_modifier = {
				name = aspiring_hunter
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = aspiring_falconer }
			}
			add_character_modifier = {
				name = aspiring_falconer
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = learning_advice }
			}
			add_character_modifier = {
				name = learning_advice
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = slept_in_church }
			}
			modifier = {
				factor = 2
				trait = drunkard
			}
			add_character_modifier = {
				name = slept_in_church
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = gambler }
			}
			add_character_modifier = {
				name = gambler
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = whoremaster }
			}
			modifier = {
				factor = 2
				trait = lustful
			}
			add_character_modifier = {
				name = whoremaster
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = good_deeds }
			}
			modifier = {
				factor = 1.5
				is_benevolent_trigger = yes
			}
			modifier = {
				factor = 1.5
				has_pleasant_personality_trigger = yes
			}
			add_character_modifier = {
				name = good_deeds
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = proving_bravery }
			}
			modifier = {
				factor = 2
				trait = brave
			}
			add_character_modifier = {
				name = proving_bravery
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = suspected_coward }
			}
			modifier = {
				factor = 0.5
				trait = brave
			}
			add_character_modifier = {
				name = suspected_coward
				years = 5
			}
		}
		5 = {
			trigger = {
				NOT = { has_character_modifier = speaking_in_tounges }
			}
			modifier = {
				factor = 4
				trait = lunatic
			}
			add_character_modifier = {
				name = speaking_in_tounges
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = good_times }
			}
			add_character_modifier = {
				name = good_times
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = good_hunt }
			}
			modifier = {
				factor = 2
				trait = hunter
			}
			add_character_modifier = {
				name = good_hunt
				years = 5
			}
		}
		5 = {
			trigger = {
				NOT = { has_character_modifier = epic_hangover }
			}
			modifier ={
				factor = 4
				trait = drunkard
			}
			add_character_modifier = {
				name = epic_hangover
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = weird_scholar }
			}
			modifier = {
				factor = 2
				learning = 12
			}
			add_character_modifier = {
				name = weird_scholar
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = comfort_of_lover }
			}
			trigger = {
				has_lover = yes
			}
			add_character_modifier = {
				name = comfort_of_lover
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = sleep_deprivation }
			}
			add_character_modifier = {
				name = sleep_deprivation
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = pet_cat }
			}
			add_character_modifier = {
				name = pet_cat
				years = 5
			}
			random_list = {
				25 = {
					trigger = {
						is_female = yes
					}
					add_character_modifier = {
						name = crazy_cat_lady
						years = 5
					}
				}
				25 = {
					trigger = {
						is_female = no
					}
					add_character_modifier = {
						name = crazy_cat_lord
						years = 5
					}
				}
				50 = {}
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = invigorated }
			}
			add_character_modifier = {
				name = invigorated
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = good_listener }
			}
			add_character_modifier = {
				name = good_listener
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = confident }
			}
			add_character_modifier = {
				name = confident
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = bad_person }
				is_benevolent_trigger = no
				has_pleasant_personality_trigger = no
			}
			modifier = {
				factor = 2
				OR = {
					is_evil_trigger = yes
					has_unpleasant_personality_trigger = yes
				}
			}
			add_character_modifier = {
				name = bad_person
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = pet_parrot }
			}
			add_character_modifier = {
				name = pet_parrot
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = pet_owl }
			}
			add_character_modifier = {
				name = pet_owl
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = taking_it_easy }
			}
			modifier = {
				factor = 2
				trait = slothful
			}
			add_character_modifier = {
				name = taking_it_easy
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = fell_into_the_river }
			}
			add_character_modifier = {
				name = fell_into_the_river
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = green_fingers }
			}
			add_character_modifier = {
				name = green_fingers
				years = 5
			}
		}
		# 100 = {
			# trigger = {
				# NOT = { has_character_modifier = pet_house_dog }
			# }
			# add_character_modifier = {
				# name = pet_house_dog
				# years = 5
			# }
		# }
		# 100 = {
			# trigger = {
				# NOT = { has_character_modifier = pet_hedgehog }
			# }
			# add_character_modifier = {
				# name = pet_hedgehog
				# years = 5
			# }
		# }
		# 100 = {
			# trigger = {
				# NOT = { has_character_modifier = pet_otter }
			# }
			# add_character_modifier = {
				# name = pet_otter
				# years = 5
			# }
		# }
		100 = {
			trigger = {
				NOT = { has_character_modifier = bad_nights_sleep }
			}
			add_character_modifier = {
				name = bad_nights_sleep
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = good_nights_sleep }
			}
			add_character_modifier = {
				name = good_nights_sleep
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = well_spoken }
			}
			modifier = {
				factor = 2
				diplomacy = 12
			}
			add_character_modifier = {
				name = well_spoken
				years = 5
			}
		}
		100 = {
			trigger = {
				NOT = { has_character_modifier = jumbling_words }
			}
			modifier = {
				factor = 2
				diplomacy < 8
			}
			add_character_modifier = {
				name = jumbling_words
				years = 5
			}
		}
		100 = {
			trigger = {
				has_injury_trigger = no
			}
			apply_random_minor_injury_effect = yes
		}
		0.001 = {
			#fallback
		}
	}
}

assign_random_nickname_effect = {
	random_list = {
		10 = {
			trigger = {
				trait = brave
			}
			random_list = {
				10 = {
					give_nickname = nick_the_brave
				}
				10 = {
					give_nickname = nick_the_fearless
				}
			}
		}
		10 = {
			give_nickname = nick_the_unlucky
		}
		10 = {
			give_nickname = nick_the_lucky
		}
		5 = {
			modifier = {
				factor = 4
				learning < 6
			}
			give_nickname = nick_the_clueless
		}
		10 = {
			modifier = {
				factor = 4
				OR = {
					is_evil_trigger = yes
					has_unpleasant_personality_trigger = yes
				}
			}
			give_nickname = nick_the_ill_tempered
		}
		10 = {
			modifier = {
				factor = 4
				OR = {
					has_pleasant_personality_trigger = yes
					is_pious_trigger = yes
				}
			}
			give_nickname = nick_the_affable
		}
		10 = {
			trigger = {
				age < 30
			}
			give_nickname = nick_the_youthful
		}
		5 = {
			modifier = {
				factor = 4
				is_attractive_trigger = yes
			}
			give_nickname = nick_the_beguiling
		}
		10 = {
			trigger = {
				trait = lustful
			}
			give_nickname = nick_the_lewd
		}
		5 = {
			modifier = {
				factor = 4
				trait = lustful
			}
			modifier = {
				factor = 2
				has_lover = yes
			}
			give_nickname = nick_the_unchaste
		}
		5 = {
			trigger = {
				uses_decadence = yes
				decadence = 50
			}
			modifier = {
				factor = 4
				decadence = 70
			}
			give_nickname = nick_the_decadent
		}
		10 = {
			trigger = {
				has_unpleasant_personality_trigger = yes
			}
			random_list = {
				10 = {
					give_nickname = nick_the_shrewd
				}
				10 = {
					give_nickname = nick_the_wily
				}
			}
		}
		10 = {
			trigger = {
				has_pleasant_personality_trigger = yes
			}
			give_nickname = nick_the_jolly
		}
		10 = {
			trigger ={
				has_pleasant_personality_trigger = yes
			}
			random_list = {
				10 = {
					give_nickname = nick_the_gracious
				}
				10 = {
					give_nickname = nick_the_kind
				}
				10 = {
					give_nickname = nick_the_good
				}
			}
		}
		10 = {
			trigger = {
				trait = patient
			}
			random_list = {
				10 = {
					give_nickname = nick_the_tenacious
				}
				10 = {
					give_nickname = nick_the_mule
				}
			}
		}
		5 = {
			modifier = {
				factor = 4
				has_mental_disorder_trigger = yes
			}
			give_nickname = nick_the_strange
		}
		10 = {
			trigger = {
				is_weak_trigger = yes
			}
			give_nickname = nick_the_clumsy
		}
		10 = {
			trigger = {
				is_impious_trigger = yes
			}
			give_nickname = nick_the_evil
		}
		10 = {
			trigger = {
				is_strong_trigger = yes
			}
			give_nickname = nick_the_strong
		}
		10 = {
			modifier = {
				factor = 2
				has_pleasant_personality_trigger = yes
			}
			give_nickname = nick_the_merry
		}
		10 = {
			modifier = {
				factor = 2
				has_pleasant_personality_trigger = yes
			}
			give_nickname = nick_the_gentle
		}
		10 = {
			trigger = {
				trait = proud
			}
			give_nickname = nick_the_proud
		}
		10 = {
			trigger = {
				trait = shy
			}
			give_nickname = nick_the_silent
		}
		10 = {
			trigger = {
				trait = chaste
			}
			give_nickname = nick_the_chaste
		}
		10 = {
			trigger = {
				is_attractive_trigger = yes
				is_female = no
			}
			random_list = {
				10 = {
					give_nickname = nick_the_handsome
				}
				10 = {
					give_nickname = nick_the_vain
				}
			}
		}
		10 = {
			trigger = {
				is_attractive_trigger = yes
				is_female = yes
			}
			random_list = {
				10 = {
					give_nickname = nick_the_fair
				}
				10 = {
					give_nickname = nick_the_vain
				}
				10 = {
					give_nickname = nick_the_flower
				}
			}
		}
		10 = {
			trigger = {
				is_unattractive_trigger = yes
			}
			random_list = {
				10 = {
					give_nickname = nick_the_hideous
				}
				10 = {
					give_nickname = nick_the_frog
				}
				10 = {
					give_nickname = nick_the_repulsive
				}
			}
		}
		10 = {
			trigger = {
				trait = lunatic
			}
			give_nickname = nick_the_mad
		}
		10 = {
			trigger = {
				trait = drunkard
			}
			give_nickname = nick_the_drunkard
		}
		10 = {
			trigger = {
				learning = 10
			}
			modifier = {
				factor = 2
				learning = 14
			}
			give_nickname = nick_the_wise
		}
		10 = {
			trigger = {
				is_pious_trigger = yes
			}
			random_list = {
				10 = {
					give_nickname = nick_the_pious
				}
				10 = {
					give_nickname = nick_the_blessed
				}
			}
		}
		10 = {
			give_nickname = nick_the_careless
		}
		10 = {
			trigger = {
				age < 25
			}
			give_nickname = nick_the_young
		}
		10 = {
			trigger = {
				age = 50
			}
			give_nickname = nick_the_old
		}
		10 = {
			trigger = {
				learning = 10
			}
			random_list = {
				10 = {
					give_nickname = nick_the_scholar
				}
				10 = {
					give_nickname = nick_the_understanding
				}
				10 = {
					give_nickname = nick_the_healer
				}
			}
		}
		10 = {
			trigger = {
				combat_rating = 10
			}
			give_nickname = nick_the_oakskin
		}
		10 = {
			give_nickname = nick_the_jittery
		}
		10 = {
			trigger = {
				trait = slothful
			}
			give_nickname = nick_the_sleepy
		}
		10 = {
			trigger = {
				base_health < 3
			}
			random_list = {
				10 = {
					give_nickname = nick_butter_teeth
				}
				10 = {
					give_nickname = nick_the_toothless
				}
			}
		}
		10 = {
			trigger = {
				trait = craven
			}
			random_list = {
				10 = {
					give_nickname = nick_the_cowardly
				}
				10 = {
					give_nickname = nick_the_squirmy
				}
			}
		}
		10 = {
			trigger = {
				trait = paranoid
			}
			give_nickname = nick_the_frantic
		}
		10 = {
			give_nickname = nick_the_dry_throat
		}
		10 = {
			trigger = {
				NOR = {
					trait = genius
					trait = quick
				}
			}
			modifier = {
				factor = 4
				OR = {
					trait = imbecile
					trait = slow
				}
			}
			random_list = {
				10 = {
					give_nickname = nick_the_thin_minded
				}
				10 = {
					give_nickname = nick_the_forgetful
				}
			}
		}
		10 = {
			give_nickname = nick_the_messy
		}
		10 = {
			give_nickname = nick_the_feeble
		}
		10 = {
			trigger = {
				NOT = { trait = gregarious }
			}
			modifier = {
				factor = 2
				trait = shy
			}
			give_nickname = nick_the_recluse
		}
		10 = {
			trigger = {
				trait = wroth
			}
			give_nickname = nick_the_short_tempered
		}
		10 = {
			give_nickname = nick_the_red_cheeks
		}
		10 = {
			give_nickname = nick_the_blushing
		}
		10 = {
			trigger = {
				NOT = {
					trait = content
				}
			}
			give_nickname = nick_the_whiner
		}
		10 = {
			trigger = {
				trait = deceitful
			}
			give_nickname = nick_the_liar
		}
		10 = {
			give_nickname = nick_the_twitchy
		}
	}
}
