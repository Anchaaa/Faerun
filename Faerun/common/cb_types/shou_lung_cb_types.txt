### OFFMAP CBs 2.8

# offmap_submission
# tributary_offmap_cb
# dismantle_pretender_china_cb
# force_open_china_cb
# destabilization_china_cb
# invasion_of_china_cb

offmap_submission = {
	name = CB_NAME_OFFMAP_SUBMISSION
	war_name = WAR_NAME_OFFMAP_SUBMISSION
	sprite = 30
	truce_days = 365

	can_ask_to_join_war = yes
	allowed_to_target_tributaries = no
	allow_whitepeace = no
	defender_unoccupied_warscore = yes

	can_use = {
		# Attacker
		ROOT = {
			independent = yes
			mercenary = no

			NOR = {
				same_realm = FROM
				is_vassal_or_below_of = FROM
			}
		}

		# Defender
		FROM = {
			in_revolt = no
			is_nomadic = no # Nomads cannot be subjugated
			NOT = { trait = creature_monster }
		}
	}

	on_add = {
		fire_haruspicy_event_effect = yes
	}

	on_success = {
		attacker = {
			show_scope_change = no
			attacker_victory_effect = yes
		}

		defender = {
			show_scope_change = no

			piety = -100
			prestige = -100

			if = { # Remove Raid if active
				limit = { has_character_modifier = shou_lung_raid_active }

				remove_character_modifier = shou_lung_raid_active

				add_character_modifier = {
					name = shou_lung_raid_grace_cd
					years = 5
					hidden = yes
				}
			}

			custom_tooltip = {
				text = offmap_submission_tip

				attacker = {
					if = {
						limit = {
							num_of_count_titles_in_realm >= 0

							defender = {
								num_of_count_titles_in_realm < 2
							}
						}

						defender = {
							any_realm_province = {
								limit = { held_under_PREV = yes }

								county = {
									usurp_title_plus_barony_if_unlanded = {
										target = attacker
										type = invasion
									}
								}
							}
						}
					}

					while = {
						count = 20 # We had an infinite loop at one point. It's been fixed, but safety first

						limit = {
							demesne_size_compared_to_limit < 1

							defender = {
								num_of_count_titles_in_realm > 1
							}
						}

						defender = {
							if = { # Take counties that border each other
								limit = {
									any_realm_title = {
										real_tier = COUNT

										defender = {
											capital_scope = {
												NOT = { province = PREVPREV }
											}
										}

										location = {
											any_neighbor_province = {
												owned_by = attacker
											}
										}
									}
								}

								random_realm_province = {
									limit = {
										held_under_PREV = yes

										defender = {
											NOT = { is_capital = PREV }
										}

										any_neighbor_province = {
											owned_by = attacker
										}
									}

									county = {
										usurp_title_plus_barony_if_unlanded = {
											target = attacker
											type = invasion
										}
									}
								}
							}
							else = {
								random_realm_province = {
									limit = {
										held_under_PREV = yes

										defender = {
											NOT = { is_capital = PREV }
										}
									}

									county = {
										usurp_title_plus_barony_if_unlanded = {
											target = attacker
											type = invasion
										}
									}
								}
							}
						}
					}

					# hidden_effect = {
					# 	if = { # Shou Lung with no land calculates what to do with nomad provinces
					# 		limit = {
					# 			is_offmap_governor = yes
					# 			offmap_power = { is_offmap_tag = shou_lung }
					# 			shou_lung = { has_offmap_tmp_flag = WP_is_not_on_map }
					# 			wealth < 2500 # unless already rich from tributes
					# 		}

							# set_variable = {
							# 	which = local_WP_nomad_gold_from_china
							# 	value = 0
							# }

							# any_realm_province = {
							# 	limit = {
							# 		held_under_PREV = yes
							# 		has_province_modifier = nomad_agitation
							# 		has_settlement_construction = no
							# 	}
							# 	change_variable = { which = local_WP_nomad_gold_from_china value = 1 }
							# }

							# character_event = {
							# 	id = JD.60101 # calculate gold sent from Shou Lung for building holdings
							# 	days = 1
							# }
					# 	}
					# }

					if = { # New Empire
						limit = { has_character_flag = is_rebel_general }
						set_global_flag = rebel_general_invasion_success

						primary_title = {
							set_title_landless = {
								title = THIS
								status = no
							}

							set_title_flag = uses_temple_names_by_script # Titles with this flag give their heirs a temple name via on_death event
							set_title_flag = pretender_shou_lung_empire # Blocks all grace interactions
							set_title_flag = rebel_general_title
							adjective = e_shou_lung_west_governor_adj # Use WP adj as it is "Chinese" but also gives the right one in different languages

							random_list = { # Random Empire name that Shou Lung doesn't have
								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = tang_shou_lung } } }
									set_name = "Tang Empire"
									set_title_flag = shou_lung_name_Tang
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = jin_shou_lung } } }
									set_name = "Jin Empire"
									set_title_flag = shou_lung_name_Jin
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = wei_shou_lung } } }
									set_name = "Wei Empire"
									set_title_flag = shou_lung_name_Wei
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = qi_shou_lung } } }
									set_name = "Qi Empire"
									set_title_flag = shou_lung_name_Qi
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = zhou_shou_lung } } }
									set_name = "Zhou Empire"
									set_title_flag = shou_lung_name_Zhou
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = han_shou_lung } } }
									set_name = "Han Empire"
									set_title_flag = shou_lung_name_Han
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = qin_shou_lung } } }
									set_name = "Qin Empire"
									set_title_flag = shou_lung_name_Qin
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = yan_shou_lung } } }
									set_name = "Yan Empire"
									set_title_flag = shou_lung_name_Yan
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = zhao_shou_lung } } }
									set_name = "Zhao Empire"
									set_title_flag = shou_lung_name_Zhao
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = liao_shou_lung } } }
									set_name = "Liao Empire"
									set_title_flag = shou_lung_name_Liao
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = yuan_shou_lung } } }
									set_name = "Yuan Empire"
									set_title_flag = shou_lung_name_Yuan
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = xia_shou_lung } } }
									set_name = "Xia Empire"
									set_title_flag = shou_lung_name_Xia
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = qing_shou_lung } } }
									set_name = "Qing Empire"
									set_title_flag = shou_lung_name_Qing
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = dai_shou_lung } } }
									set_name = "Dai Empire"
									set_title_flag = shou_lung_name_Dai
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = cheng_shou_lung } } }
									set_name = "Cheng Empire"
									set_title_flag = shou_lung_name_Cheng
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = liang_shou_lung } } }
									set_name = "Liang Empire"
									set_title_flag = shou_lung_name_Liang
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = song_shou_lung } } }
									set_name = "Song Empire"
									set_title_flag = shou_lung_name_Song
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = ming_shou_lung } } }
									set_name = "Ming Empire"
									set_title_flag = shou_lung_name_Ming
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = shu_shou_lung } } }
									set_name = "Shu Empire"
									set_title_flag = shou_lung_name_Shu
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = wu_shou_lung } } }
									set_name = "Wu Empire"
									set_title_flag = shou_lung_name_Wu
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = chu_shou_lung } } }
									set_name = "Chu Empire"
									set_title_flag = shou_lung_name_Chu
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = yue_shou_lung } } }
									set_name = "Yue Empire"
									set_title_flag = shou_lung_name_Yue
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = yin_shou_lung } } }
									set_name = "Yin Empire"
									set_title_flag = shou_lung_name_Yin
								}

								1 = {
									trigger = { shou_lung = { NOT = { has_offmap_name = shun_shou_lung } } }
									set_name = "Shun Empire"
									set_title_flag = shou_lung_name_Shun
								}
							}

							add_law = {
								law = succ_primogeniture
								cooldown = no
								opinion_effect = no
							}
						}

						set_government_type = celestial_government

						random_list = { # Give a temple name
							1 = { set_name = Gaozu }
							1 = { set_name = Taizu }
							1 = { set_name = Shizu }
							1 = { set_name = Zhaozu }
							1 = { set_name = Jingzu }
							1 = { set_name = Xianzu }
							1 = { set_name = Liezu }
							1 = { set_name = Chengzu }
						}

						set_character_flag = given_temple_name_by_script
						remove_special_character_title = TITLE_GENERAL

						# Some starting stuff
						wealth = 1000
						prestige = 500
						piety = 200

						shou_lung = { set_offmap_flag = no_war_news }

						any_player = {
							limit = {
								has_offmap_news_enabled = shou_lung
								is_within_diplo_range = PREV
							}

							narrative_event = {
								id = JD.60211 # News Event: Inform General won and founded Empire
								days = 1
							}
						}
					}
				}

				if = {
					limit = { lower_real_tier_than = EMPEROR }

					set_defacto_liege = ROOT

					if = {
						limit = {
							attacker = { has_character_flag = is_rebel_general }
						}

						any_demesne_title = {
							limit = { real_tier = KING }

							usurp_title_plus_barony_if_unlanded = {
								target = attacker
								type = invasion
							}

							add_law = {
								law = succ_primogeniture
								cooldown = no
								opinion_effect = no
							}
						}
					}
				}
				else = {
					any_vassal = {
						set_defacto_liege = ROOT

						if = {
							limit = { attacker = { has_character_flag = is_rebel_general } }

							opinion = {
								name  = opinion_subjugated
								multiplier = 2
								who = attacker
							}
						}
					}

					any_demesne_title = {
						limit = {
							real_tier = EMPEROR
							controls_religion = no
						}

						destroy_landed_title = THIS
					}

					if = {
						limit = { lower_real_tier_than = EMPEROR }

						set_defacto_liege = ROOT
					}
					else = {
						any_demesne_title = {
							limit = { controls_religion = no }

							attacker = {
								grant_title_no_opinion = {
									target = PREV
									type = invasion
								}
							}
						}
					}
				}
			}
		}
	}

	on_fail = {
		attacker = {
			show_scope_change = no

			piety = -100

			if = {
				limit = { has_character_flag = is_rebel_general }

				hidden_effect = {
					any_courtier = {
						move_character = defender
						imprison = defender
					}

					primary_title = {
						activate_title = {
							title = THIS
							status = no
						}

						destroy_landed_title = THIS
					}

					move_character = defender

					attacker = {
						imprison = defender
					}
				}
			}
		}

		defender = {
			show_scope_change = no

			piety = 100
			participation_scaled_prestige = 250
			set_character_flag = defeated_shou_lung
		}

		any_defender = {
			limit = { NOT = { character = defender } }
			hidden_effect = { participation_scaled_prestige = 250 }
		}
	}

	on_reverse_demand = {
		attacker = {
			show_scope_change = no

			prestige = -500

			transfer_scaled_wealth = {
				to = defender
				value = 5.0
				min = 1000
			}

			hidden_effect = {
				if = {
					limit = { has_character_flag = is_rebel_general }

					any_courtier = {
						move_character = defender
						imprison = defender
					}

					primary_title = {
						activate_title = {
							title = THIS
							status = no
						}

						destroy_landed_title = THIS
					}

					move_character = defender

					attacker = {
						imprison = defender
					}
				}

				else_if = { # Makes Shou Lung have a chance of leaving Expanionist policy
					limit = {
						is_offmap_tag = shou_lung

						shou_lung = {
							has_policy = shou_lung_expansionist
						}
					}

					random = {
						chance = 50

						shou_lung = {
							set_policy = shou_lung_open
						}

						log = "Shou Lung War Logging: Shou Lung was forced out of Expansionism"

						if = {
							limit = {
								shou_lung = {
									has_status = shou_lung_stable
								}
							}

							random = {
								chance = 30

								shou_lung = {
									set_status = shou_lung_unrest
								}

								log = "Shou Lung War Logging: Shou Lung was forced into Unrest"
							}
						}
					}
				}

				log = "Shou Lung War Logging: Shou Lung lost a submission war against [From.GetBestName]"
			}
		}

		defender = {
			show_scope_change = no

			set_character_flag = defeated_shou_lung
			piety = 500
			participation_scaled_prestige = 2500
			defender_victory_effect = yes
			roman_victory_triumph_effect = yes
		}

		any_defender = {
			limit = { NOT = { character = defender } }
			hidden_effect = { participation_scaled_prestige = 1000 }
		}
	}

	on_attacker_leader_death = {
		attacker = {
			if = {
				limit = { has_character_flag = is_rebel_general }

				PREV = { end_war = invalid }

				any_courtier = {
					death = { death_reason = death_went_back_to_shou_lung }
				}

				primary_title = {
					activate_title = {
						title = THIS
						status = no
					}

					destroy_landed_title = THIS
				}

				death = { death_reason = death_went_back_to_shou_lung }
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	ai_will_do = {
		factor = 0
	}
}

tributary_offmap_cb = {
	name = CB_NAME_PERMANENT_TRIBUTARY
	war_name = WAR_NAME_PERMANENT_TRIBUTARY
	sprite = 30
	truce_days = 365

	hostile_against_others = yes
	can_ask_to_join_war = no
	display_on_map = no
	allowed_to_target_tributaries = no
	defender_unoccupied_warscore = yes

	can_use = {
		# Attacker
		ROOT = {
			independent = yes
			mercenary = no

			NOR = {
				same_realm = FROM
				is_vassal_or_below_of = FROM
				rightful_religious_head = FROM
			}
		}

		# Defender
		FROM = {
			independent = yes
			in_revolt = no
			NOT = { trait = creature_monster }
		}
	}

	is_valid = {
		ROOT = {
			NOT = { rightful_religious_head = FROM }
		}
	}

	on_add = {
		fire_haruspicy_event_effect = yes
	}

	on_success = {
		log = "---------------------"
		log = "Shou Lung Logging:"
		log = "The [shou_lung.GetShortName] invasion of [From.GetTitledName] has ended"
		log = "The war ended in a victory for Shou Lung"
		log = "[From.GetTitledName] is now tributary of Shou Lung"
		log = "---------------------"

		defender = {
			show_scope_change = no

			if = {
				limit = { is_tributary = yes }
				remove_tributary = suzerain
			}
		}

		attacker = {
			show_scope_change = no

			make_tributary = {
				who = defender
				tributary_type = offmap
			}

			prestige = 200
			attacker_victory_effect = yes
		}

		defender = {
			show_scope_change = no

			prestige = -100

			if = { # Remove Raid Shou Lung if active
				limit = { has_character_modifier = shou_lung_raid_active }

				remove_character_modifier = shou_lung_raid_active

				add_character_modifier = {
					name = shou_lung_raid_grace_cd
					years = 5
					hidden = yes
				}
			}
		}
	}

	on_fail = {
		log = "---------------------"
		log = "Shou Lung Logging:"
		log = "The [shou_lung.GetShortName] invasion of [From.GetTitledName] has ended"
		log = "The war ended in a white peace"
		log = "---------------------"

		attacker = {
			show_scope_change = no

			prestige = -200
		}

		defender = {
			show_scope_change = no

			prestige = 200
			set_character_flag = defeated_shou_lung
		}
	}

	on_reverse_demand = {
		log = "---------------------"
		log = "Shou Lung Logging:"
		log = "The [shou_lung.GetShortName] invasion of [From.GetTitledName] has ended"
		log = "The war ended in a victory for [From.GetTitledName]"
		log = "---------------------"

		attacker = {
			show_scope_change = no

			prestige = -500

			transfer_scaled_wealth = {
				to = defender
				value = 5.0
				min = 1000
			}

			hidden_effect = {
				if = { # Makes Shou Lung have a chance of leaving Expansionist policy...
					limit = {
						is_offmap_tag = shou_lung

						shou_lung = {
							has_policy = shou_lung_expansionist
						}
					}

					random = {
						chance = 50

						shou_lung = {
							set_policy = shou_lung_open
						}
					}
				}

				log = "Shou Lung War Logging: Shou Lung lost a I'll-make-you-my-tributary war against [From.GetBestName]"
			}
		}

		defender = {
			show_scope_change = no

			piety = 500
			participation_scaled_prestige = 2500
			set_character_flag = defeated_shou_lung
			defender_victory_effect = yes
		}

		any_defender = {
			limit = { NOT = { character = defender } }
			hidden_effect = { participation_scaled_prestige = 1000 }
		}
	}

	on_attacker_leader_death = {
		# end_war = invalid
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	ai_will_do = {
		factor = 0
	}
}

dismantle_pretender_shou_lung_cb = {
	name = CB_NAME_DISMANTLE_PRETENDER_shou_lung
	war_name = WAR_NAME_DISMANTLE_PRETENDER_shou_lung
	sprite = 30
	truce_days = 365

	hostile_against_others = yes
	can_ask_to_join_war = yes
	allowed_to_target_tributaries = no
	allow_whitepeace = no
	defender_unoccupied_warscore = yes

	can_use = {
		# Attacker
		ROOT = {
			independent = yes
			mercenary = no

			NOR = {
				same_realm = FROM
				is_vassal_or_below_of = FROM
			}
		}

		# Defender
		FROM = {
			primary_title = { has_title_flag = rebel_general_title }
		}
	}

	on_add = {
		fire_haruspicy_event_effect = yes
	}

	on_success = {
		log = "---------------------"
		log = "Shou Lung Logging:"
		log = "The [shou_lung.GetShortName] dismantle pretender on [From.GetTitledName] has ended"
		log = "The war ended in a victory for Shou Lung"
		log = "[From.GetTitledName] is now dismantled of Shou Lung"
		log = "---------------------"

		attacker = {
			show_scope_change = no

			prestige = 200
			attacker_victory_effect = yes
		}

		defender = {
			custom_tooltip = {
				text = dismantle_pretender_shou_lung_success_tt

				shou_lung = { set_offmap_flag = no_war_news }

				any_player = {
					limit = {
						OR = {
							AND = {
								has_offmap_news_enabled = shou_lung
								is_within_diplo_range = attacker
							}

							vassal_of = PREV
						}

						NOT = { character = defender }
					}

					narrative_event = { id = JD.60209 } # News Event: Title invaded by Shou Lung destroyed
				}

				any_courtier = {
					death = { death_reason = death_executed_by_shou_lung_emperor }
				}

				primary_title = {
					activate_title = {
						title = THIS
						status = no
					}

					destroy_landed_title = THIS
				}

				death = { death_reason = death_executed_by_shou_lung_emperor }
			}
		}
	}

	on_fail = {
		log = "---------------------"
		log = "Shou Lung Logging:"
		log = "The [shou_lung.GetShortName] dismantle pretender on [From.GetTitledName] has ended"
		log = "The war ended in a white peace for Shou Lung"
		log = "---------------------"

		attacker = {
			show_scope_change = no

			piety = -100
		}

		defender = {
			show_scope_change = no

			piety = 100
			participation_scaled_prestige = 250
		}

		any_defender = {
			limit = { NOT = { character = defender } }
			hidden_effect = { participation_scaled_prestige = 250 }
		}
	}

	on_reverse_demand = {
		log = "---------------------"
		log = "Shou Lung Logging:"
		log = "The [shou_lung.GetShortName] dismantle pretender on [From.GetTitledName] has ended"
		log = "The war ended in a defeat for Shou Lung"
		log = "---------------------"

		attacker = {
			show_scope_change = no

			piety = -200

			transfer_scaled_wealth = {
				to = defender
				value = 5.0
				min = 500
			}

			offmap_power = {
				set_offmap_tmp_flag = pretender_shou_lung_empire_war_cooldown
			}
		}

		defender = {
			show_scope_change = no

			piety = 200
			participation_scaled_prestige = 1000
			defender_victory_effect = yes
		}

		any_defender = {
			limit = { NOT = { character = defender } }
			hidden_effect = { participation_scaled_prestige = 1000 }
		}
	}

	on_attacker_leader_death = {
		log = "---------------------"
		log = "Shou Lung Logging:"
		log = "The [shou_lung.GetShortName] dismantle pretender on [From.GetTitledName] has ended"
		log = "The war was invalidated for Shou Lung"
		log = "---------------------"
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	ai_will_do = {
		factor = 0
	}
}

force_open_shou_lung_cb = {
	name = CB_NAME_FORCE_OPEN_shou_lung
	war_name = WAR_NAME_FORCE_OPEN_shou_lung
	sprite = 30
	truce_days = 365
	max_attacker_battle_score = 100

	hostile_against_others = yes
	can_ask_to_join_war = yes
	allowed_to_target_tributaries = no
	allow_whitepeace = no
	capturing_defender_is_complete_victory = no

	can_use = {
		# Attacker
		ROOT = {
			independent = yes
			mercenary = no

			NOR = {
				same_realm = FROM
				is_vassal_or_below_of = FROM
			}
		}

		# Defender
		FROM = {
			is_offmap_governor = yes
			offmap_power = { is_offmap_tag = shou_lung }
		}
	}

	is_valid = {
		shou_lung = { has_policy = shou_lung_isolationist }
	}

	on_add = {
		fire_haruspicy_event_effect = yes
	}

	on_success = {
		attacker = {
			show_scope_change = no

			participation_scaled_prestige = 1000
			add_grace_massive_effect = yes
			attacker_victory_effect = yes

			add_character_modifier = {
				name = shou_lung_favored_in_trade
				years = 25
				inherit = yes
			}
		}

		any_attacker = {
			limit = { NOT = { character = attacker } }
			hidden_effect = { participation_scaled_prestige = 300 }
		}

		defender = {
			show_scope_change = no

			transfer_scaled_wealth = {
				to = attacker
				value = 5.0
				min = 2000
			}

			save_event_target_as = the_protector_general

			offmap_power = {
				set_offmap_flag = no_policy_news
				set_policy = shou_lung_open

				log = "--------------------------------"
				log = "Shou Lung Policy Logging:"
				log = "Shou Lungs new Policy is now OPEN"
				log = "-------------------------------------"

				set_offmap_tmp_flag = shou_lung_forced_open
				set_offmap_flag = no_war_news

				custom_tooltip = {
					text = shou_lung_forced_open_tt

					any_player = {
						limit = {
							has_offmap_news_enabled = PREV
							is_within_diplo_range = PREV
						}

						narrative_event = { id = JD.60302 }
					}

					clr_offmap_flag = no_policy_news
				}

				clr_offmap_tmp_flag = shou_lung_force_open_in_progress
			}
		}
	}

	on_fail = {
		attacker = {
			show_scope_change = no

			prestige = -150
		}

		defender = {
			show_scope_change = no

			piety = 100
			participation_scaled_prestige = 50

			hidden_effect = {
				offmap_power = { clr_offmap_tmp_flag = shou_lung_force_open_in_progress }
			}
		}

		any_defender = {
			limit = { NOT = { character = defender } }
			hidden_effect = { participation_scaled_prestige = 50 }
		}
	}

	on_reverse_demand = {
		attacker = {
			show_scope_change = no

			prestige = -300

			transfer_scaled_wealth = {
				to = defender
				value = 5.0
				min = 500
			}

			custom_tooltip = {
				text = angered_shou_lung_tt # Scripter! Update this is you change the value below.

				add_character_modifier = {
					name = angered_shou_lung_modifier
					years = 50
					inherit = yes
				}
			}
		}

		defender = {
			show_scope_change = no

			piety = 200
			participation_scaled_prestige = 100
			defender_victory_effect = yes

			hidden_effect = {
				offmap_power = {
					set_offmap_flag = no_war_news

					any_player = {
						limit = {
							has_offmap_news_enabled = PREV
							is_within_diplo_range = PREV
						}

						narrative_event = { id = JD.60303 } # News Event: Fail to force open Shou Lung by war
					}

					clr_offmap_tmp_flag = shou_lung_force_open_in_progress
				}
			}
		}

		any_defender = {
			limit = { NOT = { character = defender } }
			hidden_effect = { participation_scaled_prestige = 100 }
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	ai_will_do = {
		factor = 0
	}
}

destabilization_shou_lung_cb = {
	name = CB_NAME_DESTABILIZATION_shou_lung
	war_name = WAR_NAME_DESTABILIZATION_shou_lung
	sprite = 30
	truce_days = 365

	hostile_against_others = yes
	can_ask_to_join_war = yes
	allowed_to_target_tributaries = no
	allow_whitepeace = no
	defender_unoccupied_warscore = yes

	can_use = {
		# Attacker
		ROOT = {
			independent = yes
			mercenary = no

			NOR = {
				same_realm = FROM
				is_vassal_or_below_of = FROM
			}
		}
	}

	on_add = {
		fire_haruspicy_event_effect = yes
	}

	on_success = {
		attacker = {
			show_scope_change = no

			prestige = 200
			attacker_victory_effect = yes
		}

		defender = {
			custom_tooltip = {
				text = destabilization_shou_lung_success_tt

				shou_lung = {
					set_offmap_flag = no_war_news
				}

				any_player = {
					limit = {
						OR = {
							AND = {
								has_offmap_news_enabled = shou_lung
								is_within_diplo_range = attacker
							}

							vassal_of = PREV
						}

						NOT = { character = defender }
					}

					narrative_event = { id = JD.60209 } # News Event: Title invaded by Shou Lung destroyed
				}

				any_demesne_title = {
					limit = {
						higher_real_tier_than = DUKE
						controls_religion = no
						clan = no
					}

					unsafe_destroy_landed_title = THIS
				}
			}
		}
	}

	on_fail = {
		attacker = {
			show_scope_change = no

			piety = -100
		}

		defender = {
			show_scope_change = no

			piety = 100
			participation_scaled_prestige = 250
		}

		any_defender = {
			limit = { NOT = { character = defender } }
			hidden_effect = { participation_scaled_prestige = 250 }
		}
	}

	on_reverse_demand = {
		attacker = {
			show_scope_change = no

			piety = -200

			transfer_scaled_wealth = {
				to = defender
				value = 5.0
				min = 1000
			}
		}

		defender = {
			show_scope_change = no

			piety = 500
			participation_scaled_prestige = 2500
			set_character_flag = defeated_shou_lung
			defender_victory_effect = yes
		}

		any_defender = {
			limit = { NOT = { character = defender } }
			hidden_effect = { participation_scaled_prestige = 1000 }
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	ai_will_do = {
		factor = 0
	}
}

invasion_of_shou_lung_cb = {
	name = CB_NAME_INVASION_OF_shou_lung
	war_name = WAR_NAME_INVASION_OF_shou_lung
	sprite = 30
	truce_days = 365
	battle_warscore_mult = 1.5
	max_attacker_occupation_score = 50
	max_defender_occupation_score = 50
	max_attacker_battle_score = 100
	third_party_portrait = event_target:invasion_of_shou_lung_claimant

	hostile_against_others = yes
	can_ask_to_join_war = yes
	allowed_to_target_tributaries = no
	allow_whitepeace = no
	capturing_defender_is_complete_victory = no

	# attacker_unoccupied_warscore = yes - If attacker completely unoccupied, attacker will get ticking warscore. Only works if no title is targetted
	# defender_unoccupied_warscore = yes - If defender completely unoccupied, defender will get ticking warscore. Only works if no title is targetted

	can_use = {
		# Attacker
		ROOT = {
			independent = yes
			mercenary = no

			NOR = {
				same_realm = FROM
				is_vassal_or_below_of = FROM
			}
		}

		# Defender
		FROM = {
			is_offmap_governor = yes
			offmap_power = { is_offmap_tag = shou_lung }
		}
	}

	is_valid = {
		event_target:invasion_of_shou_lung_claimant = {
			is_alive = yes
		}
	}

	on_add = {
		fire_haruspicy_event_effect = yes
	}

	on_success = {
		attacker = {
			show_scope_change = no

			attacker_victory_effect = yes

			custom_tooltip = {
				text = invasion_of_shou_lung_success_tt

				remove_character_modifier = shou_lung_raid_active

				event_target:invasion_of_shou_lung_claimant = {
					betrothed = { break_betrothal = PREV }

					any_spouse = {
						if = {
							limit = {
								is_ruler = no
								is_primary_heir = no
							}

							leave_court_for_shou_lung_effect = yes
						}
					}

					any_child = {
						if = {
							limit = {
								is_ruler = no
								is_primary_heir = no
							}

							leave_court_for_shou_lung_effect = yes
						}
					}

					abdicate = yes

					any_claim = {
						remove_claim = event_target:invasion_of_shou_lung_claimant
					}

					clr_character_flag = no_court_invites
					remove_trait = cannot_marry
					diplomatic_immunity = no
				}

				shou_lung = {
					set_offmap_flag = no_policy_news
					set_policy = shou_lung_open
					log = "-------------------------------------"
					log = "Shou Lung Policy Logging:"
					log = "Shou Lungs new Policy is now OPEN"
					log = "-------------------------------------"
					clr_offmap_flag = no_policy_news

					governor = {
						any_vassal = {
							set_defacto_liege = ROOT
						}

						any_demesne_title = {
							limit = { lower_real_tier_than = EMPEROR }
							grant_title = attacker
						}
					}

					attacker = {
						if = {
							limit = { government = celestial_government }

							shou_lung = { set_offmap_flag = rename_override }

							primary_title = {
								trigger_switch = {
									on_trigger = has_title_flag

									shou_lung_name_Tang = { shou_lung = { set_offmap_name = "tang_shou_lung" } }
									shou_lung_name_Jin = { shou_lung = { set_offmap_name = "jin_shou_lung" } }
									shou_lung_name_Wei = { shou_lung = { set_offmap_name = "wei_shou_lung" } }
									shou_lung_name_Qi = { shou_lung = { set_offmap_name = "qi_shou_lung" } }
									shou_lung_name_Zhou = { shou_lung = { set_offmap_name = "zhou_shou_lung" } }
									shou_lung_name_Han = { shou_lung = { set_offmap_name = "han_shou_lung" } }
									shou_lung_name_Qin = { shou_lung = { set_offmap_name = "qin_shou_lung" } }
									shou_lung_name_Yan = { shou_lung = { set_offmap_name = "yan_shou_lung" } }
									shou_lung_name_Zhao = { shou_lung = { set_offmap_name = "zhao_shou_lung" } }
									shou_lung_name_Liao = { shou_lung = { set_offmap_name = "liao_shou_lung" } }
									shou_lung_name_Yuan = { shou_lung = { set_offmap_name = "yuan_shou_lung" } }
									shou_lung_name_Xia = { shou_lung = { set_offmap_name = "xia_shou_lung" } }
									shou_lung_name_Qing = { shou_lung = { set_offmap_name = "qing_shou_lung" } }
									shou_lung_name_Dai = { shou_lung = { set_offmap_name = "dai_shou_lung" } }
									shou_lung_name_Cheng = { shou_lung = { set_offmap_name = "cheng_shou_lung" } }
									shou_lung_name_Liang = { shou_lung = { set_offmap_name = "liang_shou_lung" } }
									shou_lung_name_Song = { shou_lung = { set_offmap_name = "song_shou_lung" } }
									shou_lung_name_Ming = { shou_lung = { set_offmap_name = "ming_shou_lung" } }
									shou_lung_name_Shu = { shou_lung = { set_offmap_name = "shu_shou_lung" } }
									shou_lung_name_Wu = { shou_lung = { set_offmap_name = "wu_shou_lung" } }
									shou_lung_name_Chu = { shou_lung = { set_offmap_name = "chu_shou_lung" } }
									shou_lung_name_Yue = { shou_lung = { set_offmap_name = "yue_shou_lung" } }
									shou_lung_name_Yin = { shou_lung = { set_offmap_name = "yin_shou_lung" } }
									shou_lung_name_Shun = { shou_lung = { set_offmap_name = "shun_shou_lung" } }
								}

								clr_title_flag = pretender_shou_lung_empire
								clr_title_flag = uses_temple_names_by_script
								clear_flags_with_prefix = temple_name_
								clear_flags_with_prefix = shou_lung_name_
								set_name = "[Root.Capital.GetName] Empire"
							}

							clr_character_flag = given_temple_name_by_script
							set_name = ""

							set_correct_feudal_government_type_effect = yes
						}
					}

					set_offmap_flag = no_succession_news
					set_offmap_flag = no_war_news
					clr_offmap_flag = shou_lung_invaded_player_dynasty
					set_offmap_flag = shou_lung_invaded_player_dynasty
					set_offmap_holder = event_target:invasion_of_shou_lung_claimant
					clr_offmap_flag = no_succession_news
					clr_offmap_flag = rename_override

					if = {
						limit = {
							NOR = {
								has_status = shou_lung_stable
								has_status = shou_lung_golden_age
							}
						}

						set_offmap_flag = no_status_news
						set_status = shou_lung_stable
						clr_offmap_flag = no_status_news
					}
				}

				any_player = {
					limit = {
						OR = {
							AND = {
								has_offmap_news_enabled = shou_lung
								is_within_diplo_range = defender
							}

							vassal_of = ROOT
						}
					}

					narrative_event = { id = JD.60401 } # News Event: Character wins invasion of Shou Lung
				}
			}

			participation_scaled_prestige = 5000

			set_offmap_currency = {
				offmap = shou_lung
				value = 5000
			}

			wealth = 10000

			add_character_modifier = {
				name = shou_lung_favored_in_trade
				years = 50
				inherit = yes
			}

			if = {
				limit = { NOT = { has_artifact = shou_lung_jade_dragon } }
				add_artifact = shou_lung_jade_dragon
			}
			if = {
				limit = { NOT = { has_artifact = shou_lung_dragon_amulet } }
				add_artifact = shou_lung_dragon_amulet
			}
			if = {
				limit = { NOT = { has_artifact = shou_lung_water_clock } }
				add_artifact = shou_lung_water_clock
			}
			if = {
				limit = { NOT = { has_artifact = shou_lung_jian_sword } }
				add_artifact = shou_lung_jian_sword
			}

			hidden_effect = {
				add_character_modifier = {
					name = peace_deal_with_shou_lung
					inherit = yes
					years = 50
				}
			}

			remove_character_modifier = shou_lung_raid_active
			remove_character_modifier = war_with_shou_lung_modifier
		}

		any_attacker = {
			limit = { NOT = { character = attacker } }
			hidden_effect = { participation_scaled_prestige = 2000 }
		}

		clear_global_event_target = invasion_of_shou_lung_claimant
	}

	on_invalidation = {
		attacker = {
			show_scope_change = no

			prestige = -2500
			remove_character_modifier = war_with_shou_lung_modifier

			custom_tooltip = {
				text = invasion_of_shou_lung_cb_fail_tt

				add_character_modifier = {
					name = failed_invasion_of_shou_lung
					duration = -1
					hidden = yes
				}
			}

			hidden_effect = {
				shou_lung = { set_offmap_flag = no_war_news }

				any_player = {
					limit = {
						OR = {
							AND = {
								has_offmap_news_enabled = shou_lung
								is_within_diplo_range = defender
							}

							vassal_of = ROOT
						}
					}

					narrative_event = { id = JD.60403 } # News Event: Claimant on Shou Lung dies, invasion over
				}
			}

			custom_tooltip = {
				text = angered_shou_lung_tt # Scripter! Update this is you change the value below.

				add_character_modifier = {
					name = angered_shou_lung_modifier
					years = 50
					inherit = yes
				}
			}
		}

		defender = {
			show_scope_change = no

			piety = 200
			participation_scaled_prestige = 250
		}

		any_defender = {
			limit = { NOT = { character = defender } }
			hidden_effect = { participation_scaled_prestige = 250 }
		}

		clear_global_event_target = invasion_of_shou_lung_claimant
	}

	on_reverse_demand = {
		attacker = {
			show_scope_change = no

			prestige = -3000

			transfer_scaled_wealth = {
				to = defender
				value = 5.0
				min = 5000
			}

			remove_character_modifier = war_with_shou_lung_modifier

			custom_tooltip = {
				text = invasion_of_shou_lung_cb_fail_tt

				add_character_modifier = {
					name = failed_invasion_of_shou_lung
					duration = -1
					hidden = yes
				}
			}

			custom_tooltip = {
				text = destabilization_shou_lung_success_tt

				shou_lung = { set_offmap_flag = no_war_news }

				any_player = {
					limit = {
						OR = {
							AND = {
								has_offmap_news_enabled = shou_lung
								is_within_diplo_range = defender
							}

							vassal_of = ROOT
						}
					}

					narrative_event = { id = JD.60402 } # News Event: Character loses invasion of Shou Lung
				}

				any_demesne_title = {
					limit = {
						higher_real_tier_than = DUKE
						controls_religion = no
						clan = no
					}

					destroy_landed_title = THIS
				}
			}

			custom_tooltip = {
				text = angered_shou_lung_tt # Scripter! Update this is you change the value below.

				add_character_modifier = {
					name = angered_shou_lung_modifier
					years = 50
					inherit = yes
				}
			}
		}

		defender = {
			show_scope_change = no

			piety = 200
			participation_scaled_prestige = 1000
			defender_victory_effect = yes
		}

		any_defender = {
			limit = { NOT = { character = defender } }
			hidden_effect = { participation_scaled_prestige = 1000 }
		}

		clear_global_event_target = invasion_of_shou_lung_claimant
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	ai_will_do = {
		factor = 0
	}
}