# monster_county_reconquest
# undead_county_conquest
# evil_sea_county_conquest

monster_county_reconquest = {
	name = CB_NAME_MONSTER_RECONQUEST
	war_name = WAR_MONSTER_RECONQUEST
	sprite = 16
	truce_days = 1825
	sort_priority = 700

	hostile_against_others = yes
	is_permanent = yes
	check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
	press_claim = yes
	can_ask_to_join_war = no
	allowed_to_target_tributaries = yes

	can_use = {
		ROOT = {
			NOR = {
				is_vassal_or_below_of = FROM
				trait = creature_monster
			}
			mercenary = no
		}

		FROM = {
			trait = creature_monster
		}
	}

	can_use_title = {
		real_tier = COUNT

		holder_scope = {
			OR = {
				character = FROM
				is_vassal_or_below_of = FROM
			}
		}

		location = {
			#NOT = { has_province_flag = locked_area }

			any_neighbor_province = {
				trigger_if = {
					limit = { is_land = yes }
					owner = {
						OR = {
							character = ROOT
							is_vassal_or_below_of = ROOT
						}
					}
				}
				trigger_else = {
					any_neighbor_province = {
						has_owner = yes
						owner = {
							OR = {
								character = ROOT
								is_vassal_or_below_of = ROOT
							}
						}
					}
				}
			}
		}
	}

	is_valid_title = {
		holder_scope = {
			trait = creature_monster
			OR = {
				character = FROM
				is_vassal_or_below_of = FROM
			}
		}
	}

	on_add = {
		attacker = {
			show_scope_change = no
			declare_war_effect = yes
		}
	}

	on_success_title = {
		attacker = {
			show_scope_change = no

			participation_scaled_prestige = 100
			attacker_victory_effect = yes
		}

		any_attacker = {
			limit = { NOT = { character = attacker } }
			hidden_effect = { participation_scaled_prestige = 100 }
		}

		owner = {
			show_scope_change = no

			hidden_effect = {
				any_courtier = {
					limit = {
						trait = creature_monster
					}
					death = {
						death_reason = death_battle
					}
				}
			}
		}

		if = {
			limit = {
				any_neighbor_province = {
					owner = {
						OR = {
							character = attacker
							same_realm = attacker
						}
					}
				}
			}
			random_neighbor_province = {
				limit = {
					owner = {
						OR = {
							character = attacker
							same_realm = attacker
						}
					}
				}
				save_event_target_as = ng_province
			}
		}
		else = {
			attacker = {
				capital_scope = {
					save_event_target_as = ng_province
				}
			}
		}

		location = {
			culture = event_target:ng_province
			religion = event_target:ng_province
		}

		usurp_title_plus_barony_if_unlanded = attacker

		defender = {
			show_scope_change = no

			if = {
				limit = { is_ruler = no }
				death = {
					death_reason = death_battle
					killer = attacker
				}
			}
		}
	}

	on_fail = {
		attacker = {
			show_scope_change = no

			prestige = -100
		}

		defender = {
			show_scope_change = no

			participation_scaled_prestige = 50
		}

		any_defender = {
			limit = { NOT = { character = defender } }
			hidden_effect = { participation_scaled_prestige = 50 }
		}
	}

	on_reverse_demand = {
		attacker = {
			show_scope_change = no

			prestige = -200

			transfer_scaled_wealth = {
				to = defender
				value = 4.0
			}
		}

		defender = {
			show_scope_change = no

			participation_scaled_prestige = 100
			defender_victory_effect = yes
		}

		any_defender = {
			limit = { NOT = { character = defender } }
			hidden_effect = { participation_scaled_prestige = 100 }
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	ai_will_do = {
		factor = 1.5
	}
}

undead_county_conquest = {
	name = CB_NAME_UNDEAD_CONQUEST
	war_name = WAR_NAME_UNDEAD_CONQUEST
	sprite = 27
	truce_days = 1825
	sort_priority = 700

	hostile_against_others = yes
	is_permanent = yes
	check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
	can_ask_to_join_war = no
	allowed_to_target_tributaries = no

	can_use_gui = {
		ROOT = {
			show_scope_change = no

			prestige >= 30
			war_cost = yes
		}
	}

	can_use = {
		ROOT = {
			is_undead = yes
			OR = {
				has_character_flag = undead_court
				has_character_flag = vampire_court
			}

			NOR = {
				is_vassal_or_below_of = FROM
				mercenary = yes
				government = nomadic_tribal_government # Use the 'pagan_county_conquest' CB instead
				is_pacifist_religion = yes
				AND = {
					culture = sahuagin
					is_conquest_religion = yes
					race_is_fish = yes
				}
				trait = bhaalspawn
				trait = creature_monster
			}
		}

		FROM = {
			is_undead = no
			NOR = {
				trait = bhaalspawn
				trait = creature_monster
			}
		}
	}

	can_use_title = {
		real_tier = COUNT

		holder_scope = {
			OR = {
				character = FROM
				is_vassal_or_below_of = FROM
			}
		}

		OR = {
			# Special condition for seafaring coastal range.
			trigger_if = {
				limit = {
					ROOT = {
						is_seafaring_religion = yes
					}
				}

				location = {
					is_coastal = yes
					any_neighbor_province = { # bordering province
						trigger_if = {
							limit = { has_owner = yes }

							owner = { # part of attacker's realm
								OR = {
									character = ROOT
									is_vassal_or_below_of = ROOT
								}
							}
						}
						trigger_else = {
							is_land = no # first sea zone

							any_neighbor_province = {
								trigger_if = {
									limit = { has_owner = yes }

									owner = { # part of attacker's realm
										OR = {
											character = ROOT
											is_vassal_or_below_of = ROOT
										}
									}
								}
								trigger_else = {
									is_land = no # second sea zone

									any_neighbor_province = {
										owner = { # part of attacker's realm
											OR = {
												character = ROOT
												is_vassal_or_below_of = ROOT
											}
										}
									}
								}
							}
						}
					}
				}
			}

			# Only bordering counties
			location = {
				any_neighbor_province = {
					owner = {
						OR = {
							character = ROOT
							is_vassal_or_below_of = ROOT
						}
					}
				}
			}
		}
	}

	is_valid = {
		ROOT = {
			is_undead = yes
			OR = {
				has_character_flag = undead_court
				has_character_flag = vampire_court
			}
			is_pacifist_religion = no
		}
	}

	is_valid_title = {
		holder_scope = {
			OR = {
				character = FROM
				is_vassal_or_below_of = FROM
			}
		}
	}

	on_add = {
		attacker = {
			show_scope_change = no

			prestige = -30
			declare_war_effect = yes
		}
	}

	on_success_title = {
		hidden_effect = {
			holder_scope = {
				any_courtier = { # Kill part of the court.
					limit = {
						is_ruler = no
						is_undead = no
					}
					random = {
						chance = 25
						mult_modifier = {
							factor = 3
							is_unimportant_trigger = yes
						}
						mult_modifier = {
							factor = 2
							has_minor_title = title_commander
						}
						mult_modifier = { #Less likely to be in battle.
							factor = 0.5
							is_adult = no
						}
						mult_modifier = { #Less likely to be in battle.
							factor = 0.5
							is_adult = no
							is_child_of = PREV
						}

						death = {
							death_reason = death_battle
						}
					}
				}
			}
		}

		usurp_title_plus_barony_if_unlanded = {
			target = attacker
			type = invasion
		}

		any_de_jure_vassal_title = { # take all baronies under the one we're fighting for
			show_scope_change = no

			limit = {
				holder_scope = {
					OR = {
						character = defender
						is_vassal_or_below_of = defender

						AND = {
							is_vassal_or_below_of = attacker
							is_undead = no
						}
					}
				}
			}

			usurp_title_plus_barony_if_unlanded = {
				target = attacker
				type = invasion
			}

			hidden_effect = {
				random = {
					chance = 25
					death = {
						death_reason = death_battle
					}
				}
			}
		}

		attacker = {
			show_scope_change = no

			participation_scaled_prestige = 100
			attacker_victory_effect = yes
		}

		any_attacker = {
			limit = { NOT = { character = attacker } }
			hidden_effect = { participation_scaled_prestige = 100 }
		}

		defender = {
			show_scope_change = no

			if = {
				limit = { is_ruler = no }
				random = {
					chance = 25
					death = {
						death_reason = death_battle
						killer = attacker
					}
				}
			}
		}

		# To handle Warrior Lodge mission "Wage War" completion...
		attacker = { save_event_target_as = attacker_target }
		defender = { save_event_target_as = defender_target }

		if = {
			limit = {
				event_target:attacker_target = { has_quest = quest_warrior_lodge_war }
				is_quest_target_of = event_target:attacker_target
			}

			event_target:attacker_target = {
				show_scope_change = no

				tooltip = {
					clr_quest = quest_warrior_lodge_war
				}

				set_character_flag = won_war@event_target:defender_target

				# Handled by on_action event from here
			}
		}
	}

	on_fail_title = {
		attacker = {
			show_scope_change = no

			prestige = -100
		}

		defender = {
			show_scope_change = no

			participation_scaled_prestige = 50
		}

		any_defender = {
			limit = { NOT = { character = defender } }
			hidden_effect = { participation_scaled_prestige = 50 }
		}

		# To handle Warrior Lodge mission "Wage War" completion...
		attacker = { save_event_target_as = attacker_target }
		defender = { save_event_target_as = defender_target }

		if = {
			limit = {
				event_target:attacker_target = { has_quest = quest_warrior_lodge_war }
				is_quest_target_of = event_target:attacker_target
			}

			event_target:attacker_target = {
				show_scope_change = no

				tooltip = {
					clr_quest = quest_warrior_lodge_war
				}

				set_character_flag = white_peace@event_target:defender_target

				# Handled by on_action event from here
			}
		}
	}

	on_reverse_demand = {
		attacker = {
			show_scope_change = no

			prestige = -200

			transfer_scaled_wealth = {
				to = defender
				value = 4.0
			}
		}

		defender = {
			show_scope_change = no

			participation_scaled_prestige = 100
			defender_victory_effect = yes
		}

		any_defender = {
			limit = { NOT = { character = defender } }
			hidden_effect = { participation_scaled_prestige = 100 }
		}
	}

	on_reverse_demand_title = {
		# To handle Warrior Lodge mission "Wage War" completion...
		attacker = { save_event_target_as = attacker_target }
		defender = { save_event_target_as = defender_target }

		if = {
			limit = {
				event_target:attacker_target = { has_quest = quest_warrior_lodge_war }
				is_quest_target_of = event_target:attacker_target
			}

			event_target:attacker_target = {
				show_scope_change = no

				tooltip = {
					clr_quest = quest_warrior_lodge_war
				}

				set_character_flag = lost_war@event_target:defender_target

				# Handled by on_action event from here
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	ai_will_do = {
		factor = 0.9
	}
}

evil_sea_county_conquest = {
	name = CB_NAME_EVIL_SEA_COUNTY_CONQUEST
	war_name = WAR_NAME_EVIL_SEA_COUNTY_CONQUEST
	sprite = 22
	truce_days = 1400
	sort_priority = 700

	hostile_against_others = yes
	is_permanent = yes
	check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
	can_ask_to_join_war = no
	allow_distant = yes
	allowed_to_target_tributaries = no

	can_use_gui = {
		ROOT = {
			show_scope_change = no
			war_cost = yes
		}
	}

	can_use = {
		ROOT = {
			culture = sahuagin
			race_is_fish = yes
			is_conquest_religion = yes
			NOT = { same_realm = FROM }
			is_within_diplo_range = FROM
			mercenary = no
		}
	}

	can_use_title = {
		real_tier = COUNT

		holder_scope = {
			OR = {
				character = FROM
				is_vassal_or_below_of = FROM
			}

			NOT = { same_realm = ROOT }
		}

		OR = {
			ROOT = {
				capital_scope = {
					can_naval_path_to = PREVPREV
				}
			}
			any_neighbor_province = {
				owner = {
					OR = {
						character = ROOT
						is_vassal_or_below_of = ROOT
					}
				}
			}
		}
	}

	is_valid = {
		ROOT = {
			is_conquest_religion = yes
			NOT = { same_realm = FROM }
		}
	}

	is_valid_title = {
		holder_scope = {
			OR = {
				character = FROM
				is_vassal_or_below_of = FROM
			}
		}
	}

	on_add = {
		attacker = {
			show_scope_change = no

			if = {
				limit = {
					defender = {
						OR = {
							trait = creature_sahuagin
							culture = sahuagin
						}
					}
				}
				character_event = { id = FSC.0001 days = 31 }
			}
			declare_war_effect = yes
		}
	}

	on_success_title = {
		usurp_title_plus_barony_if_unlanded = {
			target = attacker
			type = invasion
		}

		any_de_jure_vassal_title = { # take all baronies too
			show_scope_change = no

			limit = {
				has_holder = yes

				holder_scope = {
					OR = {
						character = defender
						is_vassal_or_below_of = defender

						AND = {
							is_vassal_or_below_of = attacker

							NOR = {
								culture = ROOT
								religion = ROOT
							}
						}
					}
				}
			}

			usurp_title = attacker
		}

		attacker = {
			show_scope_change = no

			participation_scaled_prestige = 100
			participation_scaled_piety = 50
			attacker_victory_effect = yes

			hidden_effect = {
				remove_character_modifier = weak_sahuagin
			}

			if = {
				limit = {
					NOT = { religion = FROM }
				}
				religion_authority = {
					modifier = won_county_conquest
				}
			}
		}

		any_attacker = {
			limit = { NOT = { character = attacker } }
			hidden_effect = {
				participation_scaled_prestige = 100
				participation_scaled_piety = 50
			}
		}

		# To handle Warrior Lodge mission "Wage War" completion...
		attacker = { save_event_target_as = attacker_target }
		defender = { save_event_target_as = defender_target }

		if = {
			limit = {
				event_target:attacker_target = { has_quest = quest_warrior_lodge_war }
				is_quest_target_of = event_target:attacker_target
			}

			event_target:attacker_target = {
				show_scope_change = no

				tooltip = {
					clr_quest = quest_warrior_lodge_war
				}

				set_character_flag = won_war@event_target:defender_target

				# Handled by on_action event from here
			}
		}
	}

	on_fail_title = {
		attacker = {
			show_scope_change = no

			prestige = -100

			if = {
				limit = {
					NOT = { religion = FROM }
				}
				religion_authority = {
					modifier = lost_county_conquest
				}
			}
		}

		defender = {
			show_scope_change = no
			participation_scaled_prestige = 50
		}

		any_defender = {
			limit = { NOT = { character = defender } }
			hidden_effect = { participation_scaled_prestige = 50 }
		}

		# To handle Warrior Lodge mission "Wage War" completion...
		attacker = { save_event_target_as = attacker_target }
		defender = { save_event_target_as = defender_target }

		if = {
			limit = {
				event_target:attacker_target = { has_quest = quest_warrior_lodge_war }
				is_quest_target_of = event_target:attacker_target
			}

			event_target:attacker_target = {
				show_scope_change = no

				tooltip = {
					clr_quest = quest_warrior_lodge_war
				}

				set_character_flag = white_peace@event_target:defender_target

				# Handled by on_action event from here
			}
		}
	}

	on_reverse_demand = {
		attacker = {
			show_scope_change = no

			prestige = -200

			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}

			if = {
				limit = { trait = creature_sahuagin }
				add_character_modifier = {
					name = weak_sahuagin
					years = 10
				}
			}

			if = {
				limit = {
					NOT = { religion = FROM }
				}
				religion_authority = {
					modifier = lost_county_conquest
				}
			}
		}

		defender = {
			show_scope_change = no
			participation_scaled_prestige = 100
			participation_scaled_piety = 50
			defender_victory_effect = yes
		}

		any_defender = {
			limit = { NOT = { character = defender } }
			hidden_effect = {
				participation_scaled_prestige = 100
				participation_scaled_piety = 50
			}
		}
	}

	on_reverse_demand_title = {
		# To handle Warrior Lodge mission "Wage War" completion...
		attacker = { save_event_target_as = attacker_target }
		defender = { save_event_target_as = defender_target }

		if = {
			limit = {
				event_target:attacker_target = { has_quest = quest_warrior_lodge_war }
				is_quest_target_of = event_target:attacker_target
			}

			event_target:attacker_target = {
				show_scope_change = no

				tooltip = {
					clr_quest = quest_warrior_lodge_war
				}

				set_character_flag = lost_war@event_target:defender_target

				# Handled by on_action event from here
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}