namespace = frmaint

character_event = { # Is a placeholder workaround
	id = frmaint.1
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		government = baron_theocracy_government
		NOT = { has_law = succ_open_elective }
	}
	
	immediate = {
		primary_title = {
			add_law = succ_open_elective
		}
	}
}

character_event = { # Sets various story flags
	id = frmaint.2
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		ai = no
		is_save_game = no
	}
	
	immediate = {
		#Can't be trigger switch because it's not a case of only one possible option
		if = {
			limit = {
				date = 1357.7.1
			}
			set_global_flag = malthiir_coup
		}
		if = {
			limit = {
				date = 1358.1.1
			}
			set_global_flag = moander_rampaged
		}
		if = {
			limit = {
				date = 1358.8.13
			}
			set_global_flag = bane_dead
		}
		if = {
			limit = {
				date = 1358.9.16
			}
			set_global_flag = bhaal_dead
		}
		if = {
			limit = {
				date = 1358.10.15
			}
			set_global_flag = tot_ended
		}
		if = {
			limit = {
				date = 1369.6.1
			}
			set_global_flag = refused_bhaal
		}
		if = {
			limit = {
				date = 1370.1.1
			}
			set_global_flag = daemonfey_released
		}
		if = {
			limit = {
				date = 1371.3.1
			}
			set_global_flag = nalavara_spawned
		}
		if = {
			limit = {
				date = 1372.1.1
			}
			set_global_flag = shadovar_spawned
		}
		if = {
			limit = {
				date = 1372.2.1
			}
			clr_global_flag = bane_dead
			set_global_flag = bane_returned
		}
		if = {
			limit = {
				date = 1373.12.28
			}
			set_global_flag = tchazzar_spawned
		}
		if = {
			limit = {
				date = 1374.1.1
			}
			set_global_flag = mephistopheles_spawned
		}
		if = {
			limit = {
				date = 1374.4.1
			}
			set_global_flag = king_of_shadows_spawned
		}
		if = {
			limit = {
				date = 1385.4.29
			}
			set_global_flag = spellplague_happened
		}
		if = {
			limit = {
				date = 1482.5.1
			}
			clr_global_flag = bhaal_dead
			set_global_flag = return_of_bhaal
		}
	}
}

character_event = {
	id = frmaint.3
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		has_character_flag = undead_court
		higher_tier_than = BARON
	}

	immediate = {
		any_demesne_province = {
			religion = ROOT
			add_province_modifier = {
				name = undead_province
				duration = -1
			}
		}
		add_character_modifier = {
			name = undead_realm_lord
			duration = -1
		}
	}
}

character_event = {
	id = frmaint.4
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		ROOT = {
			higher_tier_than = BARON
			NOT = { has_character_flag = undead_court }
			NOT = { has_character_modifier = undead_realm_lord }
		}
		any_demesne_province = {
			has_province_modifier = undead_province
		}
	}

	immediate = {
		any_demesne_province = {
			limit = {
				has_province_modifier = undead_province
			}
			religion = ROOT
			remove_province_modifier = undead_province
			set_variable = { which = prosperity_value value = 0 }
			if = {
				limit = {
					has_province_modifier = prosperity_modifier_3
				}
				remove_province_modifier = prosperity_modifier_3
			}
			if = {
				limit = {
					has_province_modifier = prosperity_modifier_2
				}
				remove_province_modifier = prosperity_modifier_2
			}
			if = {
				limit = {
					has_province_modifier = prosperity_modifier_1
				}
				remove_province_modifier = prosperity_modifier_1
			}
			if = {
				limit = {
					has_province_modifier = depopulated_1
				}
				remove_province_modifier = depopulated_1
			}
			if = {
				limit = {
					has_province_modifier = depopulated_2
				}
				remove_province_modifier = depopulated_2
			}
			add_province_modifier = {
				name = depopulated_3
				duration = -1
			}
		}
	}
}

character_event = { # Is a placeholder workaround
	id = frmaint.5
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { tier = BARON }
		any_demesne_title = {
			has_law = succ_open_elective
		}
	}
	
	immediate = {
		any_demesne_title = {
			limit = {
				has_law = succ_open_elective
			}
			primary_title = {
				PREV = {
					copy_title_laws = PREV
				}
			}
		}
	}
}

character_event = { # Is a placeholder workaround
	id = frmaint.6
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { tier = baron }
		capital_holding = {
			holding_type = temple
		}
		NOR = {
			government = muslim_government
			government = theocracy_government
			government = divine_feudal_government
			government = yikaria_government
		}
	}
	
	immediate = {
		if = {
			limit = {
				is_government_potential = muslim_government
			}
			set_government_type = muslim_government
		}
		else_if = {
			limit = {
				is_government_potential = divine_feudal_government
			}
			set_government_type = divine_feudal_government
		}
		else_if = {
			limit = {
				NOR = {
					is_government_potential = muslim_government
					is_government_potential = divine_feudal_government
				}
			}
			set_government_type = theocracy_government
		}
	}
}

character_event = {
	id = frmaint.7
	hide_window = yes
	
	trigger = {
		religion = uthgardt_faith
		NOT = { has_uthgardt_totem = yes }
	}
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				OR = {
					has_landed_title = d_black_lion
					any_liege = {
						has_landed_title = d_black_lion
					}
				}
			}
			add_trait = uthgar_black_lion
		}
		else_if = {
			limit = {
				OR = {
					has_landed_title = d_black_raven
					any_liege = {
						has_landed_title = d_black_raven
					}
				}
			}
			add_trait = uthgar_black_raven
		}
		else_if = {
			limit = {
				OR = {
					has_landed_title = d_blue_bear
					any_liege = {
						has_landed_title = d_blue_bear
					}
				}
			}
			add_trait = uthgar_blue_bear
		}
		else_if = {
			limit = {
				OR = {
					has_landed_title = d_elk
					any_liege = {
						has_landed_title = d_elk
					}
				}
			}
			add_trait = uthgar_elk
		}
		else_if = {
			limit = {
				OR = {
					has_landed_title = d_gray_wolf
					any_liege = {
						has_landed_title = d_gray_wolf
					}
				}
			}
			add_trait = uthgar_gray_wolf
		}
		else_if = {
			limit = {
				OR = {
					has_landed_title = d_great_worm
					any_liege = {
						has_landed_title = d_great_worm
					}
				}
			}
			add_trait = uthgar_great_worm
		}
		else_if = {
			limit = {
				OR = {
					has_landed_title = d_griffon
					any_liege = {
						has_landed_title = d_griffon
					}
				}
			}
			add_trait = uthgar_griffon
		}
		else_if = {
			limit = {
				OR = {
					has_landed_title = d_red_tiger
					any_liege = {
						has_landed_title = d_red_tiger
					}
				}
			}
			add_trait = uthgar_red_tiger
		}
		else_if = {
			limit = {
				OR = {
					has_landed_title = d_sky_pony
					any_liege = {
						has_landed_title = d_sky_pony
					}
				}
			}
			add_trait = uthgar_sky_pony
		}
		else_if = {
			limit = {
				OR = {
					has_landed_title = d_tree_ghost
					any_liege = {
						has_landed_title = d_tree_ghost
					}
				}
			}
			add_trait = uthgar_tree_ghost
		}
		else_if = {
			limit = {
				OR = {
					has_landed_title = d_thunderbeast
					any_liege = {
						has_landed_title = d_thunderbeast
					}
				}
			}
			add_trait = uthgar_thunderbeast
		}
	}
}

character_event = {
	id = frmaint.9
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		primary_title = {
			FROM = {
				copy_title_laws = PREV
			}
		}
	}
}

character_event = {
	id = frmaint.12
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_patrician = yes
		family_palace = {
			has_law = agnatic_succession
		}
		liege = {
			is_merchant_republic = yes
			any_demesne_title = {
				is_merchant_republic = yes
				NOT = { has_law = agnatic_succession }
			}
		}
	}
	
	immediate = {
		if = {
			limit = {
				liege = {
					is_merchant_republic = yes
					any_demesne_title = {
						is_merchant_republic = yes
						has_law = cognatic_succession
					}
				}
			}
			family_palace = {
				set_law = cognatic_succession
			}
		}
		else_if = {
			limit = {
				liege = {
					is_merchant_republic = yes
					any_demesne_title = {
						is_merchant_republic = yes
						has_law = true_cognatic_succession
					}
				}
			}
			family_palace = {
				set_law = true_cognatic_succession
			}
		}
		else_if = {
			limit = {
				liege = {
					is_merchant_republic = yes
					any_demesne_title = {
						is_merchant_republic = yes
						has_law = enatic_cognatic_succession
					}
				}
			}
			family_palace = {
				set_law = enatic_cognatic_succession
			}
		}
		else_if = {
			limit = {
				liege = {
					is_merchant_republic = yes
					any_demesne_title = {
						is_merchant_republic = yes
						has_law = enatic_succession
					}
				}
			}
			family_palace = {
				set_law = enatic_succession
			}
		}
	}
}

character_event = {
	id = frmaint.13
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_law = agnatic_succession
		has_law = succ_gavelkind
	}
	
	immediate = {
		if = {
			limit = {
				culture_group = orc_group
			}
			set_law = succ_turkish_succession
		}
		if = {
			limit = {
				culture_group = goblinoid_group
			}
			set_law = enatic_cognatic_succession
		}
		if = {
			limit = {
				OR = {
					culture = calishite
					NOR = {
						religion = lolth_cult
						has_religion_feature = religion_matriarchal
					}
					AND = {
						NOR = {
							culture_group = orc_group
							culture_group = goblinoid_group
							culture = troll
						}
						is_female = yes
						OR = {
							has_religion_feature = religion_patriarchal
							has_law = status_of_women_3
							has_law = status_of_women_2
							has_law = status_of_women_1
						}
					}
				}
			}
			set_law = cognatic_succession
		}
		if = {
			limit = {
				OR = {
					culture = troll
					religion = lolth_cult
					has_religion_feature = religion_matriarchal
				}
			}
			set_law = enatic_succession
		}
		if = {
			limit = {
				government = democratic_feudal_government
			}
			set_law = succ_popular_elective
		}
		if = {
			limit = {
				NOR = {
					culture_group = orc_group
					culture_group = goblinoid_group
					culture = calishite
					culture = troll
					has_law = status_of_women_3
					has_law = status_of_women_2
					has_law = status_of_women_1
				}
			}
			set_law = true_cognatic_succession
		}
		if = {
			limit = {
				government = divine_feudal_government
			}
			set_law = succ_divine_dynastic
		}
		if = {
			limit = {
				government = theocracy_government
			}
			set_law = succ_divine_elective
		}
		if = {
			limit = {
				FROM = { title = k_thay }
				z_wizard = yes
				culture = thayan
			}
			set_law = succ_magic_zulkir
		}
	}
}

character_event = {
	id = frmaint.14
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_character_modifier = vow_of_poverty
		NOT = { religion = triadic }
	}
	
	immediate = {
		remove_province_modifier = vow_of_poverty
	}
}

character_event = {
	id = frmaint.15
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		ai = no
		NOT = { has_global_flag = shieldmeet_year }
		is_save_game = no
	}
	immediate = {
		set_global_flag = shieldmeet_year
		character_event = { id = frmaint.16 months = 11 }
		character_event = { id = frmaint.19 years = 4 }
	}
}

character_event = {
	id = frmaint.16
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		clr_global_flag = shieldmeet_year
	}
}

character_event = {
	id = frmaint.17
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		create_character = {
			age = 30
			random_traits = yes
			female = random
			religion = triadic
			culture = event_target:oldroot
			dynasty = random
		}
		new_character = {
			religion = triadic
			ROOT = {
				abdicate_to = PREV
			}
		}
	}
}
character_event = {
	id = frmaint.18
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		create_character = {
			age = 30
			random_traits = yes
			female = random
			religion = event_target:oldroot
			culture = event_target:oldroot
			dynasty = random
		}
		new_character = {
			religion = event_target:oldroot
			add_trait = patron_helm
			ROOT = {
				abdicate_to = PREV
			}
		}
		clear_event_target = oldroot
	}
}
character_event = {
	id = frmaint.19
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		set_global_flag = shieldmeet_year
		character_event = { id = frmaint.16 months = 11 }
		character_event = { id = frmaint.19 years = 4 }
	}
}

character_event = { # avatars can't change religions unless they have a special flag
	id = frmaint.20
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		trait = avatar
	}
	
	immediate = {
		if = {
			limit = {
				has_character_flag = avatar_converts
			}
			clr_character_flag = avatar_converts
		}
		else = {
			religion = FROM
		}
	}
}

# Monster Mobs for all monster provinces - Kekvit
character_event = {
	id = frmaint.21
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_save_game = no # First startup of the game
	}
	immediate = {
		any_title = {
			limit = {
				tier = COUNT
				location = {
					culture = monster
					holder = 0
				}
			}
			create_character = {
				name = "Monster Mob"
				dynasty = none
				culture = monster
				race = monster
			}
			new_character = {
				grant_title = PREV
			}
		}
	}
}

# Sets startup flag, for submod compatibility
character_event = {
	id = frmaint.22
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_save_game = no
		NOT = { has_global_flag = faerun_started }
	}
	immediate = {
		set_global_flag = faerun_started
	}
}

character_event = {
	id = frmaint.23
	hide_window = yes
	is_triggered_only = yes # on_adulthood and yearly pulse
	trigger = {
		faerun_immortal_race_trigger = yes
		NOT = { trait = faerun_immortal_race }
		is_adult = yes
	}
	immediate = {
		add_trait = faerun_immortal_race
	}
}

character_event = {
	id = frmaint.24
	hide_window = yes
	is_triggered_only = yes # on_chronicle_start
	trigger = {
		faerun_immortal_culture = yes
		NOT = { trait = faerun_immortal_race }
		is_adult = yes
		is_save_game = no
	}
	immediate = {
		add_trait = faerun_immortal_race
		character_event = { id = z_character_trait.1 } # Redundancy check
	}
	after = {
		trigger_switch = {
			on_trigger = trait
			creature_dwarf = { rd_age_up_dwarf = yes }
			creature_elf = { rd_age_up_elf = yes }
			creature_draegloth = { rd_age_up_elf = yes }
			creature_drow = { rd_age_up_elf = yes }
			creature_feyri = { rd_age_up_elf = yes }
			creature_gnome = { rd_age_up_rockgnome = yes }
			creature_half_elf = { rd_age_up_halfelf = yes }
			creature_halfling = { rd_age_up_halfling = yes }
		}
	}
}