namespace = frmaint

character_event = { # Is a placeholder workaround
	id = frmaint.1
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		government = baron_theocracy_government
		NOT = { has_law = succ_open_elective }
	}

	immediate = {
		primary_title = {
			add_law = succ_open_elective
		}
	}
}

character_event = { # Sets various story flags
	id = frmaint.2
	hide_window = yes

	is_triggered_only = yes
	ai = no

	trigger = {
		is_multiplayer_host_character = yes
		is_save_game = no
	}

	immediate = {
		#Can't be trigger switch because it's not a case of only one possible option
		if = {
			limit = {
				date = 1.1.1
			}
			set_global_flag = spellplague_not_happened_yet
			set_global_flag = voice_of_telos_not_spawned_yet
			#Historical artifacts
			set_global_flag = twinned_crown_of_yarlith_found
			set_global_flag = twinned_crown_of_uthtower_found
		}
		if = {
			limit = {
				date = 611.1.1
			}
			clr_global_flag = twinned_crown_of_yarlith_found #means it's now missing
		}
		if = {
			limit = {
				date = 615.1.1
			}
			clr_global_flag = twinned_crown_of_uthtower_found #means it's now missing
		}
		if = {
			limit = {
				date = 794.1.1
			}
			set_global_flag = peacock_throne_created # none of it exists before this date
		}
		if = {
			limit = {
				date = 800.1.1
			}
			set_global_flag = peacock_throne_shattered # canopy goes missing
		}
		if = {
			limit = {
				date = 1357.7.1
			}
			set_global_flag = maalthiir_coup
		}
		if = {
			limit = {
				date = 1358.1.1
			}
			set_global_flag = moander_rampaged
		}
		if = {
			limit = {
				date = 1358.8.13
			}
			set_global_flag = bane_dead
		}
		if = {
			limit = {
				date = 1358.9.16
			}
			set_global_flag = bhaal_dead
		}
		if = {
			limit = {
				date = 1358.10.15
			}
			set_global_flag = tot_ended
		}
		if = {
			limit = {
				date = 1365.1.1
			}
			set_global_flag = twinned_crown_of_yarlith_found
		}
		if = {
			limit = {
				date = 1369.1.1
			}
			set_global_flag = caelar_argent_spawned
		}
		if = {
			limit = {
				date = 1369.6.1
			}
			set_global_flag = refused_bhaal
		}
		if = {
			limit = {
				date = 1370.1.1
			}
			set_global_flag = daemonfey_released
			set_global_flag = wyrmskull_throne_found
		}
		if = {
			limit = {
				date = 1371.3.1
			}
			set_global_flag = nalavara_spawned
		}
		if = {
			limit = {
				date = 1372.1.1
			}
			set_global_flag = shadovar_spawned
		}
		if = {
			limit = {
				date = 1372.2.1
			}
			clr_global_flag = bane_dead
			set_global_flag = bane_returned
		}
		if = {
			limit = {
				date = 1373.12.28
			}
			set_global_flag = tchazzar_spawned
		}
		if = {
			limit = {
				date = 1374.1.1
			}
			set_global_flag = mephistopheles_spawned
		}
		if = {
			limit = {
				date = 1374.3.1
			}
			set_global_flag = wenderkazoo_found
		}
		if = {
			limit = {
				date = 1374.4.1
			}
			set_global_flag = king_of_shadows_spawned
		}
		if = {
			limit = {
				date = 1385.4.29
			}
			clr_global_flag = spellplague_not_happened_yet
			set_global_flag = spellplague_happened
		}
		if = {
			limit = {
				date = 1385.9.15
			}
			set_global_flag = tam_won_thay_war
		}
		if = {
			limit = {
				date = 1430.1.1
			}
			clr_global_flag = voice_of_telos_not_spawned_yet
			set_global_flag = voice_of_telos_spawned
		}
		if = {
			limit = {
				date = 1482.5.1
			}
			clr_global_flag = bhaal_dead
			set_global_flag = return_of_bhaal
		}
	}

	after = {
		1 = { # Waterdeep
			province_event = { id = frmaint.30 }
			province_event = { id = rollofyears.2 }
		}
	}
}

character_event = { #add undead_province mod
	id = frmaint.3
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_character_flag = undead_court
		higher_tier_than = BARON
		OR = {
			is_undead = yes
			trait = wiz_necromancy
		}
	}

	immediate = {
		any_demesne_province = {
			religion = ROOT
			add_province_modifier = {
				name = undead_province
				duration = -1
			}
		}
		add_character_modifier = {
			name = undead_realm_lord
			duration = -1
		}
	}
}

character_event = { #remove undead_province mod
	id = frmaint.4
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		ROOT = {
			higher_tier_than = BARON
			NOT = { has_character_flag = undead_court }
			NOT = { has_character_modifier = undead_realm_lord }
			NAND = {
				is_undead = yes
				top_liege = {
					has_character_modifier = undead_realm_lord
				}
			}
		}
		any_demesne_province = {
			has_province_modifier = undead_province
		}
	}

	immediate = {
		any_demesne_province = {
			limit = {
				has_province_modifier = undead_province
			}
			religion = ROOT
			remove_province_modifier = undead_province
			set_variable = { which = prosperity_value value = 0 }
			if = {
				limit = {
					has_province_modifier = prosperity_modifier_3
				}
				remove_province_modifier = prosperity_modifier_3
			}
			if = {
				limit = {
					has_province_modifier = prosperity_modifier_2
				}
				remove_province_modifier = prosperity_modifier_2
			}
			if = {
				limit = {
					has_province_modifier = prosperity_modifier_1
				}
				remove_province_modifier = prosperity_modifier_1
			}
			if = {
				limit = {
					has_province_modifier = depopulated_1
				}
				remove_province_modifier = depopulated_1
			}
			if = {
				limit = {
					has_province_modifier = depopulated_2
				}
				remove_province_modifier = depopulated_2
			}
			add_province_modifier = {
				name = depopulated_3
				duration = -1
			}
		}
	}
}

character_event = { # Is a placeholder workaround
	id = frmaint.5
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		NOT = { tier = BARON }
		any_demesne_title = {
			has_law = succ_open_elective
		}
	}

	immediate = {
		any_demesne_title = {
			limit = {
				has_law = succ_open_elective
			}
			primary_title = {
				PREV = {
					copy_title_laws = PREV
				}
			}
		}
	}
}

character_event = { # Is a placeholder workaround
	id = frmaint.6
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		NOT = { tier = baron }
		capital_holding = {
			holding_type = temple
		}
		NOR = {
			government = muslim_government
			government = theocracy_government
			government = divine_feudal_government
			government = yikaria_government
		}
	}

	immediate = {
		if = {
			limit = {
				is_government_potential = muslim_government
			}
			set_government_type = muslim_government
		}
		else_if = {
			limit = {
				is_government_potential = divine_feudal_government
			}
			set_government_type = divine_feudal_government
		}
		else_if = {
			limit = {
				NOR = {
					is_government_potential = muslim_government
					is_government_potential = divine_feudal_government
				}
			}
			set_government_type = theocracy_government
		}
	}
}

character_event = {
	id = frmaint.7
	hide_window = yes

	trigger = {
		religion = uthgardt_faith
		NOT = { has_uthgardt_totem = yes }
	}

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					has_landed_title = d_black_lion
					any_liege = {
						has_landed_title = d_black_lion
					}
				}
			}
			add_trait = uthgar_black_lion
		}
		else_if = {
			limit = {
				OR = {
					has_landed_title = d_black_raven
					any_liege = {
						has_landed_title = d_black_raven
					}
				}
			}
			add_trait = uthgar_black_raven
		}
		else_if = {
			limit = {
				OR = {
					has_landed_title = d_blue_bear
					any_liege = {
						has_landed_title = d_blue_bear
					}
				}
			}
			add_trait = uthgar_blue_bear
		}
		else_if = {
			limit = {
				OR = {
					has_landed_title = d_elk
					any_liege = {
						has_landed_title = d_elk
					}
				}
			}
			add_trait = uthgar_elk
		}
		else_if = {
			limit = {
				OR = {
					has_landed_title = d_gray_wolf
					any_liege = {
						has_landed_title = d_gray_wolf
					}
				}
			}
			add_trait = uthgar_gray_wolf
		}
		else_if = {
			limit = {
				OR = {
					has_landed_title = d_great_worm
					any_liege = {
						has_landed_title = d_great_worm
					}
				}
			}
			add_trait = uthgar_great_worm
		}
		else_if = {
			limit = {
				OR = {
					has_landed_title = d_griffon
					any_liege = {
						has_landed_title = d_griffon
					}
				}
			}
			add_trait = uthgar_griffon
		}
		else_if = {
			limit = {
				OR = {
					has_landed_title = d_red_tiger
					any_liege = {
						has_landed_title = d_red_tiger
					}
				}
			}
			add_trait = uthgar_red_tiger
		}
		else_if = {
			limit = {
				OR = {
					has_landed_title = d_sky_pony
					any_liege = {
						has_landed_title = d_sky_pony
					}
				}
			}
			add_trait = uthgar_sky_pony
		}
		else_if = {
			limit = {
				OR = {
					has_landed_title = d_tree_ghost
					any_liege = {
						has_landed_title = d_tree_ghost
					}
				}
			}
			add_trait = uthgar_tree_ghost
		}
		else_if = {
			limit = {
				OR = {
					has_landed_title = d_thunderbeast
					any_liege = {
						has_landed_title = d_thunderbeast
					}
				}
			}
			add_trait = uthgar_thunderbeast
		}
	}
}

character_event = {
	id = frmaint.9
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		primary_title = {
			FROM = {
				copy_title_laws = PREV
			}
		}
	}
}

character_event = {
	id = frmaint.12
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_patrician = yes
		family_palace = {
			has_law = agnatic_succession
		}
		liege = {
			is_merchant_republic = yes
			any_demesne_title = {
				is_merchant_republic = yes
				NOT = { has_law = agnatic_succession }
			}
		}
	}

	immediate = {
		if = {
			limit = {
				liege = {
					is_merchant_republic = yes
					any_demesne_title = {
						is_merchant_republic = yes
						has_law = cognatic_succession
					}
				}
			}
			family_palace = {
				add_law = cognatic_succession
			}
		}
		else_if = {
			limit = {
				liege = {
					is_merchant_republic = yes
					any_demesne_title = {
						is_merchant_republic = yes
						has_law = true_cognatic_succession
					}
				}
			}
			family_palace = {
				add_law = true_cognatic_succession
			}
		}
		else_if = {
			limit = {
				liege = {
					is_merchant_republic = yes
					any_demesne_title = {
						is_merchant_republic = yes
						has_law = enatic_cognatic_succession
					}
				}
			}
			family_palace = {
				add_law = enatic_cognatic_succession
			}
		}
		else_if = {
			limit = {
				liege = {
					is_merchant_republic = yes
					any_demesne_title = {
						is_merchant_republic = yes
						has_law = enatic_succession
					}
				}
			}
			family_palace = {
				add_law = enatic_succession
			}
		}
	}
}

character_event = {
	id = frmaint.13
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_law = agnatic_succession
		has_law = succ_gavelkind
	}

	immediate = {
		if = {
			limit = {
				OR = {
					religion = orc_pantheon
					has_religion_feature = religion_patriarchal
					has_religion_feature = religion_matriarchal
				}
				FROM = { NOT = { tier = baron } }
			}
			add_law = succ_turkish_succession
		}
		if = {
			limit = {
				culture_group = goblinoid_group
			}
			add_law = enatic_cognatic_succession
		}
		if = {
			limit = {
				OR = {
					culture = calishite
					NOR = {
						religion = lolth_cult
						has_religion_feature = religion_matriarchal
					}
					AND = {
						NOR = {
							culture_group = orc_group
							culture_group = goblinoid_group
							culture = troll
						}
						is_female = yes
						OR = {
							has_religion_feature = religion_patriarchal
							has_law = status_of_women_3
							has_law = status_of_women_2
							has_law = status_of_women_1
						}
					}
				}
			}
			add_law = cognatic_succession
		}
		if = {
			limit = {
				OR = {
					culture = troll
					religion = lolth_cult
					has_religion_feature = religion_matriarchal
				}
			}
			add_law = enatic_succession
		}
		if = {
			limit = {
				is_government_potential = democratic_feudal_government
				FROM = { NOT = { tier = baron } }
			}
			add_law = succ_popular_elective
		}
		if = {
			limit = {
				NOR = {
					culture_group = orc_group
					culture_group = goblinoid_group
					culture = calishite
					culture = troll
					has_law = status_of_women_3
					has_law = status_of_women_2
					has_law = status_of_women_1
				}
			}
			add_law = true_cognatic_succession
		}
		if = {
			limit = {
				is_government_potential = divine_feudal_government
				FROM = { NOT = { tier = baron } }
			}
			add_law = succ_divine_dynastic
		}
		if = {
			limit = {
				is_government_potential = theocracy_government
				FROM = { NOT = { tier = baron } }
			}
			add_law = succ_divine_elective
		}
	}
}

character_event = {
	id = frmaint.14
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		evilcat_remove_patrons = yes
		if = {
			limit = {
				has_character_modifier = vow_of_poverty
				NOT = { religion = triadic }
			}
			remove_province_modifier = vow_of_poverty
		}
	}
}

character_event = {
	id = frmaint.15
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		ai = no
		NOT = { has_global_flag = shieldmeet_year }
		is_save_game = no
	}
	immediate = {
		set_global_flag = shieldmeet_year
		character_event = { id = frmaint.16 months = 11 }
		character_event = { id = frmaint.19 years = 4 }
	}
}

character_event = {
	id = frmaint.16
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		clr_global_flag = shieldmeet_year
	}
}

character_event = {
	id = frmaint.17
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		create_character = {
			age = 30
			random_traits = yes
			female = random
			religion = triadic
			culture = FROM
			dynasty = random
		}
		new_character = {
			religion = triadic
			ROOT = {
				abdicate_to = PREV
			}
		}
	}
}
character_event = {
	id = frmaint.18
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		create_character = {
			age = 30
			random_traits = yes
			female = random
			religion = FROM
			culture = FROM
			dynasty = random
		}
		new_character = {
			religion = FROM
			add_trait = patron_helm
			ROOT = {
				abdicate_to = PREV
			}
		}
	}
}
character_event = {
	id = frmaint.19
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		set_global_flag = shieldmeet_year
		character_event = { id = frmaint.16 months = 11 }
		character_event = { id = frmaint.19 years = 4 }
	}
}

#character_event = { # avatars can't change religions unless they have a special flag
#	id = frmaint.20
#	hide_window = yes
#
#	is_triggered_only = yes
#
#	trigger = {
#		trait = avatar
#	}
#
#	immediate = {
#		if = {
#			limit = {
#				has_character_flag = avatar_converts
#			}
#			clr_character_flag = avatar_converts
#		}
#		else = {
#			religion = FROM
#		}
#	}
#}

# Monster Mobs for all monster provinces - Kekvit
character_event = {
	id = frmaint.21
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_save_game = no # First startup of the game
	}
	immediate = {
		any_title = {
			limit = {
				tier = COUNT
				location = {
					culture = monster
					holder = 0
				}
			}
			create_character = {
				name = "Monster Mob"
				dynasty = none
				culture = monster
				race = monster
			}
			new_character = {
				grant_title = PREV
			}
		}
	}
}

# Sets startup flag, for submod compatibility
character_event = {
	id = frmaint.22
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_save_game = no
		NOT = { has_global_flag = faerun_started }
	}
	immediate = {
		set_global_flag = faerun_started
	}
}

# Toggle creature traits to get long-lived races to grow out of childhood.
character_event = {
	id = frmaint.23
	hide_window = yes
	is_triggered_only = yes # on_adulthood and yearly pulse
	trigger = {
		olrox_all_immortals_trigger = yes
		NOT = { trait = immortal }
		age < 35
	}
	immediate = {
		trigger_switch = {
			on_trigger = trait
			creature_drow = {
				remove_trait = creature_drow
				add_trait = creature_drow
			}
			creature_elf = {
				remove_trait = creature_elf
				add_trait = creature_elf
			}
			creature_half_elf = {
				remove_trait = creature_half_elf
				add_trait = creature_half_elf
			}
			creature_feyri = {
				remove_trait = creature_feyri
				add_trait = creature_feyri
			}
			creature_draegloth = {
				remove_trait = creature_draegloth
				add_trait = creature_draegloth
			}
			creature_treant = {
				remove_trait = creature_treant
				add_trait = creature_treant
			}
			creature_hengeyokai = {
				remove_trait = creature_hengeyokai
				add_trait = creature_hengeyokai
			}
			creature_centaur = {
				remove_trait = creature_centaur
				add_trait = creature_centaur
			}
			creature_dwarf = {
				remove_trait = creature_dwarf
				add_trait = creature_dwarf
			}
			creature_troll = {
				remove_trait = creature_troll
				add_trait = creature_troll
			}
			creature_gnome = {
				remove_trait = creature_gnome
				add_trait = creature_gnome
			}
			creature_hag = {
				remove_trait = creature_hag
				add_trait = creature_hag
			}
			creature_deep_imaskari = {
				remove_trait = creature_deep_imaskari
				add_trait = creature_deep_imaskari
			}
			creature_illithid = {
				remove_trait = creature_illithid
				add_trait = creature_illithid
			}
			creature_beholder = {
				remove_trait = creature_beholder
				add_trait = creature_beholder
			}
			creature_aboleth = {
				remove_trait = creature_aboleth
				add_trait = creature_aboleth
			}
			creature_sarrukh = {
				remove_trait = creature_sarrukh
				add_trait = creature_sarrukh
			}
			creature_naga = {
				remove_trait = creature_naga
				add_trait = creature_naga
			}
			creature_lamia = {
				remove_trait = creature_lamia
				add_trait = creature_lamia
			}
			creature_dragon = {
				remove_trait = creature_dragon
				add_trait = creature_dragon
			}
			creature_saurial = {
				remove_trait = creature_saurial
				add_trait = creature_saurial
			}
			creature_sahuagin = {
				remove_trait = creature_sahuagin
				add_trait = creature_sahuagin
			}
			creature_malenti = {
				remove_trait = creature_malenti
				add_trait = creature_malenti
			}
			creature_kuotoa = {
				remove_trait = creature_kuotoa
				add_trait = creature_kuotoa
			}
			creature_fiend = {
				remove_trait = creature_fiend
				add_trait = creature_fiend
			}
			creature_genie = {
				remove_trait = creature_genie
				add_trait = creature_genie
			}
			creature_angel = {
				remove_trait = creature_angel
				add_trait = creature_angel
			}
			creature_construct = {
				remove_trait = creature_construct
				add_trait = creature_construct
			}
			lifespan_giant_stone = {
				remove_trait = lifespan_giant_stone
				add_trait = lifespan_giant_stone
			}
			lifespan_giant_storm = {
				remove_trait = lifespan_giant_storm
				add_trait = lifespan_giant_storm
			}
			lifespan_giant_cloud = {
				remove_trait = lifespan_giant_cloud
				add_trait = lifespan_giant_cloud
			}
			lifespan_giant_fire = {
				remove_trait = lifespan_giant_fire
				add_trait = lifespan_giant_fire
			}
			lifespan_giant_frost = {
				remove_trait = lifespan_giant_frost
				add_trait = lifespan_giant_frost
			}
			lifespan_giant_hill = {
				remove_trait = lifespan_giant_hill
				add_trait = lifespan_giant_hill
			}
			lifespan_earth_titan = {
				remove_trait = lifespan_earth_titan
				add_trait = lifespan_earth_titan
			}
			creature_aasimar = {
				remove_trait = creature_aasimar
				add_trait = creature_aasimar
			}
			longevity = {
				remove_trait = longevity
				add_trait = longevity
			}
			avatar = {
				remove_trait = avatar
				add_trait = avatar
			}
		}
	}
}

# Process ruler designed characters.
character_event = {
	id = frmaint.24
	hide_window = yes
	is_triggered_only = yes # on_chronicle_start
	trigger = {
		is_adult = yes
		is_save_game = no
	}
	immediate = {
		trigger_switch = {
			on_trigger = trait
			creature_dwarf = { rd_age_up_dwarf = yes }
			creature_elf = { rd_age_up_elf = yes }
			creature_draegloth = { rd_age_up_elf = yes }
			creature_drow = { rd_age_up_elf = yes }
			creature_feyri = { rd_age_up_elf = yes }
			creature_gnome = { rd_age_up_rockgnome = yes }
			creature_half_elf = { rd_age_up_halfelf = yes }
			creature_halfling = { rd_age_up_halfling = yes }
		}

		if = {
			limit = { olrox_has_specific_sorc_origin = yes }
			set_character_flag = sorc_originrevealed
		}

		if = {
			limit = {
				OR = {
					culture = aasimar
					culture = tiefling
					culture = spiritfolk
					culture = tamhi
					culture = airgenasi
					culture = earthgenasi
					culture = firegenasi
					culture = watergenasi
				}
			}
			location = {
				ROOT = { culture = PREV }
			}
		}
		else_if = {
			limit = {
				OR = {
					culture = malison
					culture = abomination
				}
			}
			culture = yuanti
		}
		else_if = {
			limit = {
				OR = {
					culture = cornugon
					culture = gelugon
				}
			}
			location = {
				culture = baatezu
			}
		}
		else_if = {
			limit = {
				OR = {
					culture = succubus
					culture = nalfeshnee
				}
			}
			location = {
				culture = tanarri
			}
		}
		else_if = {
			limit = {
				culture = planetar
			}
			location = {
				culture = angel
			}
		}
	}
}

character_event = {
	id = frmaint.26
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		OR = {
			AND = {
				has_minor_title = title_zulkir
				any_demesne_title = {
					NOR = {
						title = d_abjuration
						title = d_abjuration_exile
						title = d_conjuration
						title = d_conjuration_exile
						title = d_divination
						title = d_divination_exile
						title = d_enchantment
						title = d_enchantment_exile
						title = d_evocation
						title = d_evocation_exile
						title = d_illusion
						title = d_illusion_exile
						title = d_necromancy
						title = d_necromancy_exile
						title = d_transmutation
						title = d_transmutation_exile
					}
				}
			}
			AND = {
				NOT = { has_minor_title = title_zulkir }
				any_demesne_title = {
					OR = {
						title = d_abjuration
						title = d_abjuration_exile
						title = d_conjuration
						title = d_conjuration_exile
						title = d_divination
						title = d_divination_exile
						title = d_enchantment
						title = d_enchantment_exile
						title = d_evocation
						title = d_evocation_exile
						title = d_illusion
						title = d_illusion_exile
						title = d_necromancy
						title = d_necromancy_exile
						title = d_transmutation
						title = d_transmutation_exile
					}
				}
			}
		}
	}

	immediate = {
		if = {
			limit = {
				NOT = { has_minor_title = title_zulkir }
				any_demesne_title = {
					OR = {
						title = d_abjuration
						title = d_abjuration_exile
						title = d_conjuration
						title = d_conjuration_exile
						title = d_divination
						title = d_divination_exile
						title = d_enchantment
						title = d_enchantment_exile
						title = d_evocation
						title = d_evocation_exile
						title = d_illusion
						title = d_illusion_exile
						title = d_necromancy
						title = d_necromancy_exile
						title = d_transmutation
						title = d_transmutation_exile
					}
				}
			}
			give_minor_title = title_zulkir
		}
		else = {
			remove_title = title_zulkir
		}
	}
}

character_event = {
	id = frmaint.27
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_character_modifier = embraced_by_auril
		NOT = { trait = patron_auril }
	}

	immediate = {
		remove_character_modifier = embraced_by_auril
	}
}


character_event = {
	id = frmaint.28
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_character_flag = lycan_court
		NOT = { has_character_modifier = known_lycan_modifier }
	}

	immediate = {
		add_character_modifier = {
			name = known_lycan_modifier
			duration = -1
		}
	}
}

province_event = { # needs to be two events so it doesn't double up if a game is reloaded. might be a more elegant way but can't think of it]

	#BIG IMPORTANT NOTE: MONTH CONDITIONS GO FROM 0 to 11

	id = frmaint.30
	hide_window = yes

	is_triggered_only = yes
	trigger = {
		NOT = {
			has_game_rule = {
				name = minor_story_events
				value = off
			}
		}
		year <= 1430 # Last event, don't forget to update.
	}

	immediate = {
		#to fire again in next hammer (month 1)
		if = {
			limit = {
				month == 0
			}
			repeat_event = { id = frmaint.30 years = 1 }
		}
		else_if = {
			limit = {
				month == 1
			}
			repeat_event = { id = frmaint.30 months = 11 }
		}
		else_if = {
			limit = {
				month == 2
			}
			repeat_event = { id = frmaint.30 months = 10 }
		}
		else_if = {
			limit = {
				month == 3
			}
			repeat_event = { id = frmaint.30 months = 9 }
		}
		else_if = {
			limit = {
				month == 4
			}
			repeat_event = { id = frmaint.30 months = 8 }
		}
		else_if = {
			limit = {
				month == 5
			}
			repeat_event = { id = frmaint.30 months = 7 }
		}
		else_if = {
			limit = {
				month == 6
			}
			repeat_event = { id = frmaint.30 months = 6 }
		}
		else_if = {
			limit = {
				month == 7
			}
			repeat_event = { id = frmaint.30 months = 5 }
		}
		else_if = {
			limit = {
				month == 8
			}
			repeat_event = { id = frmaint.30 months = 4 }
		}
		else_if = {
			limit = {
				month == 9
			}
			repeat_event = { id = frmaint.30 months = 3 }
		}
		else_if = {
			limit = {
				month == 10
			}
			repeat_event = { id = frmaint.30 months = 2 }
		}
		else = {
			repeat_event = { id = frmaint.30 months = 1 }
		}

		#Now events and such, please make sure they are in roughly chronological order.
		##Landed Bhaalspawn get event troops if before BG2 ends
		if = {
			limit = {
				NOR = {
					date = 1369.9.1
					has_global_flag = bhaalspawn_crisis_ended
				}
			}
			while = {
				count = 20 #failsafe
				limit = {
					bhaalspawn = {
						NOT = { has_character_flag = bhaalspawn0 }
						is_alive = yes
					}
				}
				bhaalspawn = {
					limit = {
						NOT = { has_character_flag = bhaalspawn0 }
						is_alive = yes
					}
					set_character_flag = bhaalspawn0
					character_event = { id = frstory.0 }
				}
			}
		}

		##Moander rampages in Mirtul 1357
		if = {
			limit = {
				year = 1357
				month < 5
				NOT = { has_global_flag = moander_rampaged }
			}
			set_global_flag = moander_rampaged
			c_yulash = {
				location = {
					if = {
						limit = {
							month == 0
						}
						province_event = { id = frstory.62 months = 4 }
					}
					else_if = {
						limit = {
							month == 1
						}
						province_event = { id = frstory.62 months = 3 }
					}
					else_if = {
						limit = {
							month == 2
						}
						province_event = { id = frstory.62 months = 2 }
					}
					else_if = {
						limit = {
							month == 3
						}
						province_event = { id = frstory.62 months = 1 }
					}
					else = {
						province_event = { id = frstory.62 }
					}
				}
			}
		}

		#Maalthiir's coup in Hillsfar in Eleasis 1357
		if = {
			limit = {
				year = 1357
				month < 8
				NOT = { has_global_flag = maalthiir_coup }
				c_hillsfar = {
					owner = {
						independent = yes
						NOT = { character = 56072 }
					}
				}
				c_56072 = {
					is_alive = yes
					is_landed = no
				}
			}
			set_global_flag = maalthiir_coup
			c_hillsfar = {
				location = {
					if = {
						limit = {
							month == 0
						}
						province_event = { id = frstory.70 months = 7 }
					}
					else_if = {
						limit = {
							month == 1
						}
						province_event = { id = frstory.70 months = 6 }
					}
					else_if = {
						limit = {
							month == 2
						}
						province_event = { id = frstory.70 months = 5 }
					}
					else_if = {
						limit = {
							month == 3
						}
						province_event = { id = frstory.70 months = 4 }
					}
					else_if = {
						limit = {
							month == 4
						}
						province_event = { id = frstory.70 months = 3 }
					}
					else_if = {
						limit = {
							month == 5
						}
						province_event = { id = frstory.70 months = 2 }
					}
					else_if = {
						limit = {
							month == 6
						}
						province_event = { id = frstory.70 months = 1 }
					}
					else = {
						province_event = { id = frstory.70 }
					}
				}
			}
		}

		##Caelar Argent forms the Crusade in Uktar 1368
		if = {
			limit = {
				year = 1368
				NOT = { has_global_flag = caelar_argent_spawned }
			}
			set_global_flag = caelar_argent_spawned
			c_dragonspear = {
				location = {
					if = {
						limit = {
							month == 0
						}
						province_event = { id = frstory.72 months = 10 }
					}
					else_if = {
						limit = {
							month == 1
						}
						province_event = { id = frstory.72 months = 9 }
					}
					else_if = {
						limit = {
							month == 2
						}
						province_event = { id = frstory.72 months = 8 }
					}
					else_if = {
						limit = {
							month == 3
						}
						province_event = { id = frstory.72 months = 7 }
					}
					else_if = {
						limit = {
							month == 4
						}
						province_event = { id = frstory.72 months = 6 }
					}
					else_if = {
						limit = {
							month == 5
						}
						province_event = { id = frstory.72 months = 5 }
					}
					else_if = {
						limit = {
							month == 6
						}
						province_event = { id = frstory.72 months = 4 }
					}
					else_if = {
						limit = {
							month == 7
						}
						province_event = { id = frstory.72 months = 3 }
					}
					else_if = {
						limit = {
							month == 8
						}
						province_event = { id = frstory.72 months = 2 }
					}
					else_if = {
						limit = {
							month == 9
						}
						province_event = { id = frstory.72 months = 1 }
					}
					else = {
						province_event = { id = frstory.72 }
					}
				}
			}
		}

		##Nalavarauthatoryl attacks Cormyr/the Obarskyrs in Mirtul 1371
		if = {
			limit = {
				year = 1371
				month < 5
				NOT = { has_global_flag = nalavara_spawned }
				FROM = { # Wants a character scope for no reason.
					any_playable_ruler = {
						dynasty = 500 #Obarskyr
						num_of_king_titles >= 1
					}
				}
			}
			set_global_flag = nalavara_spawned
			if = {
				limit = {
					k_cormyr = {
						owner = { dynasty = 500 }
					}
				}
				k_cormyr = {
					owner = {
						capital_scope = {
							if = {
								limit = {
									month == 0
								}
								province_event = { id = frstory.56 months = 4 }
							}
							else_if = {
								limit = {
									month == 1
								}
								province_event = { id = frstory.56 months = 3 }
							}
							else_if = {
								limit = {
									month == 2
								}
								province_event = { id = frstory.56 months = 2 }
							}
							else_if = {
								limit = {
									month == 3
								}
								province_event = { id = frstory.56 months = 1 }
							}
							else = {
								province_event = { id = frstory.56 }
							}
						}
					}
				}
			}
			else = {
				random_playable_ruler = {
					limit = {
						dynasty = 500
						higher_tier_than = DUKE
					}
					capital_scope = {
						if = {
							limit = {
								month == 0
							}
							province_event = { id = frstory.56 months = 4 }
						}
						else_if = {
							limit = {
								month == 1
							}
							province_event = { id = frstory.56 months = 3 }
						}
						else_if = {
							limit = {
								month == 2
							}
							province_event = { id = frstory.56 months = 2 }
						}
						else_if = {
							limit = {
								month == 3
							}
							province_event = { id = frstory.56 months = 1 }
						}
						else = {
							province_event = { id = frstory.56 }
						}
					}
				}
			}
		}

		##Shade returns in Hammer 1372
		if = {
			limit = {
				year = 1372
				month < 1
				NOT = { has_global_flag = shadovar_spawned }
			}
			set_global_flag = shadovar_spawned
			c_shoal_of_thirst = {
				location = {
					province_event = { id = frstory.31 }
				}
			}
		}

		##Bane returns in Alturiak 1372
		if = {
			limit = {
				year = 1372
				has_global_flag = bane_dead
				month < 2
				NOT = { has_global_flag = bane_returned }
			}
			set_global_flag = bane_returned
			c_zhentil_keep = {
				location = {
					if = {
						limit = {
							month == 0
						}
						province_event = { id = frstory.8 months = 1 }
					}
					else = {
						province_event = { id = frstory.8 }
					}
				}
			}
		}

		##Mephistopheles in Waterdeep in Alturiak 1373 (Hordes of the Underdark)
		if = {
			limit = {
				year = 1373
				month < 2
				NOT = { has_global_flag = mephistopheles_spawned }
				#check for Undrentide happening
			}
			set_global_flag = mephistopheles_spawned
			c_waterdeep = {
				location = {
					if = {
						limit = {
							month == 0
						}
						province_event = { id = frstory.21 months = 1 }
					}
					else = {
						province_event = { id = frstory.21 }
					}
				}
			}
		}

		##Tchazzar returns to Chessenta in Nightal 1374
		if = {
			limit = {
				year = 1374
				NOT = { has_global_flag = tchazzar_spawned }
			}
			set_global_flag = tchazzar_spawned
			c_cimbar = {
				location = {
					if = {
						limit = {
							month == 0
						}
						province_event = { id = frstory.41 months = 11 }
					}
					else_if = {
						limit = {
							month == 1
						}
						province_event = { id = frstory.41 months = 10 }
					}
					else_if = {
						limit = {
							month == 2
						}
						province_event = { id = frstory.41 months = 9 }
					}
					else_if = {
						limit = {
							month == 3
						}
						province_event = { id = frstory.41 months = 8 }
					}
					else_if = {
						limit = {
							month == 4
						}
						province_event = { id = frstory.41 months = 7 }
					}
					else_if = {
						limit = {
							month == 5
						}
						province_event = { id = frstory.41 months = 6 }
					}
					else_if = {
						limit = {
							month == 6
						}
						province_event = { id = frstory.41 months = 5 }
					}
					else_if = {
						limit = {
							month == 7
						}
						province_event = { id = frstory.41 months = 4 }
					}
					else_if = {
						limit = {
							month == 8
						}
						province_event = { id = frstory.41 months = 3 }
					}
					else_if = {
						limit = {
							month == 9
						}
						province_event = { id = frstory.41 months = 2 }
					}
					else_if = {
						limit = {
							month == 10
						}
						province_event = { id = frstory.41 months = 1 }
					}
					else = {
						province_event = { id = frstory.41 }
					}
				}
			}
		}

		##King of Shadows in Alturiak 1374
		if = {
			limit = {
				year = 1374
				month < 2
				NOT = { has_global_flag = king_of_shadows_spawned }
				#later will also check if NWN1 has happened!
			}
			set_global_flag = king_of_shadows_spawned
			c_neverwinter = {
				location = {
					if = {
						limit = {
							month == 0
						}
						province_event = { id = frstory.11 months = 1 }
					}
					else = {
						province_event = { id = frstory.11 }
					}
				}
			}
		}

		##Warlock Knights appear in Hammer 1430
		if = {
			limit = {
				year = 1430
				month < 1
				NOT = { has_global_flag = voice_of_telos_spawned }
				#check for Spellplague happening
			}
			set_global_flag = voice_of_telos_spawned
			c_darmshall = {
				location = {
					province_event = { id = frstory.51 }
				}
			}
		}
	}
}

# character_event = {
# 	id = frmaint.31
# 	hide_window = yes

# 	is_triggered_only = yes

# 	immediate = {
# 		create_character = {
# 			age = 30
# 			random_traits = yes
# 			female = random
# 			religion = event_target:oldroot
# 			culture = event_target:oldroot
# 			dynasty = random
# 		}
# 		new_character = {
# 			religion = event_target:oldroot
# 			add_trait = patron_malar
# 			ROOT = {
# 				abdicate_to = PREV
# 			}
# 		}
# 		clear_event_target = oldroot
# 	}
# }

# character_event = {
# 	id = frmaint.32
# 	hide_window = yes

# 	is_triggered_only = yes

# 	immediate = {
# 		any_artifact = {
# 			limit = { artifact_type = claws_of_malar }
# 			destroy_artifact = this
# 		}
# 	}
# }

#character_event = { # destroys Claws of Malar of heir is not an adherent
#	id = frmaint.33
#	hide_window = yes
#
#	is_triggered_only = yes
#
#	trigger = {
#		any_artifact = {
#			artifact_type = claws_of_malar
#		}
#		# NOT = { trait = patron_malar }
#	}
#
#	immediate = {
#		recalc_succession = yes
#		if = {
#			limit = {
#				current_heir = {
#					NOT = { trait = patron_malar }
#				}
#			}
#			destroy_artifact = claws_of_malar
#		}
#	}
#}

character_event = { # preserve some government types on succession
	id = frmaint.34
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		OR = {
			is_landed = no
			FROM = {
				is_primary_holder_title = yes
				holder_scope = {
					character = ROOT
				}
			}
		}
	}

	immediate = {
		if = {
			limit = {
				FROMFROM = { government = democratic_feudal_government }
			}
			set_character_flag = democratic_feudal_government_preserve
			character_event = { id = frmaint.35 days = 1 }
			break = yes
		}
		if = {
			limit = {
				FROMFROM = { government = theocracy_government }
			}
			set_character_flag = theocracy_government_preserve
			character_event = { id = frmaint.35 days = 1 }
			break = yes
		}
		if = {
			limit = {
				FROMFROM = { government = divine_feudal_government }
			}
			set_character_flag = divine_feudal_government_preserve
			character_event = { id = frmaint.35 days = 1 }
			break = yes
		}
	}
}

character_event = { # clear flags after succession
	id = frmaint.35
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		clr_character_flag = democratic_feudal_government_preserve
		clr_character_flag = theocracy_government_preserve
		clr_character_flag = divine_feudal_government_preserve
		clr_character_flag = promoted_received_title
	}
}

character_event = { # preserve elective succession for promoted barons and landless characters
	id = frmaint.36
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		OR = {
			has_character_flag = promoted_received_title
			government = republic_government
			government = baron_theocracy_government
		}
	}

	immediate = {
		character_event = { id = frmaint.37 days = 1 }
	}
}

character_event = {
	id = frmaint.37
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		OR = {
			government = democratic_feudal_government
			government = theocracy_government
		}
	}

	immediate = {
		if = {
			limit = { government = democratic_feudal_government }
			any_demesne_title = {
				limit = {
					higher_tier_than = BARON
				}
				add_law = {
					law = succ_popular_elective
					cooldown = no
					opinion_effect = no
				}
			}
			break = yes
		}
		if = {
			limit = { government = theocracy_government }
			any_demesne_title = {
				limit = {
					higher_tier_than = BARON
				}
				add_law = {
					law = succ_divine_elective
					cooldown = no
					opinion_effect = no
				}
			}
			break = yes
		}
	}
}

# convert baron tier republics and theocracies upon becoming counts
# Fired from GRANT_LANDED_TITLE_INTERACTION_ACCEPT_EVENT on_action
character_event = {
	id = frmaint.38
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		OR = {
			government = republic_government
			government = baron_theocracy_government
			is_landed = no
		}
	}

	immediate = {
		set_character_flag = promoted_received_title
		if = {
			limit = {
				is_landed = no
			}
			character_event = { id = frmaint.35 days = 1 }
			break = yes
		}
		if = {
			limit = {
				government = republic_government
			}
			set_character_flag = democratic_feudal_government_preserve
			character_event = { id = frmaint.35 days = 1 }
			break = yes
		}
		if = {
			limit = {
				government = baron_theocracy_government
			}
			set_character_flag = theocracy_government_preserve
			character_event = { id = frmaint.35 days = 1 }
			break = yes
		}
	}
}
# maintain popular_elective and divine_elective for rulers that have them
# Fired from GRANT_LANDED_TITLE_INTERACTION_ACCEPT_EVENT and on_new_holder_usurpation on_actions
character_event = {
	id = frmaint.39
	hide_window = yes

	is_triggered_only = yes

	only_playable = yes

	trigger = {
		primary_title = {
			OR = {
				has_law = succ_popular_elective
				has_law = succ_divine_elective
			}
		}
	}

	immediate = {
		character_event = { id = frmaint.37 days = 1 }
	}
}


character_event = {
	id = frmaint.40
	hide_window = yes

	trigger = {
		has_landed_title = d_slave_revolt
		war = no
	}

	is_triggered_only = yes

	immediate = {
		d_slave_revolt = {
			destroy_landed_title = THIS
		}
	}
}

character_event = {
	id = frmaint.41
	hide_window = yes

	is_triggered_only = yes

	#was unsure if it should be character or province, but root is character for on_new_holder_usurpation so...

	trigger = {
		NOR = {
			religion = dwarven_pantheon
			religion = laduguer
			culture_group = dwarf_group
		}
		FROM = {
			location = {
				has_province_modifier = dwarfhold_mod
			}
		}
	}

	immediate = {
		remove_province_modifier = dwarfhold_mod
		add_province_modifier = {
			name = ruined_dwarfhold
			duration = -1
		}
	}
}

character_event = { #10 years villain modifier applied on startup, to avoid unlimited duration
	id = frmaint.42
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		OR = {
			AND = {
				character = c_53001 #Szass Tam
				date >= 1159.1.1
			}
			AND = {
				character = c_56001 #Manshoon
				date >= 1300.1.1
			}
			AND = {
				character = c_120 #Acerak
				date >= 1362.1.1
			}
		}
	}

	immediate = {
		add_character_modifier = { name = true_villain_modifier years = 10 }
	}
}

character_event = { # Destroy army of shadows when king is dead
	id = frmaint.43
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_character_flag = i_am_king_of_shadows
	}

	immediate = {
		k_army_of_shadows = {
			destroy_landed_title = THIS
		}
	}
}

# Lose some titular titles if holder is inadequate
character_event = {
	id = frmaint.44
  hide_window = yes

	only_rulers = yes

	is_triggered_only = yes

	trigger = {
		OR = {
			AND = {
				has_landed_title = k_zhentarim
				NOR = {
					is_evil_religion = yes
					trait = cruel
					trait = impaler
				}
			}
			AND = {
				has_landed_title = k_army_of_shadows
				OR = {
					is_evil_religion = no
					is_undead = no
				}
			}
			AND = {
				has_landed_title = k_hordes_of_dragonspear
				NOR = {
					religion = infernal
					culture = baatezu
					trait = warlock_fiend
				}
			}
			AND = {
				has_landed_title = k_a_brotherhood
				olrox_artifact_purearcane_requirement = no
			}
			AND = {
				has_landed_title = d_brotherhood_of_true_flame
				NOR = {
					olrox_artifact_purearcane_requirement = yes
					z_shadow = yes
				}
			}
		}
	}

	immediate = {
		if = {
			limit = {
				has_landed_title = k_zhentarim
				NOR = {
					is_evil_religion = yes
					trait = cruel
					trait = impaler
				}
			}
			character_event = { id = ZHE.501 }
		}
		else_if = {
			limit = {
				has_landed_title = k_army_of_shadows
				OR = {
					is_evil_religion = no
					is_undead = no
				}
			}
			character_event = { id = frstory.16 }
		}
		else_if = {
			limit = {
				has_landed_title = k_hordes_of_dragonspear
				NOR = {
					religion = infernal
					culture = baatezu
					trait = warlock_fiend
				}
			}
			character_event = { id = frstory.77 }
		}
		else_if = {
			limit = {
				has_landed_title = k_a_brotherhood
				olrox_artifact_purearcane_requirement = no
			}
			character_event = { id = BRO.6000 }
		}
		else_if = {
			limit = {
				has_landed_title = d_brotherhood_of_true_flame
				NOR = {
					olrox_artifact_purearcane_requirement = yes
					z_shadow = yes
				}
			}
			character_event = { id = BRO.6001 }
		}
	}
}

#Clear monk meditations if incapable
character_event = {
	id = frmaint.45
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_incapable = yes
		OR = {
			has_character_modifier = monk_diplo
			has_character_modifier = monk_martial
			has_character_modifier = monk_stewardship
			has_character_modifier = monk_intrigue
			has_character_modifier = monk_learning
		}
	}

	immediate = {
		remove_character_modifier = monk_diplo
		remove_character_modifier = monk_martial
		remove_character_modifier = monk_stewardship
		remove_character_modifier = monk_intrigue
		remove_character_modifier = monk_learning
	}
}

character_event = { # repeal inappropriate law - checked every 10 years
	id = frmaint.46
	desc = EVTDESC_FRMAINT_46
	picture = GFX_evt_council_quarrelling

	only_playable = yes

	is_triggered_only = yes

	trigger = {
		OR = {
			AND = {
				has_law = revoke_title_law_2
				holder_scope = {
					OR = {
						religion = ten_thousand_gods
						olrox_is_good_religion_trigger = yes
						has_religion_feature = religion_cosmopolitan
					}
				}
			}
			AND = {
				OR = {
					has_law = vassal_wars_law_1
					has_law = vassal_wars_law_2
				}
				holder_scope = {
					NOR = {
						primary_title = {
							has_law = ze_administration_laws_2
						}
						religion = ten_thousand_gods
						olrox_is_good_religion_trigger = yes
					}
				}
			}
			#AND = { #we'll see about this one
			#	has_law = law_voting_power_0
			#	holder_scope = {
			#		OR = {
			#			religion = ten_thousand_gods
			#			olrox_is_good_religion_trigger = yes
			#		}
			#	}
			#}
		}
	}

	option = {
		name = EVTOPTA_FRMAINT_46
		if = {
			limit = {
				has_law = revoke_title_law_2
				holder_scope = {
					OR = {
						religion = ten_thousand_gods
						olrox_is_good_religion_trigger = yes
						has_religion_feature = religion_cosmopolitan
					}
				}
			}
			primary_title = {
				add_law = revoke_title_law_1
			}
		}
		if = {
			limit = {
				OR = {
					has_law = vassal_wars_law_1
					has_law = vassal_wars_law_2
				}
				holder_scope = {
					NOR = {
						primary_title = {
							has_law = ze_administration_laws_2
						}
						religion = ten_thousand_gods
						olrox_is_good_religion_trigger = yes
					}
				}
			}
			primary_title = {
				add_law = vassal_wars_law_0
			}
		}
		#if = {
		#	limit = {
		#		has_law = law_voting_power_0
		#		holder_scope = {
		#			OR = {
		#				religion = ten_thousand_gods
		#				olrox_is_good_religion_trigger = yes
		#			}
		#		}
		#	}
		#	primary_title = {
		#		add_law = law_voting_power_1
		#	}
		#}
	}
	option = {
		name = EVTOPTB_FRMAINT_46
		any_realm_character = {
			opinion = {
				who = ROOT
				modifier = opinion_tyrant
				months = 180
			}
		}
	}
}
