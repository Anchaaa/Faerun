namespace = TWI

########################JOINING############################

#From on_character_ask_to_join_society
character_event = {
    id = TWI.100
    hide_window = yes
    is_triggered_only = yes
    trigger = {
    	FROM = { leader = { society_member_of = twisted_rune } }
    }
    immediate = {
    	if = { #Find a non-prisoner member
    		limit = { FROM = { leader = { prisoner = yes } } }
    		FROM = {
    			any_society_member = {
    				limit = {
    					society_member_of = twisted_rune
    					society_rank == 4
    					prisoner = no
    				}
    				character_event = { id = TWI.101 }
    				break = yes
    			}
    			any_society_member = {
    				limit = {
    					society_member_of = twisted_rune
    					society_rank == 3
    					prisoner = no
    				}
    				character_event = { id = TWI.101 }
    				break = yes
    			}
    			any_society_member = {
    				limit = {
    					society_member_of = twisted_rune
    					society_rank == 2
    					prisoner = no
    				}
    				character_event = { id = TWI.101 }
    				break = yes
    			}
    			any_society_member = {
    				limit = {
    					society_member_of = twisted_rune
    					society_rank == 1
    					prisoner = no
    				}
    				character_event = { id = TWI.101 }
    				break = yes
    			}
    		}
			#Everyone is somehow in prison so just use teh leader anyway
    	}
    	FROM = { leader = { character_event = { id = TWI.101 } } }
    }
}

#Ping event
character_event = {
    id = TWI.101
    hide_window = yes
    is_triggered_only = yes
    immediate = {
    	FROM = { letter_event = { id = TWI.102 } }
    }
}

#Welcome letter
character_event = {
    id = TWI.102
    desc = EVTDESC_TWI_102
    picture = GFX_evt_acererak_1

    is_triggered_only = yes

    immediate = { set_character_flag = society_join_block }

    option = {
      name = EVTOPTA_TWI_102

      join_society = twisted_rune

      clr_character_flag = society_join_block
    }
}

########################AI JOIN AND AI RANK UP###########################

character_event = { #force the AI to join a society
	id = TWI.110
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { #if he's already a member, will force a rank up 25% of the time
				ai = yes
				prisoner = no
				NOT = { trait = incapable }
				society_member_of = twisted_rune
				society_rank <= 3
				society_can_rank_up = yes
			}
			random_list = {
				75 = {}
				25 = {
					society_rank_up = 1
				}
			}
		}
		if = { #force the joining event on AI
			limit = {
				ai = yes
				prisoner = no
				NOT = { trait = incapable }
				is_adult = yes
				is_in_society = no
				controls_religion = no
				block_general_event_trigger = no
			}
			character_event = { id = TWI.111 }
		}
	}
}

character_event = { #AI join event
	id = TWI.111
	hide_window = yes

	is_triggered_only = yes

  immediate = {
    random_list = {
      60 = { # do nothing
      }
      40 = {
        trigger = {
          can_join_society = twisted_rune
        }
        modifier = {
          factor = 2
          OR = {
            trait = impaler
            trait = schemer
            trait = scholar
          }
        }
        modifier = {
          factor = 2
          is_undead = yes
        }
        modifier = {
          factor = 2
          trait = patient
        }
        modifier = {
          factor = 2
          trait = cruel
        }
        modifier = {
          factor = 2
          trait = deceitful
        }
        modifier = {
          factor = 0
          trait = kind
        }
        modifier = {
          factor = 0
          is_benevolent_trigger = yes
        }
        modifier = {
          factor = 0.1
          is_landed = no
        }
        modifier = {
          factor = 0.5
          trait = honest
        }
        join_society = twisted_rune
        random_list = { # Artificially increase society influence for balance purposes, not really useful in my opinion.
          75 = {
            modifier = {
              factor = 0
              society_influence >= 30
            }
          }
          25 = {
          }
        }
        if = { # Make grandmaster is there is none
          limit = {
            NOT = {
              society = {
                any_society_member = {
                  is_society_grandmaster = yes
                }
              }
            }
          }
          set_society_grandmaster = yes
        }
      }
    }
  }
}

#################################DECISIONS######################################

#undead invited
character_event = {
    id = TWI.25000
    desc = EVTDESC_TWI_25000
		picture = GFX_evt_death_knight
    border = GFX_event_normal_frame_war

    is_triggered_only = yes

    option = {
        name = EVTOPTA_EME_25000
        event_target:invited_lodge_soldier = {
            show_scope_change = no
            opinion = {
                modifier = opinion_loyal_servant
                who = ROOT
                years = 10
            }
        }
        ai_chance = {
            factor = 100
        }
    }
}

#turn character undead
character_event = {
  id = TWI.200
  is_triggered_only = yes
  desc = EVTDESC_TWI_200
  picture = GFX_evt_death_knight

  option = { #lich
    name = EVTOPTA_TWI_200
    trigger = {
      OR = {
        trait = expert_wizard
        trait = master_wizard
        trait = renowned_wizard
        trait = legendary_wizard
        trait = expert_sorcerer
        trait = master_sorcerer
        trait = renowned_sorcerer
        trait = legendary_sorcerer
        trait = expert_cleric
        trait = master_cleric
        trait = renowned_cleric
        trait = legendary_cleric
        trait = expert_warlock
        trait = master_warlock
        trait = renowned_warlock
        trait = legendary_warlock
      }
    }
    add_trait = lich
    turn_lich_effect = yes
    hidden_tooltip = {
      FROMFROM = {
        clr_character_flag = turning_vassal_undead
      }
    }
    hidden_tooltip = {
      mother = {
        opinion = {
          modifier = opinion_mutilated_close_kin
          who = FROMFROM
        }
      }
      father = {
        opinion = {
          modifier = opinion_mutilated_close_kin
          who = FROMFROM
        }
      }
      spouse = {
        opinion = {
          modifier = opinion_mutilated_close_kin
          who = FROMFROM
        }
      }
      any_child = {
        opinion = {
          modifier = opinion_mutilated_close_kin
          who = FROMFROM
        }
      }
      if = {
        limit = {
          FROMFROM = {
            NOT = { dynasty = ROOT }
            NOT = { sibling = ROOT }
          }
        }
        any_sibling = {
          opinion = {
            modifier = opinion_mutilated_close_kin
            who = FROMFROM
          }
        }
        any_dynasty_member = {
          opinion = {
            modifier = opinion_mutilated_family
            who = FROMFROM
          }
        }
      }
    }
    if = {
      limit = {
        has_game_rule = {
          name = punishment_release_prisoner
          value = on
        }
      }
      prisoner = no
    }
    opinion = {
      modifier = opinion_loyal_servant
      who = FROMFROM
      years = 10
    }
  }

  option = { #vampire
    name = EVTOPTB_TWI_200
    trigger = {
      OR = {
        trait = journeyman_wizard
        trait =	expert_wizard
        trait =	master_wizard
        trait =	renowned_wizard
        trait = legendary_wizard
        trait = journeyman_bard
    		trait = expert_bard
    		trait = master_bard
    		trait = renowned_bard
    		trait = legendary_bard
        trait = journeyman_sorcerer
    		trait = expert_sorcerer
    		trait = master_sorcerer
    		trait = renowned_sorcerer
    		trait = legendary_sorcerer
        trait = journeyman_warlock
    		trait = expert_warlock
    		trait = master_warlock
    		trait = renowned_warlock
    		trait = legendary_warlock
        trait = journeyman_cleric
    		trait =	expert_cleric
    		trait =	master_cleric
    		trait =	renowned_cleric
    		trait = legendary_cleric
        trait = journeyman_paladin
    		trait = expert_paladin
    		trait = master_paladin
    		trait = renowned_paladin
    		trait = legendary_paladin
        trait = journeyman_druid
    		trait = expert_druid
    		trait = master_druid
    		trait = renowned_druid
    		trait = legendary_druid
        trait = journeyman_fighter
    		trait =	expert_fighter
    		trait =	master_fighter
    		trait =	renowned_fighter
    		trait = legendary_fighter
        trait = journeyman_ranger
    		trait = expert_ranger
    		trait = master_ranger
    		trait = renowned_ranger
    		trait = legendary_ranger
        trait = journeyman_barbarian
    		trait = expert_barbarian
    		trait = master_barbarian
    		trait = renowned_barbarian
    		trait = legendary_barbarian
        trait = journeyman_rogue
    		trait =	expert_rogue
    		trait =	master_rogue
    		trait =	renowned_rogue
    		trait = legendary_rogue
        trait = journeyman_shadow
    		trait = expert_shadow
    		trait = master_shadow
    		trait = renowned_shadow
    		trait = legendary_shadow
        trait = journeyman_monk
    		trait = expert_monk
    		trait = master_monk
    		trait = renowned_monk
    		trait = legendary_monk
      }
      vampire_incompatible_race = no
    }
    add_trait = vampire
    turn_vampire_effect = yes
    hidden_tooltip = {
      FROMFROM = {
        clr_character_flag = turning_vassal_undead
      }
    }
    hidden_tooltip = {
      mother = {
        opinion = {
          modifier = opinion_mutilated_close_kin
          who = FROMFROM
        }
      }
      father = {
        opinion = {
          modifier = opinion_mutilated_close_kin
          who = FROMFROM
        }
      }
      spouse = {
        opinion = {
          modifier = opinion_mutilated_close_kin
          who = FROMFROM
        }
      }
      any_child = {
        opinion = {
          modifier = opinion_mutilated_close_kin
          who = FROMFROM
        }
      }
      if = {
        limit = {
          FROMFROM = {
            NOT = { dynasty = ROOT }
            NOT = { sibling = ROOT }
          }
        }
        any_sibling = {
          opinion = {
            modifier = opinion_mutilated_close_kin
            who = FROMFROM
          }
        }
        any_dynasty_member = {
          opinion = {
            modifier = opinion_mutilated_family
            who = FROMFROM
          }
        }
      }
    }
    if = {
      limit = {
        has_game_rule = {
          name = punishment_release_prisoner
          value = on
        }
      }
      prisoner = no
    }
    opinion = {
      modifier = opinion_loyal_servant
      who = FROMFROM
      years = 10
    }
  }

  option = { #vampire spawn
    name = EVTOPTC_TWI_200
    trigger = {
      NOR = {
        trait = journeyman_wizard
        trait =	expert_wizard
        trait =	master_wizard
        trait =	renowned_wizard
        trait = legendary_wizard
        trait = journeyman_bard
    		trait = expert_bard
    		trait = master_bard
    		trait = renowned_bard
    		trait = legendary_bard
        trait = journeyman_sorcerer
    		trait = expert_sorcerer
    		trait = master_sorcerer
    		trait = renowned_sorcerer
    		trait = legendary_sorcerer
        trait = journeyman_warlock
    		trait = expert_warlock
    		trait = master_warlock
    		trait = renowned_warlock
    		trait = legendary_warlock
        trait = journeyman_cleric
    		trait =	expert_cleric
    		trait =	master_cleric
    		trait =	renowned_cleric
    		trait = legendary_cleric
        trait = journeyman_paladin
    		trait = expert_paladin
    		trait = master_paladin
    		trait = renowned_paladin
    		trait = legendary_paladin
        trait = journeyman_druid
    		trait = expert_druid
    		trait = master_druid
    		trait = renowned_druid
    		trait = legendary_druid
        trait = journeyman_fighter
    		trait =	expert_fighter
    		trait =	master_fighter
    		trait =	renowned_fighter
    		trait = legendary_fighter
        trait = journeyman_ranger
    		trait = expert_ranger
    		trait = master_ranger
    		trait = renowned_ranger
    		trait = legendary_ranger
        trait = journeyman_barbarian
    		trait = expert_barbarian
    		trait = master_barbarian
    		trait = renowned_barbarian
    		trait = legendary_barbarian
        trait = journeyman_rogue
    		trait =	expert_rogue
    		trait =	master_rogue
    		trait =	renowned_rogue
    		trait = legendary_rogue
        trait = journeyman_shadow
    		trait = expert_shadow
    		trait = master_shadow
    		trait = renowned_shadow
    		trait = legendary_shadow
        trait = journeyman_monk
    		trait = expert_monk
    		trait = master_monk
    		trait = renowned_monk
    		trait = legendary_monk
      }
      vampire_incompatible_race = no
    }

    add_trait = vampire_spawn
    turn_vampire_effect = yes
    hidden_tooltip = {
      FROMFROM = {
        clr_character_flag = turning_vassal_undead
      }
    }
    hidden_tooltip = {
      mother = {
        opinion = {
          modifier = opinion_mutilated_close_kin
          who = FROMFROM
        }
      }
      father = {
        opinion = {
          modifier = opinion_mutilated_close_kin
          who = FROMFROM
        }
      }
      spouse = {
        opinion = {
          modifier = opinion_mutilated_close_kin
          who = FROMFROM
        }
      }
      any_child = {
        opinion = {
          modifier = opinion_mutilated_close_kin
          who = FROMFROM
        }
      }
      if = {
        limit = {
          FROMFROM = {
            NOT = { dynasty = ROOT }
            NOT = { sibling = ROOT }
          }
        }
        any_sibling = {
          opinion = {
            modifier = opinion_mutilated_close_kin
            who = FROMFROM
          }
        }
        any_dynasty_member = {
          opinion = {
            modifier = opinion_mutilated_family
            who = FROMFROM
          }
        }
      }
    }
    if = {
      limit = {
        has_game_rule = {
          name = punishment_release_prisoner
          value = on
        }
      }
      prisoner = no
    }
    opinion = {
      modifier = opinion_loyal_servant
      who = FROMFROM
      years = 10
    }
  }

  option = { #generic undead
    name = EVTOPTD_TWI_200

    turn_undead_effect = yes
    hidden_tooltip = {
      FROMFROM = {
        clr_character_flag = turning_vassal_undead
      }
    }
    hidden_tooltip = {
      mother = {
        opinion = {
          modifier = opinion_mutilated_close_kin
          who = FROMFROM
        }
      }
      father = {
        opinion = {
          modifier = opinion_mutilated_close_kin
          who = FROMFROM
        }
      }
      spouse = {
        opinion = {
          modifier = opinion_mutilated_close_kin
          who = FROMFROM
        }
      }
      any_child = {
        opinion = {
          modifier = opinion_mutilated_close_kin
          who = FROMFROM
        }
      }
      if = {
        limit = {
          FROMFROM = {
            NOT = { dynasty = ROOT }
            NOT = { sibling = ROOT }
          }
        }
        any_sibling = {
          opinion = {
            modifier = opinion_mutilated_close_kin
            who = FROMFROM
          }
        }
        any_dynasty_member = {
          opinion = {
            modifier = opinion_mutilated_family
            who = FROMFROM
          }
        }
      }
    }
    if = {
      limit = {
        has_game_rule = {
          name = punishment_release_prisoner
          value = on
        }
      }
      prisoner = no
    }
    opinion = {
      modifier = opinion_loyal_servant
      who = FROMFROM
      years = 10
    }
  }
}

#fail to turn a character undead, target notified
character_event = {
  id = TWI.201
  is_triggered_only = yes
  desc = EVTDESC_TWI_201
  picture = GFX_evt_death_knight

  option = {
    name = EVTOPTA_TWI_201
    add_rival = FROMFROM
    if = {
      limit = {
        is_landed = no
      }
      banish = yes
    }
  }
}

#fail to turn a character undead, perpetrator notified
character_event = {
  id = TWI.202
  is_triggered_only = yes
  desc = EVTDESC_TWI_202
  picture = GFX_evt_stressed_ruler

  option = {
    name = EVTOPTA_TWI_202
  }
}

###MISSIONS### (start on 1000)

#Mission tombola
character_event = {
	id = TWI.1000
	hide_window = yes

	is_triggered_only = yes
	is_in_society = yes
	only_capable = yes

	trigger = {
		society_member_of = twisted_rune
		has_any_quest = no
		NOT = { has_character_modifier = quest_cooldown_timer }
		NOT = { is_inaccessible_trigger = yes }
	}

	immediate = {
		random_society_member = {
			limit = {
				NOT = { character = ROOT }
				society_member_of = twisted_rune
			}
			save_event_target_as = quest_giver
		}

		random_list = {
			15 = {
				character_event = { id = TWI.1001 } #Agent Elimination
			}
			20 = {
				modifier = {
					factor = 0
					ai = no
				}
				#Do nothing for AI
			}
		}
	}
}

#MISSION: #Agent Elimination
character_event = {
  id = TWI.1001
  hide_window = yes

  is_triggered_only = yes

  trigger = {
    any_realm_character = {
      NOT = {
        is_inaccessible_trigger = yes
        character = ROOT
      }
      prisoner = no
      OR = {
        society_member_of = arcane_brotherhood
        society_member_of = brotherhood_of_true_flame
        society_member_of = cult_of_the_dragon
        society_member_of = shadow_thieves
        society_member_of = night_masks
        society_member_of = shadow_telflamm
        society_member_of = harpers
        society_member_of = kuo_tan_society
        society_member_of = eldreth_veluuthra
        society_member_of = the_satanists
        society_member_of = black_network
        society_member_of = tsui_tong
        society_member_of = storm_rune_society
        society_member_of = warlock_knights
      }
      NOT = { same_society_as = ROOT }
    }
  }

	immediate = {
    random_realm_character = {
      limit = {
        NOT = { is_inaccessible_trigger = yes }
        NOT = { character = ROOT }
        prisoner = no
        OR = {
          society_member_of = arcane_brotherhood
          society_member_of = brotherhood_of_true_flame
          society_member_of = cult_of_the_dragon
          society_member_of = shadow_thieves
          society_member_of = night_masks
          society_member_of = shadow_telflamm
          society_member_of = harpers
          society_member_of = kuo_tan_society
          society_member_of = eldreth_veluuthra
          society_member_of = the_satanists
          society_member_of = black_network
          society_member_of = tsui_tong
          society_member_of = storm_rune_society
          society_member_of = warlock_knights
        }
        NOT = { same_society_as = ROOT }
      }
      save_event_target_as = elimination_target
    }

    if = {
			limit = {
				event_target:elimination_target = { always = yes }
				is_within_diplo_range = event_target:elimination_target
			}
			event_target:quest_giver = {
				character_event = { id = TWI.1002 }
			}
		}
	}
}

#Ping event for quest giver
character_event = {
	id = TWI.1002
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { event_target:elimination_target = { always = yes } }
			FROM = { society_quest_event = { id = TWI.1003 days = 7 random = 7 } }
		}
	}
}

#You get your target
society_quest_event = {
	id = TWI.1003
	title = quest_agent_elimination
	quest_target = event_target:elimination_target
  desc = EVTDESC_TWI_1003

	trigger = {
		is_in_society = yes
		event_target:elimination_target = {
			is_alive = yes
      prisoner = no
		}
	}

	is_triggered_only = yes

	option = {
		name = ACCEPT

		event_target:elimination_target = {
			set_quest_target = {
				id = quest_agent_elimination
				holder = ROOT
			}
		}

		hidden_effect = {
			if = { #Makes sure the AI actually does the mission
				limit = { ai = yes }
				random_list = {
					20 = {
						trigger = {
							attribute_diff = { character = event_target:elimination_target attribute = intrigue value = 6 }
						}
						modifier = { intrigue = 12 factor = 1.2 }
						modifier = { intrigue = 14 factor = 1.2 }
						modifier = { intrigue = 16 factor = 1.2 }
						modifier = { intrigue = 18 factor = 1.2 }
						character_event = { id = TWI.1004 days = 150 random = 100 } #Triggers plot event
					}
					20 = {
						trigger = { attribute_diff = { character = event_target:elimination_target attribute = intrigue value = 3 } }
						modifier = { intrigue = 12 factor = 1.2 }
						modifier = { intrigue = 14 factor = 1.2 }
						modifier = { intrigue = 16 factor = 1.2 }
						modifier = { intrigue = 18 factor = 1.2 }
						character_event = { id = TWI.1004 days = 300 random = 100 } #Triggers plot event
					}
					20 = {
						modifier = { intrigue = 12 factor = 1.2 }
						modifier = { intrigue = 14 factor = 1.2 }
						modifier = { intrigue = 16 factor = 1.2 }
						modifier = { intrigue = 18 factor = 1.2 }
						character_event = { id = TWI.1004 days = 500 random = 300 } #Triggers plot event
					}
					40 = {
						modifier = { event_target:elimination_target = { intrigue = 12 } factor = 1.2 }
						modifier = { event_target:elimination_target = { intrigue = 14 } factor = 1.2 }
						modifier = { event_target:elimination_target = { intrigue = 16 } factor = 1.2 }
						modifier = { event_target:elimination_target = { intrigue = 18 } factor = 1.2 }
						modifier = { event_target:elimination_target = { tier = COUNT } factor = 1.5 }
						modifier = { event_target:elimination_target = { tier = DUKE } factor = 2 }
						modifier = { event_target:elimination_target = { tier = KING } factor = 2.5 }
						modifier = { event_target:elimination_target = { tier = EMPEROR } factor = 5 }
						character_event = { id = TWI.1005 } #Clears quest
					}
				}
			}
		}
		event_target:elimination_target = {
			set_character_flag = appear_in_option
			clr_character_flag = appear_in_option
		}
	}

	option = {
		name = DECLINE
		custom_tooltip = { text = decline_quest_tooltip }

		hidden_effect = {
			add_character_modifier = {
				name = quest_cooldown_timer
				hidden = yes
				days = 1000
			}
		}

		ai_chance = { factor = 0 }
	}
}

#Helps AI do mission
character_event = {
  id = TWI.1004
  hide_window = yes
  is_triggered_only = yes
  trigger = {
  	NOT = { plot_target_char = { is_quest_target_of = ROOT } }
  	has_quest = quest_agent_elimination
  }
  immediate = {
  	character_event = { id = TWI.1008 }
  }
}

#AI clean-up
character_event = {
    id = TWI.1005
    hide_window = yes
    is_triggered_only = yes
    trigger = {
    	NOT = { plot_target_char = { is_quest_target_of = ROOT } }
    	has_quest = quest_agent_elimination
    }
    immediate = {
    	clr_quest = {
    		id = quest_agent_elimination
    		failure = yes
    	}
    }
}

#AI mission assassination attempt
character_event = {
	id = TWI.1008
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		FROM = { save_event_target_as = assassin }
    random_list = {
      60 = { #Kill
        random_list = {
          75 = {	#Not discovered
            modifier = {
              event_target:assassin = { intrigue = 12 }
              factor = 1.5
            }
            modifier = {
              event_target:assassin = { intrigue = 15 }
              factor = 1.5
            }
            event_target:elimination_target = { death = { death_reason = death_murder_unknown killer = event_target:assassin } }
          }
          25 = {	#Discovered
            modifier = {
              event_target:assassin = { NOT = { intrigue = 8 } }
              factor = 1.5
            }
            modifier = {
              event_target:assassin = { NOT = { intrigue = 5 } }
              factor = 1.5
            }
            event_target:elimination_target = { death = { death_reason = death_murder killer = event_target:assassin } }
            event_target:assassin = { character_event = { id = 10 } }
          }
        }
        modifier = {
          factor = 3
          event_target:elimination_target = { trait = incapable }
        }
        modifier = {
          factor = 2
          event_target:elimination_target = { prisoner = yes }
        }
        modifier = {
          factor = 1.3
          FROM = { attribute_diff = { character = event_target:elimination_target attribute = intrigue value = 2 } }
        }
        modifier = {
          factor = 1.3
          FROM = { attribute_diff = { character = event_target:elimination_target attribute = intrigue value = 4 } }
        }
        modifier = {
          factor = 1.3
          FROM = { attribute_diff = { character = event_target:elimination_target attribute = intrigue value = 6 } }
        }
        modifier = {
          factor = 1.3
          FROM = { combat_rating_diff = { character = event_target:elimination_target value = 10 } }
        }
        modifier = {
          factor = 1.3
          FROM = { combat_rating_diff = { character = event_target:elimination_target value = 20 } }
        }
        modifier = {
          factor = 1.3
          FROM = { combat_rating_diff = { character = event_target:elimination_target value = 30 } }
        }
      }
      40 = { #No Kill
        random_list = {
          50 = {	#Not discovered
            modifier = {
              event_target:assassin = { intrigue = 12 }
              factor = 1.5
            }
            modifier = {
              event_target:assassin = { intrigue = 15 }
              factor = 1.5
            }
            event_target:assassin = {
              clr_quest = {
            		id = quest_agent_elimination
            		failure = yes
            	}
            }
          }
          25 = {	#Discovered and wounded
            modifier = {
              event_target:assassin = { NOT = { intrigue = 8 } }
              factor = 1.5
            }
            modifier = {
              event_target:assassin = { NOT = { intrigue = 5 } }
              factor = 1.5
            }
            event_target:assassin = {
              clr_quest = {
            		id = quest_agent_elimination
            		failure = yes
            	}
            }
            random_list = {
        			70 = {
        				event_target:assassin = {
        					tooltip = { add_trait = wounded }
        				}
        			}
        			30 = {
        				event_target:assassin = {
        					tooltip = { add_maimed_trait_effect = yes }
        				}
        			}
        		}
            event_target:assassin = { character_event = { id = 11 } }
          }
          25 = { #Assassin is Killed
            modifier = {
              factor = 1.3
              event_target:elimination_target = { combat_rating_diff = { character = event_target:assassin value = 10 } }
            }
            modifier = {
              factor = 1.3
              event_target:elimination_target = { combat_rating_diff = { character = event_target:assassin value = 20 } }
            }
            modifier = {
              factor = 1.3
              event_target:elimination_target = { combat_rating_diff = { character = event_target:assassin value = 30 } }
            }
            event_target:assassin = { death = { death_reason = death_battle killer = event_target:elimination_target } }
            event_target:assassin = { character_event = { id = 11 } }
          }
        }
        modifier = {
          factor = 1.3
          event_target:elimination_target = { attribute_diff = { character = event_target:assassin attribute = intrigue value = 2 } }
        }
        modifier = {
          factor = 1.3
          event_target:elimination_target = { attribute_diff = { character = event_target:assassin attribute = intrigue value = 4 } }
        }
        modifier = {
          factor = 1.3
          event_target:elimination_target = { attribute_diff = { character = event_target:assassin attribute = intrigue value = 6 } }
        }
        modifier = {
          factor = 1.3
          event_target:elimination_target = { combat_rating_diff = { character = event_target:assassin value = 10 } }
        }
        modifier = {
          factor = 1.3
          event_target:elimination_target = { combat_rating_diff = { character = event_target:assassin value = 20 } }
        }
        modifier = {
          factor = 1.3
          event_target:elimination_target = { combat_rating_diff = { character = event_target:assassin value = 30 } }
        }
      }
    }
	}
}
