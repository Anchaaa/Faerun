namespace = racial_aging

#This first is hidden and triggers for the long lived races and flag them eligible for racial_aging.4 where they become infirm at a certain age based on their health
character_event = {
	id = racial_aging.0
	min_age = 100
	hide_window = yes

	is_triggered_only = yes #from on_decade pulse

	trigger = {
		NOR = { 
			has_character_flag = racial_aging0
			has_character_flag = racial_aging1
		}
		BR_long_lived_races = yes
		faerun_immortal_race_trigger = no
		is_old_enough_to_die_trigger = yes
	}
	
	immediate = {
		set_character_flag = racial_aging0
	}
}


#This event makes the long lived races infirm for a period, before flagging them eligible for racial_aging.2 where they die of old age
character_event = {
	id = racial_aging.1
	desc = "racial_aging1desc"
	picture = GFX_evt_feast

	is_triggered_only = yes #from racial_aging.4

	option = {
		name = "OK"
		trigger = {
			NOR = { 
				faerun_immortal_race_trigger = yes
				faerun_secret_immortal_race_trigger = yes
			}
		}
		hidden_effect = {
			clr_character_flag = racial_aging0
			set_character_flag = racial_aging1
		}
		add_trait = infirm
	}
	option = {
		name = EVTOPTB_racial_aging_1
		trigger = {
			AND = {
				faerun_immortal_race_trigger = yes
				faerun_secret_immortal_race_trigger = no
			}
		}
		hidden_effect = {
			clr_character_flag = racial_aging0
		}
		
	}
	option = {
		name = EVTOPTB_racial_aging_2
		trigger = {
			faerun_secret_immortal_race_trigger = yes
		}
		hidden_effect = {
			clr_character_flag = racial_aging0
		}
		character_event = { id = secret_identity.0 }
	}
}

character_event = {
	id = racial_aging.2
	hide_window = yes

	is_triggered_only = yes #from on_decade_pulse

	has_character_flag = racial_aging1

	immediate = {
		hidden_effect = {
			clr_character_flag = racial_aging1
		}
		remove_trait = infirm
		if = {
			limit = {
				NOT = { faerun_immortal_race_trigger = yes }
			}
			death = { death_reason = death_longlived }
		}
	}

	weight_multiplier = {
		factor = 1
		death_of_old_age_score = yes

		additive_modifier = {
			value = 10000
			
			is_too_old_to_live_trigger = yes
		}
	}
}

# Toggle creature traits to get long-lived races to grow out of childhood and later into old age.
character_event = {
	id = racial_aging.3
	hide_window = yes
	is_triggered_only = yes # on_adulthood and yearly pulse
	max_age = 256 # Integer overflow

	trigger = {
		olrox_all_immortals_trigger = yes
		OR = {
			age < 25
			has_character_flag = racial_aging0
			has_character_flag = racial_aging1
			#trait = undead

			trigger_if = {
				limit = { age == 40 }

				NOR = {
					trait = immortal
					trait = avatar
				}
			}
		}
	}

	immediate = {
		if = {
			limit = { trait = longevity }
			set_character_flag = longevity_character
			remove_trait = longevity
		}
		if = {
			limit = { trait = immortal }
			set_character_flag = immortal_character
			remove_trait = immortal
		}
		if = {
			limit = { trait = avatar }
			set_character_flag = avatar_character
			remove_trait = avatar
		}

		trigger_switch = {
			on_trigger = trait
			creature_drow = {
				remove_trait = creature_drow
				add_trait = creature_drow
			}
			creature_elf = {
				remove_trait = creature_elf
				add_trait = creature_elf
			}
			creature_half_elf = {
				remove_trait = creature_half_elf
				add_trait = creature_half_elf
			}
			creature_feyri = {
				remove_trait = creature_feyri
				add_trait = creature_feyri
			}
			creature_draegloth = {
				remove_trait = creature_draegloth
				add_trait = creature_draegloth
			}
			creature_treant = {
				remove_trait = creature_treant
				add_trait = creature_treant
			}
			creature_hengeyokai = {
				remove_trait = creature_hengeyokai
				add_trait = creature_hengeyokai
			}
			creature_centaur = {
				remove_trait = creature_centaur
				add_trait = creature_centaur
			}
			creature_dwarf = {
				remove_trait = creature_dwarf
				add_trait = creature_dwarf
			}
			creature_troll = {
				remove_trait = creature_troll
				add_trait = creature_troll
			}
			creature_gnome = {
				remove_trait = creature_gnome
				add_trait = creature_gnome
			}
			creature_hag = {
				remove_trait = creature_hag
				add_trait = creature_hag
			}
			creature_halfling = {
				remove_trait = creature_halfling
				add_trait = creature_halfling
			}
			creature_deep_imaskari = {
				remove_trait = creature_deep_imaskari
				add_trait = creature_deep_imaskari
			}
			creature_illithid = {
				remove_trait = creature_illithid
				add_trait = creature_illithid
			}
			creature_ulitharid = {
				remove_trait = creature_ulitharid
				add_trait = creature_ulitharid
			}
			creature_elder_brain = {
				remove_trait = creature_elder_brain
				add_trait = creature_elder_brain
			}
			creature_aboleth = {
				remove_trait = creature_aboleth
				add_trait = creature_aboleth
			}
			creature_sarrukh = {
				remove_trait = creature_sarrukh
				add_trait = creature_sarrukh
			}
			creature_naga = {
				remove_trait = creature_naga
				add_trait = creature_naga
			}
			creature_lamia = {
				remove_trait = creature_lamia
				add_trait = creature_lamia
			}
			creature_dragon = {
				remove_trait = creature_dragon
				add_trait = creature_dragon
			}
			creature_saurial = {
				remove_trait = creature_saurial
				add_trait = creature_saurial
			}
			creature_sahuagin = {
				remove_trait = creature_sahuagin
				add_trait = creature_sahuagin
			}
			creature_malenti = {
				remove_trait = creature_malenti
				add_trait = creature_malenti
			}
			creature_aasimar = {
				remove_trait = creature_aasimar
				add_trait = creature_aasimar
			}
			creature_fiend = {
				remove_trait = creature_fiend
				add_trait = creature_fiend
			}
			creature_genie = {
				remove_trait = creature_genie
				add_trait = creature_genie
			}
			creature_angel = {
				remove_trait = creature_angel
				add_trait = creature_angel
			}
			creature_construct = {
				remove_trait = creature_construct
				add_trait = creature_construct
			}
			lifespan_giant_stone = {
				remove_trait = lifespan_giant_stone
				add_trait = lifespan_giant_stone
			}
			lifespan_giant_storm = {
				remove_trait = lifespan_giant_storm
				add_trait = lifespan_giant_storm
			}
			lifespan_giant_cloud = {
				remove_trait = lifespan_giant_cloud
				add_trait = lifespan_giant_cloud
			}
			lifespan_giant_fire = {
				remove_trait = lifespan_giant_fire
				add_trait = lifespan_giant_fire
			}
			lifespan_giant_frost = {
				remove_trait = lifespan_giant_frost
				add_trait = lifespan_giant_frost
			}
			lifespan_giant_hill = {
				remove_trait = lifespan_giant_hill
				add_trait = lifespan_giant_hill
			}
			lifespan_earth_titan = {
				remove_trait = lifespan_earth_titan
				add_trait = lifespan_earth_titan
			}
			elder_orb = {
				remove_trait = elder_orb
				add_trait = elder_orb
			}
		}

		if = {
			limit = { has_character_flag = longevity_character }
			clr_character_flag = longevity_character
			add_trait = longevity
		}
		if = {
			limit = { has_character_flag = immortal_character }
			clr_character_flag = immortal_character
			add_trait = immortal
		}
		if = {
			limit = { has_character_flag = avatar_character }
			clr_character_flag = avatar_character
			add_trait = avatar
		}
	}
}


character_event = {
	id = racial_aging.4
	is_triggered_only = yes # from on_decade pulse
	hide_window = yes

	has_character_flag = racial_aging0

	trigger = {
		faerun_immortal_race_trigger = no
		is_old_enough_to_die_trigger = yes
	}

	immediate = {
		character_event = {
			id = racial_aging.1
			days = 1
			random = 360
		}
	}

	weight_multiplier = {
		factor = 1
		death_of_old_age_score = yes

		additive_modifier = {
			value = 10000
			
			is_too_old_to_live_trigger = yes
		}
	}
}