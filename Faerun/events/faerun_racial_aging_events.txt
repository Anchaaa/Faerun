namespace = racial_aging

#This first is hidden and triggers for the long lived races and flag them eligible for racial_aging.4 where they become infirm at a certain age based on their health
character_event = {
	id = racial_aging.0
	min_age = 100
	hide_window = yes

	is_triggered_only = yes #from on_decade pulse

	trigger = {
		NOR = { 
			has_character_flag = racial_aging0
			has_character_flag = racial_aging1
		}
		BR_long_lived_races = yes
		faerun_immortal_race_trigger = no
		is_old_enough_to_die_trigger = yes
	}
	
	immediate = {
		set_character_flag = racial_aging0
	}
}


#This event makes the long lived races infirm for a period, before flagging them eligible for racial_aging.2 where they die of old age
character_event = {
	id = racial_aging.1
	desc = "racial_aging1desc"
	picture = GFX_evt_feast

	is_triggered_only = yes #from racial_aging.4

	option = {
		name = "OK"
		trigger = {
			NOR = { 
				faerun_immortal_race_trigger = yes
				faerun_secret_immortal_race_trigger = yes
			}
		}
		hidden_effect = {
			clr_character_flag = racial_aging0
			set_character_flag = racial_aging1
		}
		add_trait = infirm
	}
	option = {
		name = EVTOPTB_racial_aging_1
		trigger = {
			AND = {
				faerun_immortal_race_trigger = yes
				faerun_secret_immortal_race_trigger = no
			}
		}
		hidden_effect = {
			clr_character_flag = racial_aging0
		}
		
	}
	option = {
		name = EVTOPTB_racial_aging_2
		trigger = {
			faerun_secret_immortal_race_trigger = yes
		}
		hidden_effect = {
			clr_character_flag = racial_aging0
		}
		character_event = { id = secret_identity.0 }
	}
}

character_event = {
	id = racial_aging.2
	hide_window = yes

	is_triggered_only = yes #from on_decade_pulse

	has_character_flag = racial_aging1

	immediate = {
		hidden_effect = {
			clr_character_flag = racial_aging1
		}
		remove_trait = infirm
		if = {
			limit = {
				NOT = { faerun_immortal_race_trigger = yes }
			}
			death = { death_reason = death_longlived }
		}
	}

	weight_multiplier = {
		factor = 1
		death_of_old_age_score = yes

		additive_modifier = {
			value = 10000
			
			is_too_old_to_live_trigger = yes
		}
	}
}

# Toggle creature traits to get long-lived races to grow out of childhood and later into old age.
character_event = {
	id = racial_aging.3
	hide_window = yes
	is_triggered_only = yes # on_adulthood and yearly pulse
	#max_age = 256 # Integer overflow

	trigger = {
		olrox_all_immortals_trigger = yes
		OR = {
			age < 25
			has_character_flag = racial_aging0
			has_character_flag = racial_aging1
			#trait = undead

			trigger_if = {
				limit = { age == 40 }

				NOR = {
					trait = immortal
					trait = avatar
				}
			}
		}
	}

	immediate = {
		if = {
			limit = { age >= 256 }

			export_to_variable = {
				which = local_age_modulo
				value = age
			}
			modulo_variable = {
				which = local_age_modulo
				value = 256
			}
			if = {
				limit = {
					check_variable = {
						which = local_age_modulo
						value < 16
					}
				}

				add_age = -16
				set_character_flag = temp_flag
			}
		}

		refresh_immortal_age_effect = yes

		if = {
			limit = { has_character_flag = temp_flag }

			add_age = 16
			clr_character_flag = temp_flag
		}
	}
}


character_event = {
	id = racial_aging.4
	is_triggered_only = yes # from on_decade pulse
	hide_window = yes

	has_character_flag = racial_aging0

	trigger = {
		faerun_immortal_race_trigger = no
		is_old_enough_to_die_trigger = yes
	}

	immediate = {
		character_event = {
			id = racial_aging.1
			days = 1
			random = 360
		}
	}

	weight_multiplier = {
		factor = 1
		death_of_old_age_score = yes

		additive_modifier = {
			value = 10000
			
			is_too_old_to_live_trigger = yes
		}
	}
}

# getting rid of child portraits on the start of the game
character_event = {
	id = racial_aging.5
	hide_window = yes
	is_triggered_only = yes # on_startup

	min_age = 256

	trigger = {
		is_save_game = no
		olrox_all_immortals_trigger = yes
		trigger_if = {
			limit = { immortal_age >= 256 }

			immortal_age < 272
		}
		trigger_else_if = {
			limit = { immortal_age >= 512 }

			immortal_age < 528
		}
		trigger_else_if = {
			limit = { immortal_age >= 768 }

			immortal_age < 784
		}
		trigger_else_if = {
			limit = { immortal_age >= 1024 }

			immortal_age < 1040
		}
		trigger_else_if = {
			limit = { immortal_age >= 1280 }

			immortal_age < 1296
		}
		trigger_else_if = {
			limit = { immortal_age >= 1536 }

			immortal_age < 1552
		}
		trigger_else = {
			always = no
		}
	}

	immediate = {
		export_to_variable = {
			which = local_age_to_add
			value = age
		}
		subtract_variable = {
			which = local_age_to_add
			value = 40
		}
		set_variable = {
			which = local_age_to_subtract
			which = local_age_to_add
		}
		multiply_variable = {
			which = local_age_to_subtract
			value = -1
		}
		
		add_age = local_age_to_subtract # setting char's real age to 40
		refresh_immortal_age_effect = yes # setting immortal_age to 40
		add_age = local_age_to_add # setting real age back
	}
}