namespace = faerun_ruler_events

character_event = {
	#Ruler learns that idle courtiers have formed a party and decide to go for an adventure or on a raid. Serves as lvl-up and death opportunity for freeloading courtiers. Hidden init event
	id = faerun_ruler_events.1
	hide_window = yes
	only_playable = yes
	is_triggered_only = yes

	trigger = {
		any_courtier = {
			is_adult = yes
			liege = { character = ROOT }
			is_consort = no
			NOR = {
				any_spouse = { character = ROOT }
				dynasty = ROOT
				trigger_if = {
					limit = { is_a_mammal_trigger = yes }
					trait = pregnant
				}
			}
			is_inaccessible_trigger = no
			has_minor_title = no
			has_job_title = no
			is_landed = no
			prisoner = no
			has_injury_trigger = no
			is_maimed_trigger = no
			is_ill = no
		}
	}

	immediate = { # Up to 4 courtiers can be chosen
		random_courtier = { # first party member can be either raider or adventurer, but the next ones must be the same as the first one.
			limit = {
				is_adult = yes
				liege = { character = ROOT }
				is_consort = no
				NOR = {
					any_spouse = { character = ROOT }
					dynasty = ROOT
					trigger_if = {
						limit = { is_a_mammal_trigger = yes }
						trait = pregnant
					}
				}
				is_inaccessible_trigger = no
				has_minor_title = no
				has_job_title = no
				is_landed = no
				prisoner = no
				has_injury_trigger = no
				is_maimed_trigger = no
				is_ill = no
			}
			save_event_target_as = party_member_1
			save_event_target_as = party_leader
			if = { limit = { NOT = { trait = adventurer } } add_trait = adventurer }
			export_to_variable = { which = local_combat_rating_1 value = combat_rating }
			set_variable = { which = local_combat_rating_party which = local_combat_rating_1 }
			add_trait = travelling
			if = { limit = { z_has_class = no } pick_random_class_effect = yes }
		}
		random_courtier = {
			limit = {
				is_adult = yes
				liege = { character = ROOT }
				is_consort = no
				NOR = {
					any_spouse = { character = ROOT }
					dynasty = ROOT
					trigger_if = {
						limit = { is_a_mammal_trigger = yes }
						trait = pregnant
					}
				}
				is_inaccessible_trigger = no
				has_minor_title = no
				has_job_title = no
				is_landed = no
				prisoner = no
				has_injury_trigger = no
				is_maimed_trigger = no
				is_ill = no
				trigger_if = {
					limit = { 
						event_target:party_leader = {
							raiding_ruler_trigger = yes
						}
					}
					raiding_ruler_trigger = yes
				}
				trigger_else = {
					raiding_ruler_trigger = no
				}
			}
			preferred_limit = { # we try to pick party members with similar class level
				trigger_if = {
					limit = { event_target:party_leader = { z_legendary_class = yes } }
					OR = {
						z_legendary_class = yes
						z_renowned_class = yes
					}
				}
				trigger_else_if = {
					limit = { event_target:party_leader = { z_renowned_class = yes } }
					OR = {
						z_legendary_class = yes
						z_renowned_class = yes
						z_master_class = yes
					}
				}
				trigger_else_if = {
					limit = { event_target:party_leader = { z_master_class = yes } }
					OR = {
						z_renowned_class = yes
						z_master_class = yes
						z_expert_class = yes
					}
				}
				trigger_else_if = {
					limit = { event_target:party_leader = { z_expert_class = yes } }
					OR = {
						z_master_class = yes
						z_expert_class = yes
						z_journeyman_class = yes
					}
				}
				trigger_else_if = {
					limit = { event_target:party_leader = { z_journeyman_class = yes } }
					OR = {
						z_expert_class = yes
						z_journeyman_class = yes
						z_trained_class = yes
					}
				}
				trigger_else_if = {
					limit = { event_target:party_leader = { z_trained_class = yes } }
					OR = {
						z_journeyman_class = yes
						z_trained_class = yes
						z_basic_class = yes
					}
				}
				trigger_else = {
					OR = {
						z_trained_class = yes
						z_basic_class = yes
						z_has_class = no
					}
				}
			}
			save_event_target_as = party_member_2
			if = { limit = { NOT = { trait = adventurer } } add_trait = adventurer }
			export_to_variable = { which = local_combat_rating_2 value = combat_rating }
			change_variable = { which = local_combat_rating_party which = local_combat_rating_2 }
			add_trait = travelling
			if = { limit = { z_has_class = no } pick_random_class_effect = yes }
		}
		random_courtier = {
			limit = {
				is_adult = yes
				liege = { character = ROOT }
				is_consort = no
				NOR = {
					any_spouse = { character = ROOT }
					dynasty = ROOT
					trigger_if = {
						limit = { is_a_mammal_trigger = yes }
						trait = pregnant
					}
				}
				is_inaccessible_trigger = no
				has_minor_title = no
				has_job_title = no
				is_landed = no
				prisoner = no
				has_injury_trigger = no
				is_maimed_trigger = no
				is_ill = no
				trigger_if = {
					limit = { 
						event_target:party_leader = {
							raiding_ruler_trigger = yes
						}
					}
					raiding_ruler_trigger = yes
				}
				trigger_else = {
					raiding_ruler_trigger = no
				}
			}
			preferred_limit = { # we try to pick party members with similar class level
				trigger_if = {
					limit = { event_target:party_leader = { z_legendary_class = yes } }
					OR = {
						z_legendary_class = yes
						z_renowned_class = yes
					}
				}
				trigger_else_if = {
					limit = { event_target:party_leader = { z_renowned_class = yes } }
					OR = {
						z_legendary_class = yes
						z_renowned_class = yes
						z_master_class = yes
					}
				}
				trigger_else_if = {
					limit = { event_target:party_leader = { z_master_class = yes } }
					OR = {
						z_renowned_class = yes
						z_master_class = yes
						z_expert_class = yes
					}
				}
				trigger_else_if = {
					limit = { event_target:party_leader = { z_expert_class = yes } }
					OR = {
						z_master_class = yes
						z_expert_class = yes
						z_journeyman_class = yes
					}
				}
				trigger_else_if = {
					limit = { event_target:party_leader = { z_journeyman_class = yes } }
					OR = {
						z_expert_class = yes
						z_journeyman_class = yes
						z_trained_class = yes
					}
				}
				trigger_else_if = {
					limit = { event_target:party_leader = { z_trained_class = yes } }
					OR = {
						z_journeyman_class = yes
						z_trained_class = yes
						z_basic_class = yes
					}
				}
				trigger_else = {
					OR = {
						z_trained_class = yes
						z_basic_class = yes
						z_has_class = no
					}
				}
			}
			save_event_target_as = party_member_3
			if = { limit = { NOT = { trait = adventurer } } add_trait = adventurer }
			export_to_variable = { which = local_combat_rating_3 value = combat_rating }
			change_variable = { which = local_combat_rating_party which = local_combat_rating_3 }
			add_trait = travelling
			if = { limit = { z_has_class = no } pick_random_class_effect = yes }
		}
		random_courtier = {
			limit = {
				is_adult = yes
				liege = { character = ROOT }
				is_consort = no
				NOR = {
					any_spouse = { character = ROOT }
					dynasty = ROOT
					trigger_if = {
						limit = { is_a_mammal_trigger = yes }
						trait = pregnant
					}
				}
				is_inaccessible_trigger = no
				has_minor_title = no
				has_job_title = no
				is_landed = no
				prisoner = no
				has_injury_trigger = no
				is_maimed_trigger = no
				is_ill = no
				trigger_if = {
					limit = { 
						event_target:party_leader = {
							raiding_ruler_trigger = yes
						}
					}
					raiding_ruler_trigger = yes
				}
				trigger_else = {
					raiding_ruler_trigger = no
				}
			}
			preferred_limit = { # we try to pick party members with similar class level
				trigger_if = {
					limit = { event_target:party_leader = { z_legendary_class = yes } }
					OR = {
						z_legendary_class = yes
						z_renowned_class = yes
					}
				}
				trigger_else_if = {
					limit = { event_target:party_leader = { z_renowned_class = yes } }
					OR = {
						z_legendary_class = yes
						z_renowned_class = yes
						z_master_class = yes
					}
				}
				trigger_else_if = {
					limit = { event_target:party_leader = { z_master_class = yes } }
					OR = {
						z_renowned_class = yes
						z_master_class = yes
						z_expert_class = yes
					}
				}
				trigger_else_if = {
					limit = { event_target:party_leader = { z_expert_class = yes } }
					OR = {
						z_master_class = yes
						z_expert_class = yes
						z_journeyman_class = yes
					}
				}
				trigger_else_if = {
					limit = { event_target:party_leader = { z_journeyman_class = yes } }
					OR = {
						z_expert_class = yes
						z_journeyman_class = yes
						z_trained_class = yes
					}
				}
				trigger_else_if = {
					limit = { event_target:party_leader = { z_trained_class = yes } }
					OR = {
						z_journeyman_class = yes
						z_trained_class = yes
						z_basic_class = yes
					}
				}
				trigger_else = {
					OR = {
						z_trained_class = yes
						z_basic_class = yes
						z_has_class = no
					}
				}
			}
			save_event_target_as = party_member_4
			if = { limit = { NOT = { trait = adventurer } } add_trait = adventurer }
			export_to_variable = { which = local_combat_rating_4 value = combat_rating }
			change_variable = { which = local_combat_rating_party which = local_combat_rating_4 }
			add_trait = travelling
			if = { limit = { z_has_class = no } pick_random_class_effect = yes }
		}
		
		character_event = { id = faerun_ruler_events.2 }
		
	}
}

character_event = {
	# Notify ruler
	id = faerun_ruler_events.2
	portrait = event_target:party_leader
	#picture = # to be set
	#border =  # to be set
	only_playable = yes
	is_triggered_only = yes

	desc = { # text if courtier is the only one raider
		trigger = {
			calc_true_if = {
				amount == 1
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = yes }
		}
		text = EVTDESC_CASE1_FAERUN_RULER_EVENTS.2
	}
	desc = { # text if there is a party of 2 raiders
		trigger = {
			calc_true_if = {
				amount == 2
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = yes }
		}
		text = EVTDESC_CASE2_FAERUN_RULER_EVENTS.2
	}
	desc = { # text if there is a party of 3 raiders
		trigger = {
			calc_true_if = {
				amount == 3
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = yes }
		}
		text = EVTDESC_CASE3_FAERUN_RULER_EVENTS.2
	}
	desc = { # text if there is a party of 4 raiders
		trigger = {
			calc_true_if = {
				amount == 4
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = yes }
		}
		text = EVTDESC_CASE4_FAERUN_RULER_EVENTS.2
	}

	desc = { # text if courtier is the only one adventurer
		trigger = {
			calc_true_if = {
				amount == 1
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = no }
		}
		text = EVTDESC_CASE5_FAERUN_RULER_EVENTS.2
	}
	desc = { # text if there is a party of 2 adventurers
		trigger = {
			calc_true_if = {
				amount == 2
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = no }
		}
		text = EVTDESC_CASE6_FAERUN_RULER_EVENTS.2
	}
	desc = { # text if there is a party of 3 adventurers
		trigger = {
			calc_true_if = {
				amount == 3
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = no }
		}
		text = EVTDESC_CASE7_FAERUN_RULER_EVENTS.2
	}
	desc = { # text if there is a party of 4 adventurers
		trigger = {
			calc_true_if = {
				amount == 4
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = no }
		}
		text = EVTDESC_CASE8_FAERUN_RULER_EVENTS.2
	}

	immediate = {
		capital_scope = { province_event = { id = faerun_ruler_events.3 days = 30 random = 30 } } # tying to a province, not a character, so the event wouldn't stuck if the character dies
	}
	option = { # Ruler's acknowledgment if both the ruler and the party leader are raiders.
		name = EVTOPTA_FAERUN_RULER_EVENTS.2
		trigger = {
			event_target:party_leader = { raiding_ruler_trigger = yes }
			raiding_ruler_trigger = yes
		}
		tooltip = { event_target:party_member_1 = { add_trait = travelling } }
		if = { limit = { event_target:party_member_2 = { always = yes } } tooltip = { event_target:party_member_2 = { add_trait = travelling } } }
		if = { limit = { event_target:party_member_3 = { always = yes } } tooltip = { event_target:party_member_3 = { add_trait = travelling } } }
		if = { limit = { event_target:party_member_4 = { always = yes } } tooltip = { event_target:party_member_4 = { add_trait = travelling } } }
	}
	option = { # Ruler's acknowledgment if not raider, but the party leader is. Should implicate something like that you doubt that they departed with noble intentions, but you can't be sure
		name = EVTOPTB_FAERUN_RULER_EVENTS.2
		trigger = {
			event_target:party_leader = { raiding_ruler_trigger = yes }
			raiding_ruler_trigger = no
		}
		tooltip = { event_target:party_member_1 = { add_trait = travelling } }
		if = { limit = { event_target:party_member_2 = { always = yes } } tooltip = { event_target:party_member_2 = { add_trait = travelling } } }
		if = { limit = { event_target:party_member_3 = { always = yes } } tooltip = { event_target:party_member_3 = { add_trait = travelling } } }
		if = { limit = { event_target:party_member_4 = { always = yes } } tooltip = { event_target:party_member_4 = { add_trait = travelling } } }
	}
	option = { # Ruler's acknowledgment if the party leader is not raider
		name = EVTOPTC_FAERUN_RULER_EVENTS.2
		trigger = {
			event_target:party_leader = { raiding_ruler_trigger = no }
		}
		tooltip = { event_target:party_member_1 = { add_trait = travelling } }
		if = { limit = { event_target:party_member_2 = { always = yes } } tooltip = { event_target:party_member_2 = { add_trait = travelling } } }
		if = { limit = { event_target:party_member_3 = { always = yes } } tooltip = { event_target:party_member_3 = { add_trait = travelling } } }
		if = { limit = { event_target:party_member_4 = { always = yes } } tooltip = { event_target:party_member_4 = { add_trait = travelling } } }
	}
}

province_event = {
	# Hidden event. Courtiers arrived at a dungeon.
	id = faerun_ruler_events.3
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = { 
			limit = { event_target:party_leader = { is_alive = no } }
			if = { 
				limit = { event_target:party_member_2 = { always = yes is_alive = yes } }
				event_target:party_member_2 = { save_event_target_as = party_leader }
			}
			else_if = { 
				limit = { event_target:party_member_3 = { always = yes is_alive = yes } }
				event_target:party_member_3 = { save_event_target_as = party_leader }
			}
			else_if = { 
				limit = { event_target:party_member_4 = { always = yes is_alive = yes } }
				event_target:party_member_4 = { save_event_target_as = party_leader }
			}
			else = { # everyone died on the way
				province_event = { id = faerun_ruler_events.5 days = 30 random = 30 }
				break = yes
			}
		}
		random_list = {
			33 = {
				trigger = { check_variable = { which = local_combat_rating_party value < 80 } }
				set_variable = { which = local_combat_rating_enemy value = 5 } 
			}
			33 = {
				trigger = { check_variable = { which = local_combat_rating_party value < 80 } }
				set_variable = { which = local_combat_rating_enemy value = 10 } 
			}
			33 = {
				trigger = { check_variable = { which = local_combat_rating_party value < 80 } }
				set_variable = { which = local_combat_rating_enemy value = 15 }
			}
			33 = {
				trigger = { check_variable = { which = local_combat_rating_party value >= 80 } check_variable = { which = local_combat_rating_party value < 200 } }
				set_variable = { which = local_combat_rating_enemy value = 30 } 
			}
			33 = {
				trigger = { check_variable = { which = local_combat_rating_party value >= 80 } check_variable = { which = local_combat_rating_party value < 200 } }
				set_variable = { which = local_combat_rating_enemy value = 40 } 
			}
			33 = {
				trigger = { check_variable = { which = local_combat_rating_party value >= 80 } check_variable = { which = local_combat_rating_party value < 200 } }
				set_variable = { which = local_combat_rating_enemy value = 50 } 
			}
			33 = {
				trigger = { check_variable = { which = local_combat_rating_party value >= 200 } }
				set_variable = { which = local_combat_rating_enemy value = 60 } 
			}
			33 = {
				trigger = { check_variable = { which = local_combat_rating_party value >= 200 } }
				set_variable = { which = local_combat_rating_enemy value = 70 } 
			}
			33 = {
				trigger = { check_variable = { which = local_combat_rating_party value >= 200 } }
				set_variable = { which = local_combat_rating_enemy value = 80 } 
			}
		}
		simulate_duel_buff_party_effect = yes
		set_variable = {
			which = local_combatant_2_combat_rating
			which = local_combat_rating_enemy
		}
		if = { 
			limit = { event_target:party_member_1 = { always = yes is_alive = yes } }
			set_variable = {
				which = local_combatant_1_combat_rating
				which = local_combat_rating_1
			}
			event_target:party_member_1 = { character_event = { id = faerun_ruler_events.4 } }
		}
		if = { 
			limit = { event_target:party_member_2 = { always = yes is_alive = yes } }
			set_variable = {
				which = local_combatant_1_combat_rating
				which = local_combat_rating_2
			}
			event_target:party_member_2 = { character_event = { id = faerun_ruler_events.4 } }
		}
		if = { 
			limit = { event_target:party_member_3 = { always = yes is_alive = yes } }
			set_variable = {
				which = local_combatant_1_combat_rating
				which = local_combat_rating_3
			}
			event_target:party_member_3 = { character_event = { id = faerun_ruler_events.4 } }
		}
		if = { 
			limit = { event_target:party_member_4 = { always = yes is_alive = yes } }
			set_variable = {
				which = local_combatant_1_combat_rating
				which = local_combat_rating_4
			}
			event_target:party_member_4 = { character_event = { id = faerun_ruler_events.4 } }
		}
		province_event = { id = faerun_ruler_events.5 days = 30 random = 30 }
	}
}

character_event = {
	# Hidden events for duels
	id = faerun_ruler_events.4
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		simulate_duel_effect = yes
		set_variable = { which = local_lose_count which = local_combatant_2_win_count }
		if = { 
			limit = { # if the courtier is not the winner, he dies
				check_variable = { which = local_lose_count which >= local_round_count }
			}
			simulate_duel_injury_effect = yes
			death = { death_reason = death_adventuring }
		}
		else = { # get some injures
			add_blood_splatter_effect = yes
			simulate_duel_injury_effect = yes
			add_one_duel_experience_modifier = yes
		}

		if = { # We should not give too big rewards, so it's not too exploitable for players to kill childless lowborns for their artifacts or banishing them for their gold
			limit = { check_variable = { which = local_combat_rating_enemy value < 30 } }
			wealth = 5
			prestige = 5
			easy_adv_xp_effect = yes
		}
		else_if = {
			limit = { check_variable = { which = local_combat_rating_enemy value < 60 } }
			wealth = 15
			prestige = 15
			mod_adv_xp_effect = yes
		}
		else = {
			wealth = 30
			prestige = 30
			mod_adv_xp_effect = yes
		}
	}
}

province_event = {
	# Hidden event. Adventures return
	id = faerun_ruler_events.5
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = { 
			limit = { event_target:party_member_1 = { is_alive = yes } }
			event_target:party_member_1 = { remove_trait = travelling }
		}
		if = { 
			limit = { event_target:party_member_2 = { always = yes is_alive = yes } }
			event_target:party_member_2 = {
				remove_trait = travelling
				if = {
					limit = { event_target:party_leader = { is_alive = no } }
					save_event_target_as = party_leader
				}
			}
		}
		if = { 
			limit = { event_target:party_member_3 = { always = yes is_alive = yes } }
			event_target:party_member_3 = {
				remove_trait = travelling
				if = {
					limit = { event_target:party_leader = { is_alive = no } }
					save_event_target_as = party_leader
				}
			}
		}
		if = { 
			limit = { event_target:party_member_4 = { always = yes is_alive = yes } }
			event_target:party_member_4 = {
				remove_trait = travelling
				if = {
					limit = { event_target:party_leader = { is_alive = no } }
					save_event_target_as = party_leader
				}
			}
		}
		if = { # if somehow the party leader changed their liege, the notification event should fire for the current liege, unless all of the adventurers are dead
			limit = { event_target:party_leader = { is_alive = yes } }
			event_target:party_leader = { liege = { character_event = { id = faerun_ruler_events.6 } } }
		}
		else = {
			FROMFROM = { # the original ruler
				character_event = { id = faerun_ruler_events.6 }
			}
		}
	}
}

character_event = {
	#Courtiers return
	id = faerun_ruler_events.6
	portrait = event_target:party_leader
	#picture = # to set
	#border =  # to set

	only_playable = yes
	is_triggered_only = yes

	desc = { # text if 1 raider returned
		trigger = {
			calc_true_if = {
				amount == 1
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = yes }
		}
		text = EVTDESC_CASE1_FAERUN_RULER_EVENTS.6
	}
	desc = { # text if 2 raiders returned
		trigger = {
			calc_true_if = {
				amount == 2
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = yes }
		}
		text = EVTDESC_CASE2_FAERUN_RULER_EVENTS.6
	}
	desc = { # text if 3 raiders returned
		trigger = {
			calc_true_if = {
				amount == 3
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = yes }
		}
		text = EVTDESC_CASE3_FAERUN_RULER_EVENTS.6
	}
	desc = { # text if 4 raiders returned
		trigger = {
			calc_true_if = {
				amount == 4
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = yes }
		}
		text = EVTDESC_CASE4_FAERUN_RULER_EVENTS.6
	}

	desc = { # text if 1 adventurer returned
		trigger = {
			calc_true_if = {
				amount == 1
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = no }
		}
		text = EVTDESC_CASE5_FAERUN_RULER_EVENTS.6
	}
	desc = { # text if 2 adventurers returned
		trigger = {
			calc_true_if = {
				amount == 2
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = no }
		}
		text = EVTDESC_CASE6_FAERUN_RULER_EVENTS.6
	}
	desc = { # text if 3 adventurers returned
		trigger = {
			calc_true_if = {
				amount == 3
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = no }
		}
		text = EVTDESC_CASE7_FAERUN_RULER_EVENTS.6
	}
	desc = { # text if 4 adventurers returned
		trigger = {
			calc_true_if = {
				amount == 4
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = no }
		}
		text = EVTDESC_CASE8_FAERUN_RULER_EVENTS.6
	}

	desc = { # text if no raiders returned
		trigger = {
			calc_true_if = {
				amount == 0
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = yes }
		}
		text = EVTDESC_CASE9_FAERUN_RULER_EVENTS.6
	}

	desc = { # text if no adventurers returned
		trigger = {
			calc_true_if = {
				amount == 0
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = no }
			text = EVTDESC_CASE10_FAERUN_RULER_EVENTS.6
		}
	}

	option = { # Someone's alive. Ruler's acknowledgment if both the ruler and the party leader are raiders.
		name = EVTOPTA_FAERUN_RULER_EVENTS.6
		trigger = {
			calc_true_if = {
				amount >= 1
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = yes }
			raiding_ruler_trigger = yes
		}
		event_target:party_member_1 = { save_event_target_as = party_leader } # just for the portrait to show
		if = { limit = { event_target:party_member_2 = { always = yes } } event_target:party_member_2 = { save_event_target_as = party_leader } }
		if = { limit = { event_target:party_member_3 = { always = yes } } event_target:party_member_3 = { save_event_target_as = party_leader } }
		if = { limit = { event_target:party_member_4 = { always = yes } } event_target:party_member_4 = { save_event_target_as = party_leader } }
	}
	option = { # Someone's alive. Ruler's acknowledgment if not raider, but the party leader is.
		name = EVTOPTB_FAERUN_RULER_EVENTS.6
		trigger = {
			calc_true_if = {
				amount >= 1
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = yes }
			raiding_ruler_trigger = no
		}
		event_target:party_member_1 = { save_event_target_as = party_leader } # just for the portrait to show
		if = { limit = { event_target:party_member_2 = { always = yes } } event_target:party_member_2 = { save_event_target_as = party_leader } }
		if = { limit = { event_target:party_member_3 = { always = yes } } event_target:party_member_3 = { save_event_target_as = party_leader } }
		if = { limit = { event_target:party_member_4 = { always = yes } } event_target:party_member_4 = { save_event_target_as = party_leader } }
	}
	option = { # Someone's alive. Ruler's acknowledgment if the party leader is not raider
		name = EVTOPTC_FAERUN_RULER_EVENTS.6
		trigger = {
			calc_true_if = {
				amount >= 1
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = no }
		}
		event_target:party_member_1 = { save_event_target_as = party_leader } # just for the portrait to show
		if = { limit = { event_target:party_member_2 = { always = yes } } event_target:party_member_2 = { save_event_target_as = party_leader } }
		if = { limit = { event_target:party_member_3 = { always = yes } } event_target:party_member_3 = { save_event_target_as = party_leader } }
		if = { limit = { event_target:party_member_4 = { always = yes } } event_target:party_member_4 = { save_event_target_as = party_leader } }
	}

	option = { # Nobody's alive. Ruler's acknowledgment if both the ruler and the party leader are raiders.
		name = EVTOPTD_FAERUN_RULER_EVENTS.6
		trigger = {
			calc_true_if = {
				amount == 0
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = yes }
			raiding_ruler_trigger = yes
		}
		event_target:party_member_1 = { save_event_target_as = party_leader } # just for the portrait to show
		if = { limit = { event_target:party_member_2 = { always = yes } } event_target:party_member_2 = { save_event_target_as = party_leader } }
		if = { limit = { event_target:party_member_3 = { always = yes } } event_target:party_member_3 = { save_event_target_as = party_leader } }
		if = { limit = { event_target:party_member_4 = { always = yes } } event_target:party_member_4 = { save_event_target_as = party_leader } }
	}
	option = { # Nobody's alive. Ruler's acknowledgment if not raider, but the party leader is.
		name = EVTOPTE_FAERUN_RULER_EVENTS.6
		trigger = {
			calc_true_if = {
				amount == 0
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = yes }
			raiding_ruler_trigger = no
		}
		event_target:party_member_1 = { save_event_target_as = party_leader } # just for the portrait to show
		if = { limit = { event_target:party_member_2 = { always = yes } } event_target:party_member_2 = { save_event_target_as = party_leader } }
		if = { limit = { event_target:party_member_3 = { always = yes } } event_target:party_member_3 = { save_event_target_as = party_leader } }
		if = { limit = { event_target:party_member_4 = { always = yes } } event_target:party_member_4 = { save_event_target_as = party_leader } }
	}
	option = { # Nobody's alive. Ruler's acknowledgment if the party leader is not raider
		name = EVTOPTF_FAERUN_RULER_EVENTS.6
		trigger = {
			calc_true_if = {
				amount == 0
				event_target:party_member_1 = { is_alive = yes }
				event_target:party_member_2 = { always = yes is_alive = yes }
				event_target:party_member_3 = { always = yes is_alive = yes }
				event_target:party_member_4 = { always = yes is_alive = yes }
			}
			event_target:party_leader = { raiding_ruler_trigger = no }
		}
		event_target:party_member_1 = { save_event_target_as = party_leader } # just for the portrait to show
		if = { limit = { event_target:party_member_2 = { always = yes } } event_target:party_member_2 = { save_event_target_as = party_leader } }
		if = { limit = { event_target:party_member_3 = { always = yes } } event_target:party_member_3 = { save_event_target_as = party_leader } }
		if = { limit = { event_target:party_member_4 = { always = yes } } event_target:party_member_4 = { save_event_target_as = party_leader } }
	}
}